##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    14/Feb/2012  15:39:49 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\MP3\mp3de #
#                       c\mp3tabs.c                                          #
#    Command line    =  D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\MP3\mp3de #
#                       c\mp3tabs.c -D NDEBUG -lC                            #
#                       D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\Release\L #
#                       ist\ -lA D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\ #
#                       Release\List\ -o D:\SVN\SieELF\SieELF\x65_PCM_Player #
#                       \Player\Release\Obj\ -s9 --cpu_mode arm --endian     #
#                       little --cpu ARM926EJ-S --stack_align 4 --interwork  #
#                       -e --fpu None --dlib_config "D:\Program              #
#                       Files\IAR\Embedded Workbench 4.0                     #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" --preinclude       #
#                       swilib.h -I "D:\Program Files\IAR\Embedded           #
#                       Workbench 4.0 Evaluation\ARM\INC\"                   #
#                       --inline_threshold=16                                #
#    List file       =  D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\Release\L #
#                       ist\mp3tabs.lst                                      #
#    Object file     =  D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\Release\O #
#                       bj\mp3tabs.r79                                       #
#                                                                            #
#                                                                            #
##############################################################################

D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\MP3\mp3dec\mp3tabs.c
      1          /* ***** BEGIN LICENSE BLOCK ***** 
                                                   ^
Warning[Pa050]: non-native end of line sequence detected (this diagnostic is
          only issued once)
      2           * Version: RCSL 1.0/RPSL 1.0 
      3           *  
      4           * Portions Copyright (c) 1995-2002 RealNetworks, Inc. All Rights Reserved. 
      5           *      
      6           * The contents of this file, and the files included with this file, are 
      7           * subject to the current version of the RealNetworks Public Source License 
      8           * Version 1.0 (the "RPSL") available at 
      9           * http://www.helixcommunity.org/content/rpsl unless you have licensed 
     10           * the file under the RealNetworks Community Source License Version 1.0 
     11           * (the "RCSL") available at http://www.helixcommunity.org/content/rcsl, 
     12           * in which case the RCSL will apply. You may also obtain the license terms 
     13           * directly from RealNetworks.  You may not use this file except in 
     14           * compliance with the RPSL or, if you have a valid RCSL with RealNetworks 
     15           * applicable to this file, the RCSL.  Please see the applicable RPSL or 
     16           * RCSL for the rights, obligations and limitations governing use of the 
     17           * contents of the file.  
     18           *  
     19           * This file is part of the Helix DNA Technology. RealNetworks is the 
     20           * developer of the Original Code and owns the copyrights in the portions 
     21           * it created. 
     22           *  
     23           * This file, and the files included with this file, is distributed and made 
     24           * available on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER 
     25           * EXPRESS OR IMPLIED, AND REALNETWORKS HEREBY DISCLAIMS ALL SUCH WARRANTIES, 
     26           * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS 
     27           * FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT. 
     28           * 
     29           * Technology Compatibility Kit Test Suite(s) Location: 
     30           *    http://www.helixcommunity.org/content/tck 
     31           * 
     32           * Contributor(s): 
     33           *  
     34           * ***** END LICENSE BLOCK ***** */ 
     35          
     36          /**************************************************************************************
     37           * Fixed-point MP3 decoder
     38           * Jon Recker (jrecker@real.com), Ken Cooke (kenc@real.com)
     39           * June 2003
     40           *
     41           * mp3tabs.c - platform-independent tables for MP3 decoder (global, read-only)
     42           **************************************************************************************/
     43          
     44          #include "mp3common.h"
     45          
     46          /* indexing = [version][samplerate index]
     47           * sample rate of frame (Hz)
     48           */

   \                                 In segment DATA_C, align 4, align-sorted
     49          const int samplerateTab[3][3] = {
   \                     xmp3_samplerateTab:
   \   00000000   44AC000080BB       DC32 44100, 48000, 32000, 22050, 24000, 16000, 11025, 12000, 8000
   \              0000007D0000
   \              22560000C05D
   \              0000803E0000
   \              112B0000E02E
   \              0000401F0000
     50            {44100, 48000, 32000},		/* MPEG-1 */
     51            {22050, 24000, 16000},		/* MPEG-2 */
     52            {11025, 12000,  8000},		/* MPEG-2.5 */
     53          };
     54          
     55          /* indexing = [version][layer][bitrate index]
     56           * bitrate (kbps) of frame
     57           *   - bitrate index == 0 is "free" mode (bitrate determined on the fly by
     58           *       counting bits between successive sync words)
     59           */

   \                                 In segment DATA_C, align 4, align-sorted
     60          const short bitrateTab[3][3][15] = {
   \                     xmp3_bitrateTab:
   \   00000000   000020004000       DC16 0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416
   \              60008000A000
   \              C000E0000001
   \              200140016001
   \              8001A001    
   \   0000001C   C00100002000       DC16 448, 0, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320
   \              300038004000
   \              500060007000
   \              8000A000C000
   \              E00000014001
   \   0000003A   800100002000       DC16 384, 0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256
   \              280030003800
   \              400050006000
   \              70008000A000
   \              C000E0000001
   \   00000058   400100002000       DC16 320, 0, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224
   \              300038004000
   \              500060007000
   \              80009000A000
   \              B000C000E000
   \   00000076   000100000800       DC16 256, 0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160
   \              100018002000
   \              280030003800
   \              400050006000
   \              700080009000
   \              A000        
   \   00000096   000008001000       DC16 0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, 0
   \              180020002800
   \              300038004000
   \              500060007000
   \              80009000A000
   \              0000        
   \   000000B6   200030003800       DC16 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 0
   \              400050006000
   \              700080009000
   \              A000B000C000
   \              E00000010000
   \   000000D4   080010001800       DC16 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, 0, 8
   \              200028003000
   \              380040005000
   \              600070008000
   \              9000A0000000
   \              0800        
   \   000000F4   100018002000       DC16 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160
   \              280030003800
   \              400050006000
   \              700080009000
   \              A000        
   \   0000010E   0000               DC8 0, 0
     61          	{
     62          		/* MPEG-1 */
     63          		{  0, 32, 64, 96,128,160,192,224,256,288,320,352,384,416,448}, /* Layer 1 */
     64          		{  0, 32, 48, 56, 64, 80, 96,112,128,160,192,224,256,320,384}, /* Layer 2 */
     65          		{  0, 32, 40, 48, 56, 64, 80, 96,112,128,160,192,224,256,320}, /* Layer 3 */
     66          	},
     67          	{
     68          		/* MPEG-2 */
     69          		{  0, 32, 48, 56, 64, 80, 96,112,128,144,160,176,192,224,256}, /* Layer 1 */
     70          		{  0,  8, 16, 24, 32, 40, 48, 56, 64, 80, 96,112,128,144,160}, /* Layer 2 */
     71          		{  0,  8, 16, 24, 32, 40, 48, 56, 64, 80, 96,112,128,144,160}, /* Layer 3 */
     72          	},
     73          	{
     74          		/* MPEG-2.5 */
     75          		{  0, 32, 48, 56, 64, 80, 96,112,128,144,160,176,192,224,256}, /* Layer 1 */
     76          		{  0,  8, 16, 24, 32, 40, 48, 56, 64, 80, 96,112,128,144,160}, /* Layer 2 */
     77          		{  0,  8, 16, 24, 32, 40, 48, 56, 64, 80, 96,112,128,144,160}, /* Layer 3 */
     78          	},
     79          };
     80          
     81          /* indexing = [version][layer]
     82           * number of samples in one frame (per channel)
     83           */

   \                                 In segment DATA_C, align 4, align-sorted
     84          const short samplesPerFrameTab[3][3] = {
   \                     xmp3_samplesPerFrameTab:
   \   00000000   800180048004       DC16 384, 1152, 1152, 384, 1152, 576, 384, 1152, 576
   \              800180044002
   \              800180044002
   \   00000012   0000               DC8 0, 0
     85          	{384, 1152, 1152 }, /* MPEG1 */
     86          	{384, 1152,  576 }, /* MPEG2 */
     87          	{384, 1152,  576 }, /* MPEG2.5 */
     88          };
     89          
     90          /* layers 1, 2, 3 */

   \                                 In segment DATA_C, align 4, align-sorted
     91          const short bitsPerSlotTab[3] = {32, 8, 8};
   \                     xmp3_bitsPerSlotTab:
   \   00000000   200008000800       DC16 32, 8, 8
   \   00000006   0000               DC8 0, 0
     92          
     93          /* indexing = [version][mono/stereo]
     94           * number of bytes in side info section of bitstream 
     95           */

   \                                 In segment DATA_C, align 4, align-sorted
     96          const short sideBytesTab[3][2] = {
   \                     xmp3_sideBytesTab:
   \   00000000   110020000900       DC16 17, 32, 9, 17, 9, 17
   \              110009001100
     97          	{17, 32},	/* MPEG-1:   mono, stereo */
     98          	{ 9, 17},	/* MPEG-2:   mono, stereo */
     99          	{ 9, 17},	/* MPEG-2.5: mono, stereo */
    100          };
    101          
    102          /* indexing = [version][sampleRate][bitRate] 
    103           * for layer3, nSlots = floor(samps/frame * bitRate / sampleRate / 8)
    104           *   - add one pad slot if necessary
    105           */

   \                                 In segment DATA_C, align 4, align-sorted
    106          const short slotTab[3][3][15] = {
   \                     xmp3_slotTab:
   \   00000000   000068008200       DC16 0, 104, 130, 156, 182, 208, 261, 313, 365, 417, 522, 626, 731, 835
   \              9C00B600D000
   \              050139016D01
   \              A1010A027202
   \              DB024303    
   \   0000001C   140400006000       DC16 1044, 0, 96, 120, 144, 168, 192, 240, 288, 336, 384, 480, 576, 672
   \              78009000A800
   \              C000F0002001
   \              50018001E001
   \              4002A002    
   \   00000038   0003C0030000       DC16 768, 960, 0, 144, 180, 216, 252, 288, 360, 432, 504, 576, 720, 864
   \              9000B400D800
   \              FC0020016801
   \              B001F8014002
   \              D0026003    
   \   00000054   F0038004A005       DC16 1008, 1152, 1440, 0, 26, 52, 78, 104, 130, 156, 182, 208, 261, 313
   \              00001A003400
   \              4E0068008200
   \              9C00B600D000
   \              05013901    
   \   00000070   6D01A101D601       DC16 365, 417, 470, 522, 0, 24, 48, 72, 96, 120, 144, 168, 192, 240
   \              0A0200001800
   \              300048006000
   \              78009000A800
   \              C000F000    
   \   0000008C   200150018001       DC16 288, 336, 384, 432, 480, 0, 36, 72, 108, 144, 180, 216, 252, 288
   \              B001E0010000
   \              240048006C00
   \              9000B400D800
   \              FC002001    
   \   000000A8   6801B001F801       DC16 360, 432, 504, 576, 648, 720, 0, 52, 104, 156, 208, 261, 313, 365
   \              40028802D002
   \              000034006800
   \              9C00D0000501
   \              39016D01    
   \   000000C4   A1010A027202       DC16 417, 522, 626, 731, 835, 940, 1044, 0, 48, 96, 144, 192, 240, 288
   \              DB024303AC03
   \              140400003000
   \              60009000C000
   \              F0002001    
   \   000000E0   50018001E001       DC16 336, 384, 480, 576, 672, 768, 864, 960, 0, 72, 144, 216, 288, 360
   \              4002A0020003
   \              6003C0030000
   \              48009000D800
   \              20016801    
   \   000000FC   B001F8014002       DC16 432, 504, 576, 720, 864, 1008, 1152, 1296, 1440
   \              D0026003F003
   \              80041005A005
   \   0000010E   0000               DC8 0, 0
    107          	{
    108          		/* MPEG-1 */
    109          		{ 0, 104, 130, 156, 182, 208, 261, 313, 365, 417, 522, 626, 731, 835,1044 },	/* 44 kHz */
    110          		{ 0,  96, 120, 144, 168, 192, 240, 288, 336, 384, 480, 576, 672, 768, 960 },	/* 48 kHz */
    111          		{ 0, 144, 180, 216, 252, 288, 360, 432, 504, 576, 720, 864,1008,1152,1440 },	/* 32 kHz */
    112          	},
    113          	{	
    114          		/* MPEG-2 */
    115          		{ 0,  26,  52,  78, 104, 130, 156, 182, 208, 261, 313, 365, 417, 470, 522 },	/* 22 kHz */
    116          		{ 0,  24,  48,  72,  96, 120, 144, 168, 192, 240, 288, 336, 384, 432, 480 },	/* 24 kHz */
    117          		{ 0,  36,  72, 108, 144, 180, 216, 252, 288, 360, 432, 504, 576, 648, 720 },	/* 16 kHz */
    118          	},
    119          	{
    120          		/* MPEG-2.5 */
    121          		{ 0,  52, 104, 156, 208, 261, 313, 365, 417, 522, 626, 731, 835, 940,1044 },	/* 11 kHz */
    122          		{ 0,  48,  96, 144, 192, 240, 288, 336, 384, 480, 576, 672, 768, 864, 960 },	/* 12 kHz */
    123          		{ 0,  72, 144, 216, 288, 360, 432, 504, 576, 720, 864,1008,1152,1296,1440 },	/*  8 kHz */
    124          	},
    125          };
    126          
    127          /* indexing = [version][sampleRate][long (.l) or short (.s) block] 
    128           *   sfBandTable[v][s].l[cb] = index of first bin in critical band cb (long blocks)
    129           *   sfBandTable[v][s].s[cb] = index of first bin in critical band cb (short blocks)
    130           */

   \                                 In segment DATA_C, align 4, align-sorted
    131          const SFBandTable sfBandTable[3][3] = {
   \                     xmp3_sfBandTable:
   \   00000000   000004000800       DC16 0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162
   \              0C0010001400
   \              18001E002400
   \              2C0034003E00
   \              4A005A006E00
   \              8600A200    
   \   00000022   C400EE002001       DC16 196, 238, 288, 342, 418, 576, 0, 4, 8, 12, 16, 22, 30, 40, 52, 66
   \              5601A2014002
   \              000004000800
   \              0C0010001600
   \              1E0028003400
   \              4200        
   \   00000042   54006A008800       DC16 84, 106, 136, 192, 0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72
   \              C00000000400
   \              08000C001000
   \              140018001E00
   \              24002A003200
   \              3C004800    
   \   00000064   58006A008000       DC16 88, 106, 128, 156, 190, 230, 276, 330, 384, 576, 0, 4, 8, 12, 16
   \              9C00BE00E600
   \              14014A018001
   \              400200000400
   \              08000C001000
   \   00000082   16001C002600       DC16 22, 28, 38, 50, 64, 80, 100, 126, 192, 0, 4, 8, 12, 16, 20, 24, 30
   \              320040005000
   \              64007E00C000
   \              000004000800
   \              0C0010001400
   \              18001E00    
   \   000000A4   24002C003600       DC16 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550
   \              420052006600
   \              7E009C00C200
   \              F00028016C01
   \              C0012602    
   \   000000C0   400200000400       DC16 576, 0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192, 0, 6
   \              08000C001000
   \              16001E002A00
   \              3A004E006800
   \              8A00B400C000
   \              00000600    
   \   000000E2   0C0012001800       DC16 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238
   \              1E0024002C00
   \              360042005000
   \              600074008C00
   \              A800C800EE00
   \   00000100   1C0150018C01       DC16 284, 336, 396, 464, 522, 576, 0, 4, 8, 12, 18, 24, 32, 42, 56, 74
   \              D0010A024002
   \              000004000800
   \              0C0012001800
   \              20002A003800
   \              4A00        
   \   00000120   64008400AE00       DC16 100, 132, 174, 192, 0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96
   \              C00000000600
   \              0C0012001800
   \              1E0024002C00
   \              360042005000
   \              6000        
   \   00000140   72008800A200       DC16 114, 136, 162, 194, 232, 278, 332, 394, 464, 540, 576, 0, 4, 8, 12
   \              C200E8001601
   \              4C018A01D001
   \              1C0240020000
   \              040008000C00
   \   0000015E   12001A002400       DC16 18, 26, 36, 48, 62, 80, 104, 136, 180, 192, 0, 6, 12, 18, 24, 30
   \              30003E005000
   \              68008800B400
   \              C00000000600
   \              0C0012001800
   \              1E00        
   \   0000017E   24002C003600       DC16 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396
   \              420050006000
   \              74008C00A800
   \              C800EE001C01
   \              50018C01    
   \   0000019A   D0010A024002       DC16 464, 522, 576, 0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174
   \              000004000800
   \              0C0012001A00
   \              240030003E00
   \              500068008600
   \              AE00        
   \   000001BA   C00000000600       DC16 192, 0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168
   \              0C0012001800
   \              1E0024002C00
   \              360042005000
   \              600074008C00
   \              A800        
   \   000001DA   C800EE001C01       DC16 200, 238, 284, 336, 396, 464, 522, 576, 0, 4, 8, 12, 18, 26, 36
   \              50018C01D001
   \              0A0240020000
   \              040008000C00
   \              12001A002400
   \   000001F8   30003E005000       DC16 48, 62, 80, 104, 134, 174, 192, 0, 6, 12, 18, 24, 30, 36, 44, 54
   \              68008600AE00
   \              C00000000600
   \              0C0012001800
   \              1E0024002C00
   \              3600        
   \   00000218   420050006000       DC16 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576
   \              74008C00A800
   \              C800EE001C01
   \              50018C01D001
   \              0A024002    
   \   00000234   000004000800       DC16 0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192, 0, 12, 24
   \              0C0012001A00
   \              240030003E00
   \              500068008600
   \              AE00C0000000
   \              0C001800    
   \   00000256   240030003C00       DC16 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476
   \              480058006C00
   \              8400A000C000
   \              E80018015001
   \              9001DC01    
   \   00000272   360238023A02       DC16 566, 568, 570, 572, 574, 576, 0, 8, 16, 24, 36, 52, 72, 96, 124
   \              3C023E024002
   \              000008001000
   \              180024003400
   \              480060007C00
   \   00000290   A000A200A400       DC16 160, 162, 164, 166, 192
   \              A600C000    
   \   0000029A   0000               DC8 0, 0
    132          	{
    133          		/* MPEG-1 (44, 48, 32 kHz) */
    134          		{
    135          			{ 0,  4,  8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90,110,134,162,196,238,288,342,418,576 },
    136          			{ 0,  4,  8, 12, 16, 22, 30, 40, 52, 66, 84,106,136,192 }
    137          		},
    138          		{
    139          			{ 0,  4,  8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88,106,128,156,190,230,276,330,384,576 },
    140          			{ 0,  4,  8, 12, 16, 22, 28, 38, 50, 64, 80,100,126,192 }
    141          		},
    142          		{
    143          			{ 0,  4,  8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82,102,126,156,194,240,296,364,448,550,576 },
    144          			{ 0,  4,  8, 12, 16, 22, 30, 42, 58, 78,104,138,180,192 }
    145          		}
    146          	},
    147          
    148          	{
    149          		/* MPEG-2 (22, 24, 16 kHz) */
    150          		{
    151          			{ 0,  6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96,116,140,168,200,238,284,336,396,464,522,576 },
    152          			{ 0,  4,  8, 12, 18, 24, 32, 42, 56, 74,100,132,174,192 }
    153          		},
    154          		{
    155          			{ 0,  6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96,114,136,162,194,232,278,332,394,464,540,576 },
    156          			{ 0,  4,  8, 12, 18, 26, 36, 48, 62, 80,104,136,180,192 }
    157          		},
    158          		{
    159          			{ 0,  6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96,116,140,168,200,238,284,336,396,464,522,576 }, 
    160          			{ 0,  4,  8, 12, 18, 26, 36, 48, 62, 80,104,134,174,192 }
    161          		},
    162          	},
    163          
    164          	{
    165          		/* MPEG-2.5 (11, 12, 8 kHz) */
    166          		{
    167          			{ 0,  6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96,116,140,168,200,238,284,336,396,464,522,576 },
    168          			{ 0,  4,  8, 12, 18, 26, 36, 48, 62, 80,104,134,174,192 }
    169          		},
    170          		{
    171          			{ 0,  6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96,116,140,168,200,238,284,336,396,464,522,576 },
    172          			{ 0,  4,  8, 12, 18, 26, 36, 48, 62, 80,104,134,174,192 }
    173          		},
    174          		{
    175          			{ 0, 12, 24, 36, 48, 60, 72, 88,108,132,160,192,232,280,336,400,476,566,568,570,572,574,576 },
    176          			{ 0,  8, 16, 24, 36, 52, 72, 96,124,160,162,164,166,192 }
    177          		},
    178          	},
    179          };
    180          
    181          


   Segment part sizes:

     Function/Label          Bytes
     --------------          -----
     xmp3_samplerateTab        36
     xmp3_bitrateTab          272
     xmp3_samplesPerFrameTab   20
     xmp3_bitsPerSlotTab        8
     xmp3_sideBytesTab         12
     xmp3_slotTab             272
     xmp3_sfBandTable         668

 
 1 288 bytes in segment DATA_C
 
 1 288 bytes of CONST memory

Errors: none
Warnings: 1
