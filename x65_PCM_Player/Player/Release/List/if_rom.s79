//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   14/Feb/2012  15:39:47 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\AMR\if_r /
//                       om.c                                                /
//    Command line    =  D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\AMR\if_r /
//                       om.c -D NDEBUG -lC D:\SVN\SieELF\SieELF\x65_PCM_Pla /
//                       yer\Player\Release\List\ -lA                        /
//                       D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\Release\ /
//                       List\ -o D:\SVN\SieELF\SieELF\x65_PCM_Player\Player /
//                       \Release\Obj\ -s9 --cpu_mode arm --endian little    /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --fpu None --dlib_config "D:\Program                /
//                       Files\IAR\Embedded Workbench 4.0                    /
//                       Evaluation\ARM\LIB\dl5tpainl8n.h" --preinclude      /
//                       swilib.h -I "D:\Program Files\IAR\Embedded          /
//                       Workbench 4.0 Evaluation\ARM\INC\"                  /
//                       --inline_threshold=16                               /
//    List file       =  D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\Release\ /
//                       List\if_rom.s79                                     /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME if_rom

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        PUBWEAK `?*?DATA_ID`
        PUBWEAK ?init?tab?DATA_I
        PUBLIC block_size
        PUBLIC dfh_M12k
        PUBLIC dfh_M14k
        PUBLIC dfh_M16k
        PUBLIC dfh_M18k
        PUBLIC dfh_M20k
        PUBLIC dfh_M23k
        PUBLIC dfh_M24k
        PUBLIC dfh_M7k
        PUBLIC dfh_M9k
        PUBLIC dhf
        PUBLIC mode_12k
        PUBLIC mode_14k
        PUBLIC mode_16k
        PUBLIC mode_18k
        PUBLIC mode_20k
        PUBLIC mode_23k
        PUBLIC mode_24k
        PUBLIC mode_7k
        PUBLIC mode_9k
        PUBLIC mode_DTX
        PUBLIC nb_of_param
// D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\AMR\if_rom.c
//    1 /*
//    2  *===================================================================
//    3  *  3GPP AMR Wideband Floating-point Speech Codec
//    4  *===================================================================
//    5  */
//    6 #ifndef IF_H
//    7 #define IF_H
//    8 
//    9 #include "typedef.h"
//   10 
//   11 /*
//   12  * definition of ants
//   13  */
//   14 #define NUM_OF_SPMODES 9
//   15 
//   16 /* number of parameters */
//   17 #define PRMNO_7k 18
//   18 #define PRMNO_9k 32
//   19 #define PRMNO_12k 36
//   20 #define PRMNO_14k 36
//   21 #define PRMNO_16k 36
//   22 #define PRMNO_18k 52
//   23 #define PRMNO_20k 52
//   24 #define PRMNO_23k 52
//   25 #define PRMNO_24k 56
//   26 #define PRMNO_SID 7
//   27 #define NB_PARM_MAX PRMNO_24k
//   28 
//   29 /* number of bits */
//   30 #ifndef NBBITS_7k
//   31 #define NBBITS_7k 132
//   32 #define NBBITS_9k 177
//   33 #define NBBITS_12k 253
//   34 #define NBBITS_14k 285
//   35 #define NBBITS_16k 317
//   36 #define NBBITS_18k 365
//   37 #define NBBITS_20k 397
//   38 #define NBBITS_23k 461
//   39 #define NBBITS_24k 477
//   40 #define NBBITS_SID 35
//   41 #endif
//   42 
//   43 /* number of total bits */
//   44 #define HEADER_SIZE 6   /* real size + 1 */
//   45 #define T_NBBITS_7k (NBBITS_7k + HEADER_SIZE)
//   46 #define T_NBBITS_9k (NBBITS_9k + HEADER_SIZE)
//   47 #define T_NBBITS_12k (NBBITS_12k + HEADER_SIZE)
//   48 #define T_NBBITS_14k (NBBITS_14k + HEADER_SIZE)
//   49 #define T_NBBITS_16k (NBBITS_16k + HEADER_SIZE)
//   50 #define T_NBBITS_18k (NBBITS_18k + HEADER_SIZE)
//   51 #define T_NBBITS_20k (NBBITS_20k + HEADER_SIZE)
//   52 #define T_NBBITS_23k (NBBITS_23k + HEADER_SIZE)
//   53 #define T_NBBITS_24k (NBBITS_24k + HEADER_SIZE)
//   54 #define T_NBBITS_SID (NBBITS_SID + HEADER_SIZE)
//   55 
//   56 #define TX_SPEECH 0
//   57 #define TX_SID_FIRST 1
//   58 #define TX_SID_UPDATE 2
//   59 #define TX_NO_DATA 3
//   60 
//   61 #define RX_SPEECH_GOOD              0
//   62 #define RX_SPEECH_PROBABLY_DEGRADED 1
//   63 #define RX_SPEECH_LOST              2
//   64 #define RX_SPEECH_BAD               3
//   65 #define RX_SID_FIRST                4
//   66 #define RX_SID_UPDATE               5
//   67 #define RX_SID_BAD                  6
//   68 #define RX_NO_DATA                  7
//   69 
//   70 /* One encoded frame (bytes) */
//   71 /*
//   72  * 6 bytes are used both for mode 9 and 10.
//   73  * Mode 9 is used in encoder and mode 10 in IF2
//   74  */
//   75 #ifdef IF2

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//   76  UWord8 block_size[16]= {18, 23, 33, 37, 41, 47, 51, 59, 61, 6, 6, 0, 0, 0, 1, 1};
block_size:
        DS8 16
        REQUIRE `?<Initializer for block_size>`
//   77 #else
//   78  UWord8 block_size[16]= {18, 24, 33, 37, 41, 47, 51, 59, 61, 6, 6, 0, 0, 0, 1, 1};
//   79 #endif
//   80 /*
//   81  * tables
//   82  */
//   83 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//   84  Word16 mode_7k[NBBITS_7k << 1] = {
mode_7k:
        DS8 528
        REQUIRE `?<Initializer for mode_7k>`
//   85    0, 0x1, 1, 0x8, 1, 0x4, 1, 0x2,
//   86    8, 0x2, 11, 0x2, 14, 0x2, 17, 0x2,
//   87    8, 0x1, 11, 0x1, 1, 0x1, 1, 0x10,
//   88    6, 0x80, 6, 0x40, 6, 0x20, 6, 0x10,
//   89    8, 0x10, 11, 0x10, 14, 0x10, 17, 0x10,
//   90    8, 0x4, 11, 0x4, 14, 0x4, 17, 0x4,
//   91    14, 0x1, 17, 0x1, 17, 0x8, 6, 0x8,
//   92    6, 0x4, 11, 0x20, 17, 0x20, 1, 0x80,
//   93    1, 0x20, 8, 0x20, 14, 0x20, 11, 0x8,
//   94    14, 0x8, 8, 0x8, 1, 0x40, 9, 0x10,
//   95    15, 0x10, 15, 0x8, 12, 0x10, 3, 0x10,
//   96    3, 0x2, 3, 0x1, 9, 0x8, 12, 0x8,
//   97    3, 0x20, 3, 0x8, 3, 0x4, 3, 0x40,
//   98    2, 0x8, 12, 0x4, 6, 0x2, 12, 0x2,
//   99    9, 0x4, 15, 0x4, 2, 0x4, 4, 0x40,
//  100    4, 0x20, 4, 0x10, 4, 0x8, 4, 0x4,
//  101    2, 0x2, 2, 0x1, 6, 0x1, 12, 0x1,
//  102    9, 0x2, 15, 0x2, 2, 0x80, 2, 0x20,
//  103    2, 0x40, 2, 0x10, 9, 0x1, 15, 0x1,
//  104    4, 0x2, 4, 0x1, 5, 0x20, 5, 0x10,
//  105    5, 0x4, 5, 0x8, 5, 0x2, 5, 0x1,
//  106    7, 0x800, 7, 0x20, 10, 0x800, 10, 0x20,
//  107    13, 0x800, 13, 0x20, 16, 0x800, 16, 0x20,
//  108    7, 0x400, 10, 0x400, 13, 0x400, 16, 0x400,
//  109    7, 0x10, 10, 0x10, 13, 0x10, 16, 0x10,
//  110    7, 0x200, 10, 0x200, 13, 0x200, 16, 0x200,
//  111    7, 0x8, 10, 0x8, 13, 0x8, 16, 0x8,
//  112    7, 0x100, 10, 0x100, 13, 0x100, 16, 0x100,
//  113    7, 0x4, 10, 0x4, 13, 0x4, 16, 0x4,
//  114    7, 0x80, 10, 0x80, 13, 0x80, 16, 0x80,
//  115    7, 0x2, 10, 0x2, 13, 0x2, 16, 0x2,
//  116    7, 0x40, 10, 0x40, 13, 0x40, 16, 0x40,
//  117    7, 0x1, 10, 0x1, 13, 0x1, 16, 0x1
//  118 };
//  119 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  120  Word16 mode_9k[NBBITS_9k << 1] = {
mode_9k:
        DS8 708
        REQUIRE `?<Initializer for mode_9k>`
//  121    0, 0x1, 1, 0x10, 1, 0x4, 1, 0x2,
//  122    1, 0x8, 1, 0x20, 8, 0x80, 8, 0x40,
//  123    8, 0x20, 20, 0x80, 20, 0x40, 20, 0x20,
//  124    13, 0x20, 19, 0x20, 25, 0x20, 31, 0x20,
//  125    13, 0x1, 19, 0x1, 25, 0x1, 31, 0x1,
//  126    13, 0x8, 19, 0x8, 25, 0x8, 31, 0x8,
//  127    13, 0x4, 19, 0x4, 25, 0x4, 31, 0x4,
//  128    13, 0x2, 19, 0x2, 25, 0x2, 31, 0x2,
//  129    13, 0x10, 19, 0x10, 25, 0x10, 31, 0x10,
//  130    8, 0x10, 20, 0x10, 8, 0x8, 1, 0x40,
//  131    1, 0x80, 14, 0x10, 20, 0x8, 26, 0x10,
//  132    3, 0x8, 3, 0x2, 2, 0x10, 3, 0x20,
//  133    3, 0x10, 3, 0x4, 2, 0x1, 4, 0x10,
//  134    2, 0x8, 2, 0x40, 2, 0x4, 4, 0x20,
//  135    4, 0x40, 3, 0x1, 4, 0x8, 1, 0x1,
//  136    2, 0x2, 8, 0x4, 20, 0x4, 5, 0x20,
//  137    14, 0x8, 26, 0x8, 2, 0x80, 5, 0x8,
//  138    2, 0x20, 14, 0x4, 26, 0x4, 8, 0x2,
//  139    20, 0x2, 4, 0x2, 4, 0x4, 14, 0x2,
//  140    26, 0x2, 5, 0x4, 5, 0x2, 4, 0x1,
//  141    7, 0x1, 5, 0x10, 5, 0x40, 8, 0x1,
//  142    20, 0x1, 6, 0x10, 5, 0x1, 6, 0x4,
//  143    6, 0x8, 6, 0x2, 14, 0x1, 26, 0x1,
//  144    6, 0x1, 7, 0x10, 7, 0x8, 7, 0x4,
//  145    7, 0x2, 9, 0x10, 10, 0x10, 11, 0x10,
//  146    12, 0x10, 15, 0x10, 16, 0x10, 17, 0x10,
//  147    18, 0x10, 21, 0x10, 22, 0x10, 23, 0x10,
//  148    24, 0x10, 27, 0x10, 28, 0x10, 29, 0x10,
//  149    30, 0x10, 9, 0x8, 15, 0x8, 21, 0x8,
//  150    27, 0x8, 10, 0x8, 16, 0x8, 22, 0x8,
//  151    28, 0x8, 11, 0x8, 17, 0x8, 23, 0x8,
//  152    29, 0x8, 12, 0x8, 18, 0x8, 24, 0x8,
//  153    30, 0x8, 9, 0x4, 15, 0x4, 21, 0x4,
//  154    27, 0x4, 10, 0x4, 16, 0x4, 22, 0x4,
//  155    28, 0x4, 11, 0x4, 17, 0x4, 23, 0x4,
//  156    29, 0x4, 12, 0x4, 18, 0x4, 24, 0x4,
//  157    30, 0x4, 9, 0x2, 15, 0x2, 21, 0x2,
//  158    27, 0x2, 10, 0x2, 16, 0x2, 22, 0x2,
//  159    28, 0x2, 11, 0x2, 17, 0x2, 23, 0x2,
//  160    29, 0x2, 12, 0x2, 18, 0x2, 24, 0x2,
//  161    30, 0x2, 9, 0x1, 15, 0x1, 21, 0x1,
//  162    27, 0x1, 10, 0x1, 16, 0x1, 22, 0x1,
//  163    28, 0x1, 11, 0x1, 17, 0x1, 23, 0x1,
//  164    29, 0x1, 12, 0x1, 18, 0x1, 24, 0x1,
//  165    30, 0x1
//  166 };
//  167 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  168  Word16 mode_12k[NBBITS_12k << 1] = {
mode_12k:
        DS8 1012
        REQUIRE `?<Initializer for mode_12k>`
//  169    0, 0x1, 1, 0x10, 1, 0x4, 14, 0x40,
//  170    21, 0x40, 28, 0x40, 35, 0x40, 1, 0x2,
//  171    1, 0x8, 1, 0x20, 8, 0x100, 8, 0x80,
//  172    8, 0x40, 8, 0x20, 8, 0x10, 22, 0x100,
//  173    22, 0x80, 22, 0x40, 22, 0x20, 22, 0x10,
//  174    14, 0x20, 21, 0x20, 28, 0x20, 35, 0x20,
//  175    14, 0x1, 21, 0x1, 28, 0x1, 35, 0x1,
//  176    14, 0x8, 21, 0x8, 28, 0x8, 35, 0x8,
//  177    14, 0x4, 21, 0x4, 28, 0x4, 35, 0x4,
//  178    15, 0x20, 29, 0x20, 14, 0x2, 21, 0x2,
//  179    28, 0x2, 35, 0x2, 14, 0x10, 21, 0x10,
//  180    28, 0x10, 35, 0x10, 8, 0x8, 1, 0x40,
//  181    1, 0x80, 15, 0x10, 29, 0x10, 22, 0x8,
//  182    3, 0x8, 3, 0x2, 2, 0x10, 3, 0x20,
//  183    3, 0x10, 3, 0x4, 2, 0x1, 4, 0x10,
//  184    2, 0x8, 2, 0x40, 2, 0x4, 4, 0x20,
//  185    4, 0x40, 3, 0x1, 4, 0x8, 1, 0x1,
//  186    2, 0x2, 8, 0x4, 22, 0x4, 5, 0x20,
//  187    15, 0x8, 29, 0x8, 2, 0x80, 5, 0x8,
//  188    2, 0x20, 15, 0x4, 29, 0x4, 8, 0x2,
//  189    22, 0x2, 4, 0x2, 4, 0x4, 15, 0x2,
//  190    29, 0x2, 5, 0x4, 5, 0x2, 4, 0x1,
//  191    7, 0x1, 5, 0x10, 5, 0x40, 8, 0x1,
//  192    22, 0x1, 6, 0x10, 5, 0x1, 6, 0x4,
//  193    6, 0x8, 6, 0x2, 15, 0x1, 29, 0x1,
//  194    6, 0x1, 7, 0x10, 7, 0x8, 7, 0x4,
//  195    7, 0x2, 9, 0x1, 16, 0x1, 23, 0x1,
//  196    30, 0x1, 10, 0x100, 11, 0x100, 12, 0x100,
//  197    13, 0x100, 17, 0x100, 18, 0x100, 19, 0x100,
//  198    20, 0x100, 24, 0x100, 25, 0x100, 26, 0x100,
//  199    27, 0x100, 31, 0x100, 32, 0x100, 33, 0x100,
//  200    34, 0x100, 10, 0x80, 17, 0x80, 24, 0x80,
//  201    31, 0x80, 10, 0x8, 17, 0x8, 24, 0x8,
//  202    31, 0x8, 11, 0x80, 18, 0x80, 25, 0x80,
//  203    32, 0x80, 11, 0x8, 18, 0x8, 25, 0x8,
//  204    32, 0x8, 12, 0x80, 19, 0x80, 26, 0x80,
//  205    33, 0x80, 12, 0x8, 19, 0x8, 26, 0x8,
//  206    33, 0x8, 13, 0x80, 20, 0x80, 27, 0x80,
//  207    34, 0x80, 13, 0x8, 20, 0x8, 27, 0x8,
//  208    34, 0x8, 10, 0x40, 17, 0x40, 24, 0x40,
//  209    31, 0x40, 10, 0x4, 17, 0x4, 24, 0x4,
//  210    31, 0x4, 11, 0x40, 18, 0x40, 25, 0x40,
//  211    32, 0x40, 11, 0x4, 18, 0x4, 25, 0x4,
//  212    32, 0x4, 12, 0x40, 19, 0x40, 26, 0x40,
//  213    33, 0x40, 12, 0x4, 19, 0x4, 26, 0x4,
//  214    33, 0x4, 13, 0x40, 20, 0x40, 27, 0x40,
//  215    34, 0x40, 13, 0x4, 20, 0x4, 27, 0x4,
//  216    34, 0x4, 10, 0x20, 17, 0x20, 24, 0x20,
//  217    31, 0x20, 10, 0x2, 17, 0x2, 24, 0x2,
//  218    31, 0x2, 11, 0x20, 18, 0x20, 25, 0x20,
//  219    32, 0x20, 11, 0x2, 18, 0x2, 25, 0x2,
//  220    32, 0x2, 12, 0x20, 19, 0x20, 26, 0x20,
//  221    33, 0x20, 12, 0x2, 19, 0x2, 26, 0x2,
//  222    33, 0x2, 13, 0x20, 20, 0x20, 27, 0x20,
//  223    34, 0x20, 13, 0x2, 20, 0x2, 27, 0x2,
//  224    34, 0x2, 10, 0x10, 17, 0x10, 24, 0x10,
//  225    31, 0x10, 10, 0x1, 17, 0x1, 24, 0x1,
//  226    31, 0x1, 11, 0x10, 18, 0x10, 25, 0x10,
//  227    32, 0x10, 11, 0x1, 18, 0x1, 25, 0x1,
//  228    32, 0x1, 12, 0x10, 19, 0x10, 26, 0x10,
//  229    33, 0x10, 12, 0x1, 19, 0x1, 26, 0x1,
//  230    33, 0x1, 13, 0x10, 20, 0x10, 27, 0x10,
//  231    34, 0x10, 13, 0x1, 20, 0x1, 27, 0x1,
//  232    34, 0x1
//  233 };
//  234 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  235  Word16 mode_14k[NBBITS_14k << 1] = {
mode_14k:
        DS8 1140
        REQUIRE `?<Initializer for mode_14k>`
//  236    0, 0x1, 1, 0x10, 1, 0x4, 14, 0x40,
//  237    21, 0x40, 28, 0x40, 35, 0x40, 1, 0x2,
//  238    1, 0x8, 1, 0x20, 8, 0x100, 8, 0x80,
//  239    8, 0x40, 8, 0x20, 8, 0x10, 22, 0x100,
//  240    22, 0x80, 22, 0x40, 22, 0x20, 22, 0x10,
//  241    14, 0x20, 21, 0x20, 28, 0x20, 35, 0x20,
//  242    14, 0x1, 21, 0x1, 28, 0x1, 35, 0x1,
//  243    14, 0x8, 21, 0x8, 28, 0x8, 35, 0x8,
//  244    14, 0x4, 21, 0x4, 28, 0x4, 35, 0x4,
//  245    15, 0x20, 29, 0x20, 14, 0x2, 21, 0x2,
//  246    28, 0x2, 35, 0x2, 14, 0x10, 21, 0x10,
//  247    28, 0x10, 35, 0x10, 8, 0x8, 1, 0x40,
//  248    1, 0x80, 15, 0x10, 29, 0x10, 22, 0x8,
//  249    3, 0x8, 3, 0x2, 2, 0x10, 3, 0x20,
//  250    3, 0x10, 3, 0x4, 2, 0x1, 4, 0x10,
//  251    2, 0x8, 2, 0x40, 2, 0x4, 4, 0x20,
//  252    4, 0x40, 3, 0x1, 4, 0x8, 1, 0x1,
//  253    2, 0x2, 8, 0x4, 22, 0x4, 5, 0x20,
//  254    15, 0x8, 29, 0x8, 2, 0x80, 5, 0x8,
//  255    2, 0x20, 15, 0x4, 29, 0x4, 8, 0x2,
//  256    22, 0x2, 4, 0x2, 4, 0x4, 15, 0x2,
//  257    29, 0x2, 5, 0x4, 5, 0x2, 4, 0x1,
//  258    7, 0x1, 5, 0x10, 5, 0x40, 8, 0x1,
//  259    22, 0x1, 6, 0x10, 5, 0x1, 6, 0x4,
//  260    6, 0x8, 6, 0x2, 15, 0x1, 29, 0x1,
//  261    6, 0x1, 7, 0x10, 7, 0x8, 7, 0x4,
//  262    7, 0x2, 9, 0x1, 16, 0x1, 23, 0x1,
//  263    30, 0x1, 10, 0x80, 17, 0x80, 24, 0x80,
//  264    31, 0x80, 11, 0x80, 18, 0x80, 25, 0x80,
//  265    32, 0x80, 10, 0x1000, 17, 0x1000, 24, 0x1000,
//  266    31, 0x1000, 10, 0x40, 17, 0x40, 24, 0x40,
//  267    31, 0x40, 11, 0x1000, 18, 0x1000, 25, 0x1000,
//  268    32, 0x1000, 11, 0x40, 18, 0x40, 25, 0x40,
//  269    32, 0x40, 12, 0x100, 19, 0x100, 26, 0x100,
//  270    33, 0x100, 13, 0x100, 20, 0x100, 27, 0x100,
//  271    34, 0x100, 12, 0x80, 19, 0x80, 26, 0x80,
//  272    33, 0x80, 13, 0x80, 20, 0x80, 27, 0x80,
//  273    34, 0x80, 12, 0x40, 19, 0x40, 26, 0x40,
//  274    33, 0x40, 13, 0x40, 20, 0x40, 27, 0x40,
//  275    34, 0x40, 12, 0x20, 19, 0x20, 26, 0x20,
//  276    33, 0x20, 13, 0x20, 20, 0x20, 27, 0x20,
//  277    34, 0x20, 10, 0x20, 17, 0x20, 24, 0x20,
//  278    31, 0x20, 11, 0x20, 18, 0x20, 25, 0x20,
//  279    32, 0x20, 10, 0x10, 17, 0x10, 24, 0x10,
//  280    31, 0x10, 11, 0x10, 18, 0x10, 25, 0x10,
//  281    32, 0x10, 12, 0x10, 19, 0x10, 26, 0x10,
//  282    33, 0x10, 13, 0x10, 20, 0x10, 27, 0x10,
//  283    34, 0x10, 10, 0x800, 17, 0x800, 24, 0x800,
//  284    31, 0x800, 10, 0x8, 17, 0x8, 24, 0x8,
//  285    31, 0x8, 11, 0x800, 18, 0x800, 25, 0x800,
//  286    32, 0x800, 11, 0x8, 18, 0x8, 25, 0x8,
//  287    32, 0x8, 12, 0x8, 19, 0x8, 26, 0x8,
//  288    33, 0x8, 13, 0x8, 20, 0x8, 27, 0x8,
//  289    34, 0x8, 10, 0x400, 17, 0x400, 24, 0x400,
//  290    31, 0x400, 10, 0x4, 17, 0x4, 24, 0x4,
//  291    31, 0x4, 11, 0x400, 18, 0x400, 25, 0x400,
//  292    32, 0x400, 11, 0x4, 18, 0x4, 25, 0x4,
//  293    32, 0x4, 12, 0x4, 19, 0x4, 26, 0x4,
//  294    33, 0x4, 13, 0x4, 20, 0x4, 27, 0x4,
//  295    34, 0x4, 10, 0x200, 17, 0x200, 24, 0x200,
//  296    31, 0x200, 10, 0x2, 17, 0x2, 24, 0x2,
//  297    31, 0x2, 11, 0x200, 18, 0x200, 25, 0x200,
//  298    32, 0x200, 11, 0x2, 18, 0x2, 25, 0x2,
//  299    32, 0x2, 12, 0x2, 19, 0x2, 26, 0x2,
//  300    33, 0x2, 13, 0x2, 20, 0x2, 27, 0x2,
//  301    34, 0x2, 10, 0x100, 17, 0x100, 24, 0x100,
//  302    31, 0x100, 10, 0x1, 17, 0x1, 24, 0x1,
//  303    31, 0x1, 11, 0x100, 18, 0x100, 25, 0x100,
//  304    32, 0x100, 11, 0x1, 18, 0x1, 25, 0x1,
//  305    32, 0x1, 12, 0x1, 19, 0x1, 26, 0x1,
//  306    33, 0x1, 13, 0x1, 20, 0x1, 27, 0x1,
//  307    34, 0x1
//  308 };
//  309 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  310  Word16 mode_16k[NBBITS_16k << 1] = {
mode_16k:
        DS8 1268
        REQUIRE `?<Initializer for mode_16k>`
//  311    0, 0x1, 1, 0x10, 1, 0x4, 14, 0x40,
//  312    21, 0x40, 28, 0x40, 35, 0x40, 1, 0x2,
//  313    1, 0x8, 1, 0x20, 8, 0x100, 8, 0x80,
//  314    8, 0x40, 8, 0x20, 8, 0x10, 22, 0x100,
//  315    22, 0x80, 22, 0x40, 22, 0x20, 22, 0x10,
//  316    14, 0x20, 21, 0x20, 28, 0x20, 35, 0x20,
//  317    14, 0x1, 21, 0x1, 28, 0x1, 35, 0x1,
//  318    14, 0x8, 21, 0x8, 28, 0x8, 35, 0x8,
//  319    14, 0x4, 21, 0x4, 28, 0x4, 35, 0x4,
//  320    15, 0x20, 29, 0x20, 14, 0x2, 21, 0x2,
//  321    28, 0x2, 35, 0x2, 14, 0x10, 21, 0x10,
//  322    28, 0x10, 35, 0x10, 8, 0x8, 1, 0x40,
//  323    1, 0x80, 15, 0x10, 29, 0x10, 22, 0x8,
//  324    3, 0x8, 3, 0x2, 2, 0x10, 3, 0x20,
//  325    3, 0x10, 3, 0x4, 2, 0x1, 4, 0x10,
//  326    2, 0x8, 2, 0x40, 2, 0x4, 4, 0x20,
//  327    4, 0x40, 3, 0x1, 4, 0x8, 1, 0x1,
//  328    2, 0x2, 8, 0x4, 22, 0x4, 5, 0x20,
//  329    15, 0x8, 29, 0x8, 2, 0x80, 5, 0x8,
//  330    2, 0x20, 15, 0x4, 29, 0x4, 8, 0x2,
//  331    22, 0x2, 4, 0x2, 4, 0x4, 15, 0x2,
//  332    29, 0x2, 5, 0x4, 5, 0x2, 4, 0x1,
//  333    7, 0x1, 5, 0x10, 5, 0x40, 8, 0x1,
//  334    22, 0x1, 6, 0x10, 5, 0x1, 6, 0x4,
//  335    6, 0x8, 6, 0x2, 15, 0x1, 29, 0x1,
//  336    6, 0x1, 7, 0x10, 7, 0x8, 7, 0x4,
//  337    7, 0x2, 9, 0x1, 16, 0x1, 23, 0x1,
//  338    30, 0x1, 10, 0x40, 17, 0x40, 24, 0x40,
//  339    31, 0x40, 11, 0x40, 18, 0x40, 25, 0x40,
//  340    32, 0x40, 12, 0x40, 19, 0x40, 26, 0x40,
//  341    33, 0x40, 13, 0x40, 20, 0x40, 27, 0x40,
//  342    34, 0x40, 10, 0x1000, 17, 0x1000, 24, 0x1000,
//  343    31, 0x1000, 11, 0x1000, 18, 0x1000, 25, 0x1000,
//  344    32, 0x1000, 12, 0x1000, 19, 0x1000, 26, 0x1000,
//  345    33, 0x1000, 13, 0x1000, 20, 0x1000, 27, 0x1000,
//  346    34, 0x1000, 10, 0x80, 17, 0x80, 24, 0x80,
//  347    31, 0x80, 11, 0x80, 18, 0x80, 25, 0x80,
//  348    32, 0x80, 12, 0x80, 19, 0x80, 26, 0x80,
//  349    33, 0x80, 13, 0x80, 20, 0x80, 27, 0x80,
//  350    34, 0x80, 10, 0x800, 17, 0x800, 24, 0x800,
//  351    31, 0x800, 11, 0x800, 18, 0x800, 25, 0x800,
//  352    32, 0x800, 12, 0x800, 19, 0x800, 26, 0x800,
//  353    33, 0x800, 13, 0x800, 20, 0x800, 27, 0x800,
//  354    34, 0x800, 10, 0x400, 17, 0x400, 24, 0x400,
//  355    31, 0x400, 10, 0x20, 17, 0x20, 24, 0x20,
//  356    31, 0x20, 10, 0x4, 17, 0x4, 24, 0x4,
//  357    31, 0x4, 11, 0x400, 18, 0x400, 25, 0x400,
//  358    32, 0x400, 11, 0x20, 18, 0x20, 25, 0x20,
//  359    32, 0x20, 11, 0x4, 18, 0x4, 25, 0x4,
//  360    32, 0x4, 12, 0x400, 19, 0x400, 26, 0x400,
//  361    33, 0x400, 12, 0x20, 19, 0x20, 26, 0x20,
//  362    33, 0x20, 12, 0x4, 19, 0x4, 26, 0x4,
//  363    33, 0x4, 13, 0x400, 20, 0x400, 27, 0x400,
//  364    34, 0x400, 13, 0x20, 20, 0x20, 27, 0x20,
//  365    34, 0x20, 13, 0x4, 20, 0x4, 27, 0x4,
//  366    34, 0x4, 10, 0x200, 17, 0x200, 24, 0x200,
//  367    31, 0x200, 10, 0x10, 17, 0x10, 24, 0x10,
//  368    31, 0x10, 10, 0x2, 17, 0x2, 24, 0x2,
//  369    31, 0x2, 11, 0x200, 18, 0x200, 25, 0x200,
//  370    32, 0x200, 11, 0x10, 18, 0x10, 25, 0x10,
//  371    32, 0x10, 11, 0x2, 18, 0x2, 25, 0x2,
//  372    32, 0x2, 12, 0x200, 19, 0x200, 26, 0x200,
//  373    33, 0x200, 12, 0x10, 19, 0x10, 26, 0x10,
//  374    33, 0x10, 12, 0x2, 19, 0x2, 26, 0x2,
//  375    33, 0x2, 13, 0x200, 20, 0x200, 27, 0x200,
//  376    34, 0x200, 13, 0x10, 20, 0x10, 27, 0x10,
//  377    34, 0x10, 13, 0x2, 20, 0x2, 27, 0x2,
//  378    34, 0x2, 10, 0x100, 17, 0x100, 24, 0x100,
//  379    31, 0x100, 10, 0x8, 17, 0x8, 24, 0x8,
//  380    31, 0x8, 10, 0x1, 17, 0x1, 24, 0x1,
//  381    31, 0x1, 11, 0x100, 18, 0x100, 25, 0x100,
//  382    32, 0x100, 11, 0x8, 18, 0x8, 25, 0x8,
//  383    32, 0x8, 11, 0x1, 18, 0x1, 25, 0x1,
//  384    32, 0x1, 12, 0x100, 19, 0x100, 26, 0x100,
//  385    33, 0x100, 12, 0x8, 19, 0x8, 26, 0x8,
//  386    33, 0x8, 12, 0x1, 19, 0x1, 26, 0x1,
//  387    33, 0x1, 13, 0x100, 20, 0x100, 27, 0x100,
//  388    34, 0x100, 13, 0x8, 20, 0x8, 27, 0x8,
//  389    34, 0x8, 13, 0x1, 20, 0x1, 27, 0x1,
//  390    34, 0x1
//  391 };
//  392 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  393  Word16 mode_18k[NBBITS_18k << 1] = {
mode_18k:
        DS8 1460
        REQUIRE `?<Initializer for mode_18k>`
//  394    0, 0x1, 1, 0x10, 1, 0x4, 18, 0x40,
//  395    29, 0x40, 40, 0x40, 51, 0x40, 1, 0x2,
//  396    1, 0x8, 1, 0x20, 8, 0x100, 8, 0x80,
//  397    8, 0x40, 8, 0x20, 8, 0x10, 30, 0x100,
//  398    30, 0x80, 30, 0x40, 30, 0x20, 30, 0x10,
//  399    18, 0x20, 29, 0x20, 40, 0x20, 51, 0x20,
//  400    18, 0x1, 29, 0x1, 40, 0x1, 51, 0x1,
//  401    18, 0x8, 29, 0x8, 40, 0x8, 51, 0x8,
//  402    18, 0x4, 29, 0x4, 40, 0x4, 51, 0x4,
//  403    19, 0x20, 41, 0x20, 18, 0x2, 29, 0x2,
//  404    40, 0x2, 51, 0x2, 18, 0x10, 29, 0x10,
//  405    40, 0x10, 51, 0x10, 8, 0x8, 1, 0x40,
//  406    1, 0x80, 19, 0x10, 41, 0x10, 30, 0x8,
//  407    3, 0x8, 3, 0x2, 2, 0x10, 3, 0x20,
//  408    3, 0x10, 3, 0x4, 2, 0x1, 4, 0x10,
//  409    2, 0x8, 2, 0x40, 2, 0x4, 4, 0x20,
//  410    4, 0x40, 3, 0x1, 4, 0x8, 1, 0x1,
//  411    2, 0x2, 8, 0x4, 30, 0x4, 5, 0x20,
//  412    19, 0x8, 41, 0x8, 2, 0x80, 5, 0x8,
//  413    2, 0x20, 19, 0x4, 41, 0x4, 8, 0x2,
//  414    30, 0x2, 4, 0x2, 4, 0x4, 19, 0x2,
//  415    41, 0x2, 5, 0x4, 5, 0x2, 4, 0x1,
//  416    7, 0x1, 5, 0x10, 5, 0x40, 8, 0x1,
//  417    30, 0x1, 6, 0x10, 5, 0x1, 6, 0x4,
//  418    6, 0x8, 6, 0x2, 19, 0x1, 41, 0x1,
//  419    6, 0x1, 7, 0x10, 7, 0x8, 7, 0x4,
//  420    7, 0x2, 9, 0x1, 20, 0x1, 31, 0x1,
//  421    42, 0x1, 28, 0x1, 45, 0x1, 21, 0x1,
//  422    17, 0x1, 22, 0x1, 11, 0x1, 39, 0x1,
//  423    10, 0x1, 12, 0x1, 50, 0x1, 23, 0x2,
//  424    23, 0x1, 43, 0x1, 25, 0x1, 10, 0x2,
//  425    33, 0x1, 44, 0x1, 13, 0x2, 32, 0x1,
//  426    22, 0x2, 26, 0x1, 46, 0x2, 35, 0x2,
//  427    13, 0x1, 16, 0x1, 12, 0x2, 14, 0x1,
//  428    43, 0x2, 15, 0x1, 24, 0x1, 24, 0x2,
//  429    21, 0x2, 34, 0x1, 44, 0x2, 46, 0x1,
//  430    49, 0x1, 11, 0x2, 45, 0x2, 27, 0x1,
//  431    48, 0x1, 47, 0x1, 34, 0x2, 32, 0x2,
//  432    38, 0x1, 37, 0x1, 33, 0x2, 36, 0x1,
//  433    50, 0x20, 35, 0x1, 26, 0x2000, 15, 0x40,
//  434    27, 0x2000, 15, 0x20, 26, 0x40, 50, 0x40,
//  435    17, 0x200, 47, 0x2000, 14, 0x2000, 27, 0x40,
//  436    17, 0x20, 48, 0x40, 14, 0x40, 28, 0x40,
//  437    16, 0x20, 27, 0x20, 16, 0x2000, 14, 0x20,
//  438    28, 0x20, 25, 0x20, 49, 0x40, 47, 0x40,
//  439    25, 0x2000, 39, 0x20, 14, 0x200, 48, 0x20,
//  440    26, 0x20, 25, 0x40, 16, 0x200, 49, 0x20,
//  441    17, 0x400, 47, 0x20, 49, 0x2000, 39, 0x40,
//  442    14, 0x400, 17, 0x2000, 27, 0x200, 37, 0x40,
//  443    17, 0x40, 15, 0x2000, 17, 0x80, 28, 0x200,
//  444    37, 0x20, 38, 0x40, 27, 0x400, 14, 0x80,
//  445    28, 0x2000, 16, 0x400, 50, 0x2000, 16, 0x40,
//  446    48, 0x80, 15, 0x200, 49, 0x200, 48, 0x2000,
//  447    49, 0x400, 38, 0x2000, 26, 0x200, 50, 0x200,
//  448    25, 0x200, 15, 0x400, 39, 0x400, 36, 0x20,
//  449    38, 0x20, 47, 0x80, 50, 0x10, 50, 0x400,
//  450    26, 0x80, 36, 0x40, 47, 0x200, 48, 0x200,
//  451    28, 0x400, 39, 0x200, 25, 0x400, 27, 0x80,
//  452    39, 0x2000, 50, 0x80, 38, 0x200, 15, 0x80,
//  453    25, 0x80, 17, 0x10, 28, 0x80, 26, 0x400,
//  454    37, 0x2000, 38, 0x80, 49, 0x80, 47, 0x400,
//  455    38, 0x400, 15, 0x10, 36, 0x2000, 16, 0x80,
//  456    49, 0x10, 36, 0x80, 36, 0x200, 36, 0x400,
//  457    39, 0x80, 37, 0x200, 37, 0x400, 48, 0x400,
//  458    36, 0x10, 47, 0x10, 16, 0x10, 14, 0x10,
//  459    27, 0x10, 39, 0x10, 14, 0x1000, 28, 0x10,
//  460    25, 0x10, 48, 0x10, 27, 0x1000, 37, 0x10,
//  461    37, 0x80, 38, 0x10, 17, 0x8, 26, 0x1000,
//  462    26, 0x10, 50, 0x8, 14, 0x8, 25, 0x1000,
//  463    17, 0x1000, 47, 0x8, 16, 0x1000, 28, 0x1000,
//  464    47, 0x1000, 15, 0x1000, 36, 0x8, 15, 0x8,
//  465    28, 0x8, 17, 0x100, 49, 0x8, 27, 0x8,
//  466    50, 0x1000, 48, 0x1000, 48, 0x8, 39, 0x8,
//  467    37, 0x1000, 26, 0x8, 17, 0x4, 47, 0x4,
//  468    14, 0x100, 50, 0x4, 48, 0x4, 38, 0x1000,
//  469    28, 0x100, 27, 0x100, 39, 0x100, 16, 0x4,
//  470    16, 0x100, 25, 0x8, 16, 0x8, 15, 0x4,
//  471    14, 0x4, 39, 0x1000, 39, 0x4, 37, 0x8,
//  472    36, 0x1000, 38, 0x8, 27, 0x4, 15, 0x100,
//  473    25, 0x4, 36, 0x4, 49, 0x100, 26, 0x4,
//  474    49, 0x1000, 28, 0x4, 49, 0x4, 37, 0x4,
//  475    26, 0x100, 47, 0x100, 25, 0x100, 50, 0x100,
//  476    38, 0x4, 48, 0x100, 38, 0x100, 37, 0x100,
//  477    36, 0x100, 50, 0x2, 26, 0x800, 17, 0x2,
//  478    14, 0x800, 28, 0x800, 27, 0x800, 25, 0x800,
//  479    37, 0x800, 14, 0x2, 47, 0x800, 49, 0x800,
//  480    47, 0x2, 49, 0x2, 17, 0x800, 38, 0x800,
//  481    15, 0x800, 39, 0x2, 16, 0x2, 15, 0x2,
//  482    50, 0x800, 48, 0x800, 27, 0x2, 37, 0x2,
//  483    28, 0x2, 48, 0x2, 16, 0x800, 25, 0x2,
//  484    26, 0x2, 39, 0x800, 36, 0x800, 36, 0x2,
//  485    38, 0x2
//  486 };
//  487 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  488  Word16 mode_20k[NBBITS_20k << 1] = {
mode_20k:
        DS8 1588
        REQUIRE `?<Initializer for mode_20k>`
//  489    0, 0x1, 1, 0x10, 1, 0x4, 18, 0x40,
//  490    29, 0x40, 40, 0x40, 51, 0x40, 1, 0x2,
//  491    1, 0x8, 1, 0x20, 8, 0x100, 8, 0x80,
//  492    8, 0x40, 8, 0x20, 8, 0x10, 30, 0x100,
//  493    30, 0x80, 30, 0x40, 30, 0x20, 30, 0x10,
//  494    18, 0x20, 29, 0x20, 40, 0x20, 51, 0x20,
//  495    18, 0x1, 29, 0x1, 40, 0x1, 51, 0x1,
//  496    18, 0x8, 29, 0x8, 40, 0x8, 51, 0x8,
//  497    18, 0x4, 29, 0x4, 40, 0x4, 51, 0x4,
//  498    19, 0x20, 41, 0x20, 18, 0x2, 29, 0x2,
//  499    40, 0x2, 51, 0x2, 18, 0x10, 29, 0x10,
//  500    40, 0x10, 51, 0x10, 8, 0x8, 1, 0x40,
//  501    1, 0x80, 19, 0x10, 41, 0x10, 30, 0x8,
//  502    3, 0x8, 3, 0x2, 2, 0x10, 3, 0x20,
//  503    3, 0x10, 3, 0x4, 2, 0x1, 4, 0x10,
//  504    2, 0x8, 2, 0x40, 2, 0x4, 4, 0x20,
//  505    4, 0x40, 3, 0x1, 4, 0x8, 1, 0x1,
//  506    2, 0x2, 8, 0x4, 30, 0x4, 5, 0x20,
//  507    19, 0x8, 41, 0x8, 2, 0x80, 5, 0x8,
//  508    2, 0x20, 19, 0x4, 41, 0x4, 8, 0x2,
//  509    30, 0x2, 4, 0x2, 4, 0x4, 19, 0x2,
//  510    41, 0x2, 5, 0x4, 5, 0x2, 4, 0x1,
//  511    7, 0x1, 5, 0x10, 5, 0x40, 8, 0x1,
//  512    30, 0x1, 6, 0x10, 5, 0x1, 6, 0x4,
//  513    6, 0x8, 6, 0x2, 19, 0x1, 41, 0x1,
//  514    6, 0x1, 7, 0x10, 7, 0x8, 7, 0x4,
//  515    7, 0x2, 9, 0x1, 20, 0x1, 31, 0x1,
//  516    42, 0x1, 10, 0x8, 11, 0x8, 15, 0x100,
//  517    46, 0x2, 14, 0x100, 43, 0x8, 21, 0x8,
//  518    48, 0x100, 22, 0x8, 44, 0x8, 24, 0x2,
//  519    45, 0x2, 26, 0x100, 23, 0x2, 35, 0x2,
//  520    12, 0x2, 25, 0x100, 36, 0x100, 22, 0x200,
//  521    47, 0x100, 10, 0x200, 33, 0x8, 32, 0x8,
//  522    13, 0x2, 34, 0x2, 24, 0x1, 11, 0x200,
//  523    13, 0x1, 28, 0x2000, 16, 0x2000, 37, 0x100,
//  524    21, 0x200, 23, 0x1, 46, 0x1, 35, 0x1,
//  525    45, 0x1, 27, 0x2000, 50, 0x2000, 43, 0x200,
//  526    12, 0x1, 44, 0x200, 49, 0x2000, 17, 0x2000,
//  527    32, 0x200, 33, 0x200, 34, 0x1, 39, 0x2000,
//  528    38, 0x2000, 10, 0x10, 10, 0x100, 22, 0x10,
//  529    11, 0x100, 15, 0x80, 26, 0x80, 43, 0x100,
//  530    21, 0x10, 25, 0x80, 22, 0x100, 11, 0x10,
//  531    50, 0x10, 44, 0x100, 44, 0x10, 47, 0x80,
//  532    16, 0x1000, 14, 0x80, 21, 0x100, 32, 0x100,
//  533    43, 0x10, 17, 0x10, 33, 0x100, 27, 0x100,
//  534    48, 0x80, 32, 0x10, 10, 0x4, 33, 0x10,
//  535    28, 0x1000, 28, 0x20, 21, 0x4, 17, 0x1000,
//  536    44, 0x4, 37, 0x80, 32, 0x4, 39, 0x10,
//  537    27, 0x1000, 27, 0x10, 39, 0x20, 15, 0x40,
//  538    27, 0x20, 36, 0x80, 17, 0x20, 49, 0x1000,
//  539    50, 0x20, 16, 0x20, 43, 0x4, 49, 0x10,
//  540    25, 0x40, 49, 0x20, 14, 0x40, 16, 0x10,
//  541    39, 0x100, 26, 0x40, 11, 0x4, 28, 0x10,
//  542    27, 0x200, 16, 0x100, 39, 0x1000, 28, 0x200,
//  543    49, 0x100, 50, 0x100, 50, 0x1000, 28, 0x100,
//  544    48, 0x40, 17, 0x40, 17, 0x200, 17, 0x100,
//  545    50, 0x40, 22, 0x4, 16, 0x200, 16, 0x40,
//  546    38, 0x1000, 50, 0x200, 39, 0x200, 38, 0x20,
//  547    38, 0x10, 47, 0x40, 28, 0x40, 37, 0x40,
//  548    33, 0x4, 49, 0x200, 50, 0x8, 39, 0x8,
//  549    39, 0x40, 36, 0x40, 17, 0x8, 49, 0x40,
//  550    27, 0x8, 15, 0x8, 27, 0x40, 38, 0x8,
//  551    28, 0x8, 38, 0x100, 38, 0x200, 26, 0x8,
//  552    49, 0x8, 14, 0x8, 22, 0x80, 38, 0x40,
//  553    10, 0x80, 47, 0x8, 43, 0x1, 26, 0x4,
//  554    11, 0x1, 16, 0x8, 44, 0x80, 28, 0x800,
//  555    47, 0x4, 11, 0x80, 15, 0x4, 21, 0x1,
//  556    21, 0x80, 27, 0x800, 10, 0x1, 43, 0x80,
//  557    44, 0x1, 25, 0x8, 48, 0x8, 33, 0x1,
//  558    27, 0x4, 25, 0x4, 36, 0x4, 36, 0x8,
//  559    17, 0x4, 32, 0x1, 27, 0x80, 14, 0x4,
//  560    50, 0x2, 17, 0x800, 15, 0x20, 50, 0x4,
//  561    16, 0x4, 48, 0x4, 38, 0x4, 33, 0x80,
//  562    16, 0x800, 37, 0x8, 39, 0x4, 25, 0x20,
//  563    22, 0x1, 32, 0x80, 37, 0x4, 17, 0x2,
//  564    49, 0x4, 26, 0x20, 39, 0x800, 14, 0x20,
//  565    50, 0x800, 39, 0x2, 17, 0x80, 16, 0x80,
//  566    49, 0x800, 47, 0x20, 48, 0x20, 28, 0x4,
//  567    38, 0x800, 28, 0x2, 10, 0x2, 50, 0x80,
//  568    38, 0x2, 28, 0x80, 16, 0x2, 25, 0x2,
//  569    15, 0x2, 39, 0x80, 49, 0x2, 49, 0x80,
//  570    27, 0x2, 36, 0x20, 26, 0x2, 44, 0x2,
//  571    44, 0x40, 22, 0x2, 37, 0x20, 36, 0x2,
//  572    33, 0x2, 32, 0x2, 11, 0x2, 47, 0x2,
//  573    21, 0x2, 10, 0x40, 14, 0x2, 43, 0x40,
//  574    22, 0x40, 37, 0x2, 48, 0x2, 43, 0x2,
//  575    11, 0x40, 38, 0x80, 25, 0x200, 21, 0x40,
//  576    48, 0x200, 14, 0x200, 15, 0x200, 50, 0x1,
//  577    37, 0x200, 33, 0x40, 26, 0x200, 32, 0x40,
//  578    27, 0x400, 36, 0x200, 28, 0x400, 47, 0x200,
//  579    17, 0x1, 17, 0x400, 39, 0x1, 16, 0x400,
//  580    50, 0x400, 26, 0x10, 16, 0x1, 49, 0x1,
//  581    27, 0x1, 15, 0x10, 39, 0x400, 25, 0x10,
//  582    28, 0x1, 49, 0x400, 38, 0x400, 14, 0x10,
//  583    38, 0x1, 47, 0x1, 47, 0x10, 48, 0x10,
//  584    36, 0x10, 26, 0x1, 25, 0x1, 37, 0x10,
//  585    14, 0x1, 15, 0x1, 21, 0x20, 43, 0x20,
//  586    37, 0x1, 48, 0x1, 11, 0x20, 44, 0x20,
//  587    10, 0x20, 36, 0x1, 22, 0x20, 33, 0x20,
//  588    32, 0x20
//  589 };
//  590 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  591  Word16 mode_23k[NBBITS_23k << 1] = {
mode_23k:
        DS8 1844
        REQUIRE `?<Initializer for mode_23k>`
//  592    0, 0x1, 1, 0x10, 1, 0x4, 18, 0x40,
//  593    29, 0x40, 40, 0x40, 51, 0x40, 1, 0x2,
//  594    1, 0x8, 1, 0x20, 8, 0x100, 8, 0x80,
//  595    8, 0x40, 8, 0x20, 8, 0x10, 30, 0x100,
//  596    30, 0x80, 30, 0x40, 30, 0x20, 30, 0x10,
//  597    18, 0x20, 29, 0x20, 40, 0x20, 51, 0x20,
//  598    18, 0x1, 29, 0x1, 40, 0x1, 51, 0x1,
//  599    18, 0x8, 29, 0x8, 40, 0x8, 51, 0x8,
//  600    18, 0x4, 29, 0x4, 40, 0x4, 51, 0x4,
//  601    19, 0x20, 41, 0x20, 18, 0x2, 29, 0x2,
//  602    40, 0x2, 51, 0x2, 18, 0x10, 29, 0x10,
//  603    40, 0x10, 51, 0x10, 8, 0x8, 1, 0x40,
//  604    1, 0x80, 19, 0x10, 41, 0x10, 30, 0x8,
//  605    3, 0x8, 3, 0x2, 2, 0x10, 3, 0x20,
//  606    3, 0x10, 3, 0x4, 2, 0x1, 4, 0x10,
//  607    2, 0x8, 2, 0x40, 2, 0x4, 4, 0x20,
//  608    4, 0x40, 3, 0x1, 4, 0x8, 1, 0x1,
//  609    2, 0x2, 8, 0x4, 30, 0x4, 5, 0x20,
//  610    19, 0x8, 41, 0x8, 2, 0x80, 5, 0x8,
//  611    2, 0x20, 19, 0x4, 41, 0x4, 8, 0x2,
//  612    30, 0x2, 4, 0x2, 4, 0x4, 19, 0x2,
//  613    41, 0x2, 5, 0x4, 5, 0x2, 4, 0x1,
//  614    7, 0x1, 5, 0x10, 5, 0x40, 8, 0x1,
//  615    30, 0x1, 6, 0x10, 5, 0x1, 6, 0x4,
//  616    6, 0x8, 6, 0x2, 19, 0x1, 41, 0x1,
//  617    6, 0x1, 7, 0x10, 7, 0x8, 7, 0x4,
//  618    7, 0x2, 9, 0x1, 20, 0x1, 31, 0x1,
//  619    42, 0x1, 23, 0x400, 24, 0x400, 22, 0x400,
//  620    12, 0x400, 10, 0x400, 46, 0x400, 13, 0x400,
//  621    21, 0x400, 35, 0x400, 44, 0x400, 43, 0x400,
//  622    33, 0x400, 11, 0x400, 23, 0x100, 45, 0x400,
//  623    34, 0x400, 24, 0x100, 35, 0x100, 13, 0x100,
//  624    11, 0x100, 23, 0x200, 46, 0x100, 22, 0x100,
//  625    10, 0x100, 13, 0x200, 10, 0x200, 46, 0x200,
//  626    43, 0x100, 21, 0x100, 12, 0x100, 21, 0x200,
//  627    32, 0x400, 22, 0x200, 12, 0x200, 45, 0x200,
//  628    45, 0x100, 44, 0x200, 44, 0x100, 24, 0x200,
//  629    35, 0x200, 11, 0x200, 32, 0x100, 32, 0x200,
//  630    43, 0x200, 33, 0x100, 34, 0x100, 33, 0x200,
//  631    34, 0x200, 23, 0x80, 10, 0x80, 24, 0x80,
//  632    12, 0x80, 13, 0x80, 11, 0x80, 43, 0x80,
//  633    46, 0x80, 22, 0x80, 21, 0x80, 50, 0x200,
//  634    35, 0x80, 45, 0x80, 13, 0x4, 11, 0x4,
//  635    33, 0x80, 10, 0x40, 32, 0x80, 43, 0x4,
//  636    17, 0x200, 47, 0x200, 21, 0x4, 14, 0x200,
//  637    44, 0x80, 24, 0x4, 12, 0x4, 22, 0x4,
//  638    10, 0x4, 13, 0x40, 25, 0x200, 16, 0x200,
//  639    11, 0x40, 39, 0x200, 23, 0x4, 35, 0x4,
//  640    44, 0x40, 45, 0x4, 49, 0x200, 35, 0x40,
//  641    27, 0x200, 46, 0x4, 34, 0x80, 28, 0x200,
//  642    15, 0x200, 26, 0x200, 23, 0x40, 16, 0x20,
//  643    36, 0x200, 46, 0x40, 15, 0x40, 37, 0x200,
//  644    24, 0x40, 38, 0x200, 43, 0x40, 48, 0x200,
//  645    22, 0x40, 10, 0x8, 45, 0x40, 12, 0x40,
//  646    48, 0x40, 26, 0x20, 17, 0x400, 23, 0x8,
//  647    49, 0x400, 15, 0x400, 48, 0x10, 17, 0x20,
//  648    33, 0x40, 21, 0x40, 49, 0x40, 25, 0x20,
//  649    50, 0x40, 26, 0x40, 28, 0x400, 27, 0x40,
//  650    13, 0x8, 34, 0x4, 44, 0x4, 27, 0x20,
//  651    21, 0x8, 32, 0x40, 22, 0x8, 50, 0x400,
//  652    27, 0x400, 48, 0x20, 14, 0x400, 32, 0x4,
//  653    17, 0x40, 16, 0x40, 34, 0x40, 15, 0x20,
//  654    39, 0x10, 24, 0x8, 47, 0x40, 13, 0x20,
//  655    17, 0x10, 28, 0x40, 47, 0x400, 45, 0x8,
//  656    25, 0x10, 16, 0x10, 33, 0x4, 39, 0x20,
//  657    14, 0x40, 28, 0x20, 49, 0x20, 12, 0x8,
//  658    36, 0x400, 50, 0x20, 25, 0x400, 39, 0x40,
//  659    23, 0x20, 14, 0x10, 26, 0x10, 47, 0x20,
//  660    38, 0x40, 37, 0x400, 14, 0x20, 36, 0x20,
//  661    15, 0x10, 16, 0x400, 11, 0x20, 25, 0x40,
//  662    48, 0x400, 26, 0x400, 44, 0x8, 43, 0x8,
//  663    49, 0x10, 10, 0x20, 43, 0x20, 39, 0x400,
//  664    11, 0x8, 50, 0x10, 21, 0x2, 37, 0x40,
//  665    21, 0x20, 28, 0x10, 47, 0x10, 37, 0x20,
//  666    35, 0x8, 24, 0x20, 38, 0x20, 46, 0x20,
//  667    32, 0x8, 10, 0x10, 23, 0x1, 37, 0x10,
//  668    13, 0x10, 21, 0x1, 27, 0x10, 33, 0x20,
//  669    36, 0x40, 23, 0x10, 46, 0x8, 12, 0x20,
//  670    24, 0x2, 13, 0x1, 10, 0x1, 44, 0x20,
//  671    22, 0x20, 38, 0x10, 24, 0x1, 38, 0x400,
//  672    32, 0x20, 45, 0x20, 43, 0x1, 44, 0x10,
//  673    34, 0x8, 35, 0x1, 46, 0x1, 22, 0x2,
//  674    33, 0x1, 36, 0x10, 35, 0x20, 43, 0x10,
//  675    45, 0x1, 23, 0x2, 22, 0x1, 12, 0x1,
//  676    13, 0x2, 14, 0x100, 27, 0x8, 11, 0x1,
//  677    12, 0x2, 11, 0x2, 17, 0x100, 44, 0x1,
//  678    21, 0x10, 24, 0x10, 45, 0x10, 16, 0x100,
//  679    22, 0x10, 48, 0x8, 11, 0x10, 43, 0x2,
//  680    28, 0x100, 27, 0x100, 10, 0x2, 32, 0x2,
//  681    33, 0x8, 17, 0x8, 35, 0x2, 47, 0x100,
//  682    15, 0x100, 12, 0x10, 16, 0x8, 39, 0x8,
//  683    15, 0x8, 34, 0x20, 34, 0x1, 44, 0x2,
//  684    27, 0x4, 45, 0x2, 35, 0x10, 46, 0x10,
//  685    33, 0x2, 50, 0x100, 48, 0x100, 26, 0x8,
//  686    25, 0x8, 25, 0x100, 50, 0x8, 14, 0x8,
//  687    32, 0x1, 49, 0x100, 26, 0x100, 39, 0x100,
//  688    38, 0x8, 17, 0x4, 28, 0x8, 37, 0x100,
//  689    46, 0x2, 50, 0x4, 36, 0x100, 34, 0x10,
//  690    15, 0x4, 14, 0x4, 33, 0x10, 49, 0x8,
//  691    32, 0x10, 48, 0x4, 38, 0x100, 34, 0x2,
//  692    47, 0x4, 25, 0x4, 36, 0x8, 26, 0x4,
//  693    37, 0x8, 16, 0x4, 48, 0x2, 28, 0x4,
//  694    37, 0x4, 39, 0x4, 47, 0x8, 36, 0x4,
//  695    17, 0x2, 38, 0x4, 49, 0x4, 27, 0x2,
//  696    14, 0x2, 25, 0x2, 50, 0x2, 28, 0x2,
//  697    15, 0x2, 47, 0x2, 39, 0x2, 26, 0x2,
//  698    16, 0x2, 49, 0x2, 37, 0x2, 47, 0x80,
//  699    36, 0x2, 38, 0x2, 16, 0x80, 14, 0x80,
//  700    17, 0x80, 50, 0x80, 39, 0x80, 28, 0x80,
//  701    49, 0x80, 15, 0x80, 38, 0x80, 25, 0x80,
//  702    37, 0x80, 26, 0x80, 27, 0x80, 48, 0x80,
//  703    50, 0x1, 36, 0x80, 39, 0x1, 14, 0x1,
//  704    49, 0x1, 26, 0x1, 25, 0x1, 15, 0x1,
//  705    48, 0x1, 38, 0x1, 27, 0x1, 28, 0x1,
//  706    16, 0x1, 17, 0x1, 47, 0x1, 37, 0x1,
//  707    36, 0x1
//  708 };
//  709 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  710  Word16 mode_24k[NBBITS_24k << 1] = {
mode_24k:
        DS8 1908
        REQUIRE `?<Initializer for mode_24k>`
//  711    0, 0x1, 1, 0x10, 1, 0x4, 18, 0x40,
//  712    30, 0x40, 42, 0x40, 54, 0x40, 1, 0x2,
//  713    1, 0x8, 1, 0x20, 8, 0x100, 8, 0x80,
//  714    8, 0x40, 8, 0x20, 8, 0x10, 32, 0x100,
//  715    32, 0x80, 32, 0x40, 32, 0x20, 32, 0x10,
//  716    18, 0x20, 30, 0x20, 42, 0x20, 54, 0x20,
//  717    18, 0x1, 30, 0x1, 42, 0x1, 54, 0x1,
//  718    18, 0x8, 30, 0x8, 42, 0x8, 54, 0x8,
//  719    18, 0x4, 30, 0x4, 42, 0x4, 54, 0x4,
//  720    20, 0x20, 44, 0x20, 18, 0x2, 30, 0x2,
//  721    42, 0x2, 54, 0x2, 18, 0x10, 30, 0x10,
//  722    42, 0x10, 54, 0x10, 8, 0x8, 1, 0x40,
//  723    1, 0x80, 20, 0x10, 44, 0x10, 32, 0x8,
//  724    3, 0x8, 3, 0x2, 2, 0x10, 3, 0x20,
//  725    3, 0x10, 3, 0x4, 2, 0x1, 4, 0x10,
//  726    2, 0x8, 2, 0x40, 2, 0x4, 4, 0x20,
//  727    4, 0x40, 3, 0x1, 4, 0x8, 1, 0x1,
//  728    2, 0x2, 8, 0x4, 32, 0x4, 5, 0x20,
//  729    19, 0x8, 19, 0x4, 19, 0x2, 19, 0x1,
//  730    31, 0x8, 31, 0x4, 31, 0x2, 31, 0x1,
//  731    43, 0x8, 43, 0x4, 43, 0x2, 43, 0x1,
//  732    55, 0x8, 55, 0x4, 55, 0x2, 55, 0x1,
//  733    20, 0x8, 44, 0x8, 2, 0x80, 5, 0x8,
//  734    2, 0x20, 20, 0x4, 44, 0x4, 8, 0x2,
//  735    32, 0x2, 4, 0x2, 4, 0x4, 20, 0x2,
//  736    44, 0x2, 5, 0x4, 5, 0x2, 4, 0x1,
//  737    7, 0x1, 5, 0x10, 5, 0x40, 8, 0x1,
//  738    32, 0x1, 6, 0x10, 5, 0x1, 6, 0x4,
//  739    6, 0x8, 6, 0x2, 20, 0x1, 44, 0x1,
//  740    6, 0x1, 7, 0x10, 7, 0x8, 7, 0x4,
//  741    7, 0x2, 9, 0x1, 21, 0x1, 33, 0x1,
//  742    45, 0x1, 24, 0x400, 25, 0x400, 23, 0x400,
//  743    12, 0x400, 10, 0x400, 49, 0x400, 13, 0x400,
//  744    22, 0x400, 37, 0x400, 47, 0x400, 46, 0x400,
//  745    35, 0x400, 11, 0x400, 24, 0x100, 48, 0x400,
//  746    36, 0x400, 25, 0x100, 37, 0x100, 13, 0x100,
//  747    11, 0x100, 24, 0x200, 49, 0x100, 23, 0x100,
//  748    10, 0x100, 13, 0x200, 10, 0x200, 49, 0x200,
//  749    46, 0x100, 22, 0x100, 12, 0x100, 22, 0x200,
//  750    34, 0x400, 23, 0x200, 12, 0x200, 48, 0x200,
//  751    48, 0x100, 47, 0x200, 47, 0x100, 25, 0x200,
//  752    37, 0x200, 11, 0x200, 34, 0x100, 34, 0x200,
//  753    46, 0x200, 35, 0x100, 36, 0x100, 35, 0x200,
//  754    36, 0x200, 24, 0x80, 10, 0x80, 25, 0x80,
//  755    12, 0x80, 13, 0x80, 11, 0x80, 46, 0x80,
//  756    49, 0x80, 23, 0x80, 22, 0x80, 53, 0x200,
//  757    37, 0x80, 48, 0x80, 13, 0x4, 11, 0x4,
//  758    35, 0x80, 10, 0x40, 34, 0x80, 46, 0x4,
//  759    17, 0x200, 50, 0x200, 22, 0x4, 14, 0x200,
//  760    47, 0x80, 25, 0x4, 12, 0x4, 23, 0x4,
//  761    10, 0x4, 13, 0x40, 26, 0x200, 16, 0x200,
//  762    11, 0x40, 41, 0x200, 24, 0x4, 37, 0x4,
//  763    47, 0x40, 48, 0x4, 52, 0x200, 37, 0x40,
//  764    28, 0x200, 49, 0x4, 36, 0x80, 29, 0x200,
//  765    15, 0x200, 27, 0x200, 24, 0x40, 16, 0x20,
//  766    38, 0x200, 49, 0x40, 15, 0x40, 39, 0x200,
//  767    25, 0x40, 40, 0x200, 46, 0x40, 51, 0x200,
//  768    23, 0x40, 10, 0x8, 48, 0x40, 12, 0x40,
//  769    51, 0x40, 27, 0x20, 17, 0x400, 24, 0x8,
//  770    52, 0x400, 15, 0x400, 51, 0x10, 17, 0x20,
//  771    35, 0x40, 22, 0x40, 52, 0x40, 26, 0x20,
//  772    53, 0x40, 27, 0x40, 29, 0x400, 28, 0x40,
//  773    13, 0x8, 36, 0x4, 47, 0x4, 28, 0x20,
//  774    22, 0x8, 34, 0x40, 23, 0x8, 53, 0x400,
//  775    28, 0x400, 51, 0x20, 14, 0x400, 34, 0x4,
//  776    17, 0x40, 16, 0x40, 36, 0x40, 15, 0x20,
//  777    41, 0x10, 25, 0x8, 50, 0x40, 13, 0x20,
//  778    17, 0x10, 29, 0x40, 50, 0x400, 48, 0x8,
//  779    26, 0x10, 16, 0x10, 35, 0x4, 41, 0x20,
//  780    14, 0x40, 29, 0x20, 52, 0x20, 12, 0x8,
//  781    38, 0x400, 53, 0x20, 26, 0x400, 41, 0x40,
//  782    24, 0x20, 14, 0x10, 27, 0x10, 50, 0x20,
//  783    40, 0x40, 39, 0x400, 14, 0x20, 38, 0x20,
//  784    15, 0x10, 16, 0x400, 11, 0x20, 26, 0x40,
//  785    51, 0x400, 27, 0x400, 47, 0x8, 46, 0x8,
//  786    52, 0x10, 10, 0x20, 46, 0x20, 41, 0x400,
//  787    11, 0x8, 53, 0x10, 22, 0x2, 39, 0x40,
//  788    22, 0x20, 29, 0x10, 50, 0x10, 39, 0x20,
//  789    37, 0x8, 25, 0x20, 40, 0x20, 49, 0x20,
//  790    34, 0x8, 10, 0x10, 24, 0x1, 39, 0x10,
//  791    13, 0x10, 22, 0x1, 28, 0x10, 35, 0x20,
//  792    38, 0x40, 24, 0x10, 49, 0x8, 12, 0x20,
//  793    25, 0x2, 13, 0x1, 10, 0x1, 47, 0x20,
//  794    23, 0x20, 40, 0x10, 25, 0x1, 40, 0x400,
//  795    34, 0x20, 48, 0x20, 46, 0x1, 47, 0x10,
//  796    36, 0x8, 37, 0x1, 49, 0x1, 23, 0x2,
//  797    35, 0x1, 38, 0x10, 37, 0x20, 46, 0x10,
//  798    48, 0x1, 24, 0x2, 23, 0x1, 12, 0x1,
//  799    13, 0x2, 14, 0x100, 28, 0x8, 11, 0x1,
//  800    12, 0x2, 11, 0x2, 17, 0x100, 47, 0x1,
//  801    22, 0x10, 25, 0x10, 48, 0x10, 16, 0x100,
//  802    23, 0x10, 51, 0x8, 11, 0x10, 46, 0x2,
//  803    29, 0x100, 28, 0x100, 10, 0x2, 34, 0x2,
//  804    35, 0x8, 17, 0x8, 37, 0x2, 50, 0x100,
//  805    15, 0x100, 12, 0x10, 16, 0x8, 41, 0x8,
//  806    15, 0x8, 36, 0x20, 36, 0x1, 47, 0x2,
//  807    28, 0x4, 48, 0x2, 37, 0x10, 49, 0x10,
//  808    35, 0x2, 53, 0x100, 51, 0x100, 27, 0x8,
//  809    26, 0x8, 26, 0x100, 53, 0x8, 14, 0x8,
//  810    34, 0x1, 52, 0x100, 27, 0x100, 41, 0x100,
//  811    40, 0x8, 17, 0x4, 29, 0x8, 39, 0x100,
//  812    49, 0x2, 53, 0x4, 38, 0x100, 36, 0x10,
//  813    15, 0x4, 14, 0x4, 35, 0x10, 52, 0x8,
//  814    34, 0x10, 51, 0x4, 40, 0x100, 36, 0x2,
//  815    50, 0x4, 26, 0x4, 38, 0x8, 27, 0x4,
//  816    39, 0x8, 16, 0x4, 51, 0x2, 29, 0x4,
//  817    39, 0x4, 41, 0x4, 50, 0x8, 38, 0x4,
//  818    17, 0x2, 40, 0x4, 52, 0x4, 28, 0x2,
//  819    14, 0x2, 26, 0x2, 53, 0x2, 29, 0x2,
//  820    15, 0x2, 50, 0x2, 41, 0x2, 27, 0x2,
//  821    16, 0x2, 52, 0x2, 39, 0x2, 50, 0x80,
//  822    38, 0x2, 40, 0x2, 16, 0x80, 14, 0x80,
//  823    17, 0x80, 53, 0x80, 41, 0x80, 29, 0x80,
//  824    52, 0x80, 15, 0x80, 40, 0x80, 26, 0x80,
//  825    39, 0x80, 27, 0x80, 28, 0x80, 51, 0x80,
//  826    53, 0x1, 38, 0x80, 41, 0x1, 14, 0x1,
//  827    52, 0x1, 27, 0x1, 26, 0x1, 15, 0x1,
//  828    51, 0x1, 40, 0x1, 28, 0x1, 29, 0x1,
//  829    16, 0x1, 17, 0x1, 50, 0x1, 39, 0x1,
//  830    38, 0x1
//  831 };
//  832 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  833  Word16 mode_DTX[NBBITS_SID << 1] = {
mode_DTX:
        DS8 140
        REQUIRE `?<Initializer for mode_DTX>`
//  834    0, 0x20, 0, 0x10, 0, 0x8, 0, 0x4,
//  835    0, 0x2, 0, 0x1, 1, 0x20, 1, 0x10,
//  836    1, 0x8, 1, 0x4, 1, 0x2, 1, 0x1,
//  837    2, 0x20, 2, 0x10, 2, 0x8, 2, 0x4,
//  838    2, 0x2, 2, 0x1, 3, 0x10, 3, 0x8,
//  839    3, 0x4, 3, 0x2, 3, 0x1, 4, 0x10,
//  840    4, 0x8, 4, 0x4, 4, 0x2, 4, 0x1,
//  841    5, 0x20, 5, 0x10, 5, 0x8, 5, 0x4,
//  842    5, 0x2, 5, 0x1, 6, 0x1
//  843 };
//  844 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  845  Word16 nb_of_param[NUM_OF_SPMODES]= {
nb_of_param:
        DS8 20
        REQUIRE `?<Initializer for nb_of_param>`
//  846    PRMNO_7k, PRMNO_9k, PRMNO_12k,
//  847    PRMNO_14k, PRMNO_16k, PRMNO_18k,
//  848    PRMNO_20k, PRMNO_23k, PRMNO_24k
//  849 };
//  850 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  851  Word16 dfh_M7k[PRMNO_7k] = {
dfh_M7k:
        DS8 36
        REQUIRE `?<Initializer for dfh_M7k>`
//  852    0, 49, 131,
//  853    84, 5, 50,
//  854    29, 2015, 8,
//  855    0, 2061, 8,
//  856    1, 3560, 8,
//  857    0, 2981, 8
//  858 };
//  859 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  860  Word16 dfh_M9k[PRMNO_9k] = {
dfh_M9k:
        DS8 64
        REQUIRE `?<Initializer for dfh_M9k>`
//  861    0, 49, 131,
//  862    55, 49, 38,
//  863    26, 29, 29,
//  864    3, 15, 7,
//  865    15, 8, 16,
//  866    13, 7, 17,
//  867    16, 8, 0,
//  868    16, 20, 16,
//  869    27, 8, 23,
//  870    0, 27, 0,
//  871    27, 8
//  872 };
//  873 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  874  Word16 dfh_M12k[PRMNO_12k] = {
dfh_M12k:
        DS8 72
        REQUIRE `?<Initializer for dfh_M12k>`
//  875    0, 49, 131,
//  876    55, 49, 38,
//  877    26, 29, 58,
//  878    1, 7, 63,
//  879    127, 15, 70,
//  880    37, 1, 209,
//  881    210, 224, 96,
//  882    31, 7, 1,
//  883    256, 260, 271,
//  884    443, 31, 47,
//  885    0, 400, 238,
//  886    436, 347, 31
//  887 };
//  888 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  889  Word16 dfh_M14k[PRMNO_14k] = {
dfh_M14k:
        DS8 72
        REQUIRE `?<Initializer for dfh_M14k>`
//  890    0, 49, 131,
//  891    55, 49, 38,
//  892    26, 29, 58,
//  893    1, 3847, 3845,
//  894    63, 127, 70,
//  895    34, 0, 3128,
//  896    4517, 192, 96,
//  897    0, 2, 1,
//  898    4160, 8036, 267,
//  899    443, 31, 46,
//  900    0, 3840, 7091,
//  901    432, 395, 31
//  902 };
//  903 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  904  Word16 dfh_M16k[PRMNO_16k] = {
dfh_M16k:
        DS8 72
        REQUIRE `?<Initializer for dfh_M16k>`
//  905    0, 49, 131,
//  906    55, 49, 38,
//  907    26, 29, 58,
//  908    1, 3847, 3845,
//  909    3847, 3843, 70,
//  910    31, 0, 3648,
//  911    4764, 824, 2864,
//  912    0, 6, 1,
//  913    4160, 5220, 4319,
//  914    7131, 31, 47,
//  915    0, 112, 3764,
//  916    219, 211, 31
//  917 };
//  918 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  919  Word16 dfh_M18k[PRMNO_18k] = {
dfh_M18k:
        DS8 104
        REQUIRE `?<Initializer for dfh_M18k>`
//  920    0, 49, 131,
//  921    55, 49, 38,
//  922    26, 29, 58,
//  923    1, 3, 2,
//  924    3, 2, 7223,
//  925    703, 7223, 703,
//  926    70, 0, 1,
//  927    3, 2, 2,
//  928    3, 9475, 9483,
//  929    3090, 8737, 0,
//  930    0, 1, 0,
//  931    0, 2, 0,
//  932    4112, 4400, 8415,
//  933    14047, 31, 38,
//  934    0, 2, 1,
//  935    3, 1, 91,
//  936    426, 13545, 12955,
//  937    0
//  938 };
//  939 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  940 Word16 dfh_M20k[PRMNO_20k] = {
dfh_M20k:
        DS8 104
        REQUIRE `?<Initializer for dfh_M20k>`
//  941    0, 49, 131,
//  942    55, 49, 38,
//  943    26, 29, 58,
//  944    1, 161, 759,
//  945    3, 2, 127,
//  946    516, 6167, 447,
//  947    70, 11, 1,
//  948    264, 641, 2,
//  949    3, 123, 562,
//  950    8347, 4354, 0,
//  951    1, 1, 264,
//  952    408, 3, 0,
//  953    256, 308, 9487,
//  954    14047, 31, 46,
//  955    0, 320, 885,
//  956    2, 2, 464,
//  957    439, 11347, 12739,
//  958    0
//  959 };
//  960 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  961  Word16 dfh_M23k[PRMNO_23k] = {
dfh_M23k:
        DS8 104
        REQUIRE `?<Initializer for dfh_M23k>`
//  962    0, 49, 131,
//  963    55, 49, 38,
//  964    26, 29, 58,
//  965    1, 1154, 1729,
//  966    1154, 1761, 447,
//  967    1519, 959, 495,
//  968    70, 27, 1,
//  969    1800, 1253, 665,
//  970    1960, 546, 164,
//  971    1043, 335, 0,
//  972    28, 1, 580,
//  973    196, 1187, 383,
//  974    1031, 1052, 359,
//  975    1531, 31, 45,
//  976    1, 1024, 893,
//  977    1272, 1920, 101,
//  978    876, 203, 1119,
//  979    31
//  980 };
//  981 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  982  Word16 dfh_M24k[PRMNO_24k] = {
dfh_M24k:
        DS8 112
        REQUIRE `?<Initializer for dfh_M24k>`
//  983    0, 49, 131,
//  984    55, 49, 38,
//  985    26, 29, 58,
//  986    1, 1729, 1154,
//  987    1761, 1154, 1519,
//  988    959, 495, 447,
//  989    70, 3, 42,
//  990    1, 580, 1436,
//  991    1362, 1250, 901,
//  992    714, 24, 45,
//  993    0, 0, 0,
//  994    1, 68, 708,
//  995    1212, 383, 1048,
//  996    1611, 1756, 1467,
//  997    31, 1, 23,
//  998    0, 1536, 1460,
//  999    861, 1554, 410,
// 1000    1368, 1008, 594,
// 1001    31, 0
// 1002 };
// 1003 
// 1004 /*
// 1005  * overall table with the parameters of the
// 1006  * decoder homing frames for all modes
// 1007  */
// 1008 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
// 1009 Word16 *dhf[10] = {
dhf:
        DS8 40
        REQUIRE `?<Initializer for dhf>`

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for block_size>`:
        DATA
        DC8 18, 23, 33, 37, 41, 47, 51, 59, 61, 6, 6, 0, 0, 0, 1, 1

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for mode_7k>`:
        DATA
        DC16 0, 1, 1, 8, 1, 4, 1, 2, 8, 2, 11, 2, 14, 2, 17, 2, 8, 1, 11, 1, 1
        DC16 1, 1, 16, 6, 128, 6, 64, 6, 32, 6, 16, 8, 16, 11, 16, 14, 16, 17
        DC16 16, 8, 4, 11, 4, 14, 4, 17, 4, 14, 1, 17, 1, 17, 8, 6, 8, 6, 4, 11
        DC16 32, 17, 32, 1, 128, 1, 32, 8, 32, 14, 32, 11, 8, 14, 8, 8, 8, 1
        DC16 64, 9, 16, 15, 16, 15, 8, 12, 16, 3, 16, 3, 2, 3, 1, 9, 8, 12, 8
        DC16 3, 32, 3, 8, 3, 4, 3, 64, 2, 8, 12, 4, 6, 2, 12, 2, 9, 4, 15, 4, 2
        DC16 4, 4, 64, 4, 32, 4, 16, 4, 8, 4, 4, 2, 2, 2, 1, 6, 1, 12, 1, 9, 2
        DC16 15, 2, 2, 128, 2, 32, 2, 64, 2, 16, 9, 1, 15, 1, 4, 2, 4, 1, 5, 32
        DC16 5, 16, 5, 4, 5, 8, 5, 2, 5, 1, 7, 2048, 7, 32, 10, 2048, 10, 32
        DC16 13, 2048, 13, 32, 16, 2048, 16, 32, 7, 1024, 10, 1024, 13, 1024
        DC16 16, 1024, 7, 16, 10, 16, 13, 16, 16, 16, 7, 512, 10, 512, 13, 512
        DC16 16, 512, 7, 8, 10, 8, 13, 8, 16, 8, 7, 256, 10, 256, 13, 256, 16
        DC16 256, 7, 4, 10, 4, 13, 4, 16, 4, 7, 128, 10, 128, 13, 128, 16, 128
        DC16 7, 2, 10, 2, 13, 2, 16, 2, 7, 64, 10, 64, 13, 64, 16, 64, 7, 1, 10
        DC16 1, 13, 1, 16, 1

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for mode_9k>`:
        DATA
        DC16 0, 1, 1, 16, 1, 4, 1, 2, 1, 8, 1, 32, 8, 128, 8, 64, 8, 32, 20
        DC16 128, 20, 64, 20, 32, 13, 32, 19, 32, 25, 32, 31, 32, 13, 1, 19, 1
        DC16 25, 1, 31, 1, 13, 8, 19, 8, 25, 8, 31, 8, 13, 4, 19, 4, 25, 4, 31
        DC16 4, 13, 2, 19, 2, 25, 2, 31, 2, 13, 16, 19, 16, 25, 16, 31, 16, 8
        DC16 16, 20, 16, 8, 8, 1, 64, 1, 128, 14, 16, 20, 8, 26, 16, 3, 8, 3, 2
        DC16 2, 16, 3, 32, 3, 16, 3, 4, 2, 1, 4, 16, 2, 8, 2, 64, 2, 4, 4, 32
        DC16 4, 64, 3, 1, 4, 8, 1, 1, 2, 2, 8, 4, 20, 4, 5, 32, 14, 8, 26, 8, 2
        DC16 128, 5, 8, 2, 32, 14, 4, 26, 4, 8, 2, 20, 2, 4, 2, 4, 4, 14, 2, 26
        DC16 2, 5, 4, 5, 2, 4, 1, 7, 1, 5, 16, 5, 64, 8, 1, 20, 1, 6, 16, 5, 1
        DC16 6, 4, 6, 8, 6, 2, 14, 1, 26, 1, 6, 1, 7, 16, 7, 8, 7, 4, 7, 2, 9
        DC16 16, 10, 16, 11, 16, 12, 16, 15, 16, 16, 16, 17, 16, 18, 16, 21, 16
        DC16 22, 16, 23, 16, 24, 16, 27, 16, 28, 16, 29, 16, 30, 16, 9, 8, 15
        DC16 8, 21, 8, 27, 8, 10, 8, 16, 8, 22, 8, 28, 8, 11, 8, 17, 8, 23, 8
        DC16 29, 8, 12, 8, 18, 8, 24, 8, 30, 8, 9, 4, 15, 4, 21, 4, 27, 4, 10
        DC16 4, 16, 4, 22, 4, 28, 4, 11, 4, 17, 4, 23, 4, 29, 4, 12, 4, 18, 4
        DC16 24, 4, 30, 4, 9, 2, 15, 2, 21, 2, 27, 2, 10, 2, 16, 2, 22, 2, 28
        DC16 2, 11, 2, 17, 2, 23, 2, 29, 2, 12, 2, 18, 2, 24, 2, 30, 2, 9, 1
        DC16 15, 1, 21, 1, 27, 1, 10, 1, 16, 1, 22, 1, 28, 1, 11, 1, 17, 1, 23
        DC16 1, 29, 1, 12, 1, 18, 1, 24, 1, 30, 1

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for mode_12k>`:
        DATA
        DC16 0, 1, 1, 16, 1, 4, 14, 64, 21, 64, 28, 64, 35, 64, 1, 2, 1, 8, 1
        DC16 32, 8, 256, 8, 128, 8, 64, 8, 32, 8, 16, 22, 256, 22, 128, 22, 64
        DC16 22, 32, 22, 16, 14, 32, 21, 32, 28, 32, 35, 32, 14, 1, 21, 1, 28
        DC16 1, 35, 1, 14, 8, 21, 8, 28, 8, 35, 8, 14, 4, 21, 4, 28, 4, 35, 4
        DC16 15, 32, 29, 32, 14, 2, 21, 2, 28, 2, 35, 2, 14, 16, 21, 16, 28, 16
        DC16 35, 16, 8, 8, 1, 64, 1, 128, 15, 16, 29, 16, 22, 8, 3, 8, 3, 2, 2
        DC16 16, 3, 32, 3, 16, 3, 4, 2, 1, 4, 16, 2, 8, 2, 64, 2, 4, 4, 32, 4
        DC16 64, 3, 1, 4, 8, 1, 1, 2, 2, 8, 4, 22, 4, 5, 32, 15, 8, 29, 8, 2
        DC16 128, 5, 8, 2, 32, 15, 4, 29, 4, 8, 2, 22, 2, 4, 2, 4, 4, 15, 2, 29
        DC16 2, 5, 4, 5, 2, 4, 1, 7, 1, 5, 16, 5, 64, 8, 1, 22, 1, 6, 16, 5, 1
        DC16 6, 4, 6, 8, 6, 2, 15, 1, 29, 1, 6, 1, 7, 16, 7, 8, 7, 4, 7, 2, 9
        DC16 1, 16, 1, 23, 1, 30, 1, 10, 256, 11, 256, 12, 256, 13, 256, 17
        DC16 256, 18, 256, 19, 256, 20, 256, 24, 256, 25, 256, 26, 256, 27, 256
        DC16 31, 256, 32, 256, 33, 256, 34, 256, 10, 128, 17, 128, 24, 128, 31
        DC16 128, 10, 8, 17, 8, 24, 8, 31, 8, 11, 128, 18, 128, 25, 128, 32
        DC16 128, 11, 8, 18, 8, 25, 8, 32, 8, 12, 128, 19, 128, 26, 128, 33
        DC16 128, 12, 8, 19, 8, 26, 8, 33, 8, 13, 128, 20, 128, 27, 128, 34
        DC16 128, 13, 8, 20, 8, 27, 8, 34, 8, 10, 64, 17, 64, 24, 64, 31, 64
        DC16 10, 4, 17, 4, 24, 4, 31, 4, 11, 64, 18, 64, 25, 64, 32, 64, 11, 4
        DC16 18, 4, 25, 4, 32, 4, 12, 64, 19, 64, 26, 64, 33, 64, 12, 4, 19, 4
        DC16 26, 4, 33, 4, 13, 64, 20, 64, 27, 64, 34, 64, 13, 4, 20, 4, 27, 4
        DC16 34, 4, 10, 32, 17, 32, 24, 32, 31, 32, 10, 2, 17, 2, 24, 2, 31, 2
        DC16 11, 32, 18, 32, 25, 32, 32, 32, 11, 2, 18, 2, 25, 2, 32, 2, 12, 32
        DC16 19, 32, 26, 32, 33, 32, 12, 2, 19, 2, 26, 2, 33, 2, 13, 32, 20, 32
        DC16 27, 32, 34, 32, 13, 2, 20, 2, 27, 2, 34, 2, 10, 16, 17, 16, 24, 16
        DC16 31, 16, 10, 1, 17, 1, 24, 1, 31, 1, 11, 16, 18, 16, 25, 16, 32, 16
        DC16 11, 1, 18, 1, 25, 1, 32, 1, 12, 16, 19, 16, 26, 16, 33, 16, 12, 1
        DC16 19, 1, 26, 1, 33, 1, 13, 16, 20, 16, 27, 16, 34, 16, 13, 1, 20, 1
        DC16 27, 1, 34, 1

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for mode_14k>`:
        DATA
        DC16 0, 1, 1, 16, 1, 4, 14, 64, 21, 64, 28, 64, 35, 64, 1, 2, 1, 8, 1
        DC16 32, 8, 256, 8, 128, 8, 64, 8, 32, 8, 16, 22, 256, 22, 128, 22, 64
        DC16 22, 32, 22, 16, 14, 32, 21, 32, 28, 32, 35, 32, 14, 1, 21, 1, 28
        DC16 1, 35, 1, 14, 8, 21, 8, 28, 8, 35, 8, 14, 4, 21, 4, 28, 4, 35, 4
        DC16 15, 32, 29, 32, 14, 2, 21, 2, 28, 2, 35, 2, 14, 16, 21, 16, 28, 16
        DC16 35, 16, 8, 8, 1, 64, 1, 128, 15, 16, 29, 16, 22, 8, 3, 8, 3, 2, 2
        DC16 16, 3, 32, 3, 16, 3, 4, 2, 1, 4, 16, 2, 8, 2, 64, 2, 4, 4, 32, 4
        DC16 64, 3, 1, 4, 8, 1, 1, 2, 2, 8, 4, 22, 4, 5, 32, 15, 8, 29, 8, 2
        DC16 128, 5, 8, 2, 32, 15, 4, 29, 4, 8, 2, 22, 2, 4, 2, 4, 4, 15, 2, 29
        DC16 2, 5, 4, 5, 2, 4, 1, 7, 1, 5, 16, 5, 64, 8, 1, 22, 1, 6, 16, 5, 1
        DC16 6, 4, 6, 8, 6, 2, 15, 1, 29, 1, 6, 1, 7, 16, 7, 8, 7, 4, 7, 2, 9
        DC16 1, 16, 1, 23, 1, 30, 1, 10, 128, 17, 128, 24, 128, 31, 128, 11
        DC16 128, 18, 128, 25, 128, 32, 128, 10, 4096, 17, 4096, 24, 4096, 31
        DC16 4096, 10, 64, 17, 64, 24, 64, 31, 64, 11, 4096, 18, 4096, 25, 4096
        DC16 32, 4096, 11, 64, 18, 64, 25, 64, 32, 64, 12, 256, 19, 256, 26
        DC16 256, 33, 256, 13, 256, 20, 256, 27, 256, 34, 256, 12, 128, 19, 128
        DC16 26, 128, 33, 128, 13, 128, 20, 128, 27, 128, 34, 128, 12, 64, 19
        DC16 64, 26, 64, 33, 64, 13, 64, 20, 64, 27, 64, 34, 64, 12, 32, 19, 32
        DC16 26, 32, 33, 32, 13, 32, 20, 32, 27, 32, 34, 32, 10, 32, 17, 32, 24
        DC16 32, 31, 32, 11, 32, 18, 32, 25, 32, 32, 32, 10, 16, 17, 16, 24, 16
        DC16 31, 16, 11, 16, 18, 16, 25, 16, 32, 16, 12, 16, 19, 16, 26, 16, 33
        DC16 16, 13, 16, 20, 16, 27, 16, 34, 16, 10, 2048, 17, 2048, 24, 2048
        DC16 31, 2048, 10, 8, 17, 8, 24, 8, 31, 8, 11, 2048, 18, 2048, 25, 2048
        DC16 32, 2048, 11, 8, 18, 8, 25, 8, 32, 8, 12, 8, 19, 8, 26, 8, 33, 8
        DC16 13, 8, 20, 8, 27, 8, 34, 8, 10, 1024, 17, 1024, 24, 1024, 31, 1024
        DC16 10, 4, 17, 4, 24, 4, 31, 4, 11, 1024, 18, 1024, 25, 1024, 32, 1024
        DC16 11, 4, 18, 4, 25, 4, 32, 4, 12, 4, 19, 4, 26, 4, 33, 4, 13, 4, 20
        DC16 4, 27, 4, 34, 4, 10, 512, 17, 512, 24, 512, 31, 512, 10, 2, 17, 2
        DC16 24, 2, 31, 2, 11, 512, 18, 512, 25, 512, 32, 512, 11, 2, 18, 2, 25
        DC16 2, 32, 2, 12, 2, 19, 2, 26, 2, 33, 2, 13, 2, 20, 2, 27, 2, 34, 2
        DC16 10, 256, 17, 256, 24, 256, 31, 256, 10, 1, 17, 1, 24, 1, 31, 1, 11
        DC16 256, 18, 256, 25, 256, 32, 256, 11, 1, 18, 1, 25, 1, 32, 1, 12, 1
        DC16 19, 1, 26, 1, 33, 1, 13, 1, 20, 1, 27, 1, 34, 1

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for mode_16k>`:
        DATA
        DC16 0, 1, 1, 16, 1, 4, 14, 64, 21, 64, 28, 64, 35, 64, 1, 2, 1, 8, 1
        DC16 32, 8, 256, 8, 128, 8, 64, 8, 32, 8, 16, 22, 256, 22, 128, 22, 64
        DC16 22, 32, 22, 16, 14, 32, 21, 32, 28, 32, 35, 32, 14, 1, 21, 1, 28
        DC16 1, 35, 1, 14, 8, 21, 8, 28, 8, 35, 8, 14, 4, 21, 4, 28, 4, 35, 4
        DC16 15, 32, 29, 32, 14, 2, 21, 2, 28, 2, 35, 2, 14, 16, 21, 16, 28, 16
        DC16 35, 16, 8, 8, 1, 64, 1, 128, 15, 16, 29, 16, 22, 8, 3, 8, 3, 2, 2
        DC16 16, 3, 32, 3, 16, 3, 4, 2, 1, 4, 16, 2, 8, 2, 64, 2, 4, 4, 32, 4
        DC16 64, 3, 1, 4, 8, 1, 1, 2, 2, 8, 4, 22, 4, 5, 32, 15, 8, 29, 8, 2
        DC16 128, 5, 8, 2, 32, 15, 4, 29, 4, 8, 2, 22, 2, 4, 2, 4, 4, 15, 2, 29
        DC16 2, 5, 4, 5, 2, 4, 1, 7, 1, 5, 16, 5, 64, 8, 1, 22, 1, 6, 16, 5, 1
        DC16 6, 4, 6, 8, 6, 2, 15, 1, 29, 1, 6, 1, 7, 16, 7, 8, 7, 4, 7, 2, 9
        DC16 1, 16, 1, 23, 1, 30, 1, 10, 64, 17, 64, 24, 64, 31, 64, 11, 64, 18
        DC16 64, 25, 64, 32, 64, 12, 64, 19, 64, 26, 64, 33, 64, 13, 64, 20, 64
        DC16 27, 64, 34, 64, 10, 4096, 17, 4096, 24, 4096, 31, 4096, 11, 4096
        DC16 18, 4096, 25, 4096, 32, 4096, 12, 4096, 19, 4096, 26, 4096, 33
        DC16 4096, 13, 4096, 20, 4096, 27, 4096, 34, 4096, 10, 128, 17, 128, 24
        DC16 128, 31, 128, 11, 128, 18, 128, 25, 128, 32, 128, 12, 128, 19, 128
        DC16 26, 128, 33, 128, 13, 128, 20, 128, 27, 128, 34, 128, 10, 2048, 17
        DC16 2048, 24, 2048, 31, 2048, 11, 2048, 18, 2048, 25, 2048, 32, 2048
        DC16 12, 2048, 19, 2048, 26, 2048, 33, 2048, 13, 2048, 20, 2048, 27
        DC16 2048, 34, 2048, 10, 1024, 17, 1024, 24, 1024, 31, 1024, 10, 32, 17
        DC16 32, 24, 32, 31, 32, 10, 4, 17, 4, 24, 4, 31, 4, 11, 1024, 18, 1024
        DC16 25, 1024, 32, 1024, 11, 32, 18, 32, 25, 32, 32, 32, 11, 4, 18, 4
        DC16 25, 4, 32, 4, 12, 1024, 19, 1024, 26, 1024, 33, 1024, 12, 32, 19
        DC16 32, 26, 32, 33, 32, 12, 4, 19, 4, 26, 4, 33, 4, 13, 1024, 20, 1024
        DC16 27, 1024, 34, 1024, 13, 32, 20, 32, 27, 32, 34, 32, 13, 4, 20, 4
        DC16 27, 4, 34, 4, 10, 512, 17, 512, 24, 512, 31, 512, 10, 16, 17, 16
        DC16 24, 16, 31, 16, 10, 2, 17, 2, 24, 2, 31, 2, 11, 512, 18, 512, 25
        DC16 512, 32, 512, 11, 16, 18, 16, 25, 16, 32, 16, 11, 2, 18, 2, 25, 2
        DC16 32, 2, 12, 512, 19, 512, 26, 512, 33, 512, 12, 16, 19, 16, 26, 16
        DC16 33, 16, 12, 2, 19, 2, 26, 2, 33, 2, 13, 512, 20, 512, 27, 512, 34
        DC16 512, 13, 16, 20, 16, 27, 16, 34, 16, 13, 2, 20, 2, 27, 2, 34, 2
        DC16 10, 256, 17, 256, 24, 256, 31, 256, 10, 8, 17, 8, 24, 8, 31, 8, 10
        DC16 1, 17, 1, 24, 1, 31, 1, 11, 256, 18, 256, 25, 256, 32, 256, 11, 8
        DC16 18, 8, 25, 8, 32, 8, 11, 1, 18, 1, 25, 1, 32, 1, 12, 256, 19, 256
        DC16 26, 256, 33, 256, 12, 8, 19, 8, 26, 8, 33, 8, 12, 1, 19, 1, 26, 1
        DC16 33, 1, 13, 256, 20, 256, 27, 256, 34, 256, 13, 8, 20, 8, 27, 8, 34
        DC16 8, 13, 1, 20, 1, 27, 1, 34, 1

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for mode_18k>`:
        DATA
        DC16 0, 1, 1, 16, 1, 4, 18, 64, 29, 64, 40, 64, 51, 64, 1, 2, 1, 8, 1
        DC16 32, 8, 256, 8, 128, 8, 64, 8, 32, 8, 16, 30, 256, 30, 128, 30, 64
        DC16 30, 32, 30, 16, 18, 32, 29, 32, 40, 32, 51, 32, 18, 1, 29, 1, 40
        DC16 1, 51, 1, 18, 8, 29, 8, 40, 8, 51, 8, 18, 4, 29, 4, 40, 4, 51, 4
        DC16 19, 32, 41, 32, 18, 2, 29, 2, 40, 2, 51, 2, 18, 16, 29, 16, 40, 16
        DC16 51, 16, 8, 8, 1, 64, 1, 128, 19, 16, 41, 16, 30, 8, 3, 8, 3, 2, 2
        DC16 16, 3, 32, 3, 16, 3, 4, 2, 1, 4, 16, 2, 8, 2, 64, 2, 4, 4, 32, 4
        DC16 64, 3, 1, 4, 8, 1, 1, 2, 2, 8, 4, 30, 4, 5, 32, 19, 8, 41, 8, 2
        DC16 128, 5, 8, 2, 32, 19, 4, 41, 4, 8, 2, 30, 2, 4, 2, 4, 4, 19, 2, 41
        DC16 2, 5, 4, 5, 2, 4, 1, 7, 1, 5, 16, 5, 64, 8, 1, 30, 1, 6, 16, 5, 1
        DC16 6, 4, 6, 8, 6, 2, 19, 1, 41, 1, 6, 1, 7, 16, 7, 8, 7, 4, 7, 2, 9
        DC16 1, 20, 1, 31, 1, 42, 1, 28, 1, 45, 1, 21, 1, 17, 1, 22, 1, 11, 1
        DC16 39, 1, 10, 1, 12, 1, 50, 1, 23, 2, 23, 1, 43, 1, 25, 1, 10, 2, 33
        DC16 1, 44, 1, 13, 2, 32, 1, 22, 2, 26, 1, 46, 2, 35, 2, 13, 1, 16, 1
        DC16 12, 2, 14, 1, 43, 2, 15, 1, 24, 1, 24, 2, 21, 2, 34, 1, 44, 2, 46
        DC16 1, 49, 1, 11, 2, 45, 2, 27, 1, 48, 1, 47, 1, 34, 2, 32, 2, 38, 1
        DC16 37, 1, 33, 2, 36, 1, 50, 32, 35, 1, 26, 8192, 15, 64, 27, 8192, 15
        DC16 32, 26, 64, 50, 64, 17, 512, 47, 8192, 14, 8192, 27, 64, 17, 32
        DC16 48, 64, 14, 64, 28, 64, 16, 32, 27, 32, 16, 8192, 14, 32, 28, 32
        DC16 25, 32, 49, 64, 47, 64, 25, 8192, 39, 32, 14, 512, 48, 32, 26, 32
        DC16 25, 64, 16, 512, 49, 32, 17, 1024, 47, 32, 49, 8192, 39, 64, 14
        DC16 1024, 17, 8192, 27, 512, 37, 64, 17, 64, 15, 8192, 17, 128, 28
        DC16 512, 37, 32, 38, 64, 27, 1024, 14, 128, 28, 8192, 16, 1024, 50
        DC16 8192, 16, 64, 48, 128, 15, 512, 49, 512, 48, 8192, 49, 1024, 38
        DC16 8192, 26, 512, 50, 512, 25, 512, 15, 1024, 39, 1024, 36, 32, 38
        DC16 32, 47, 128, 50, 16, 50, 1024, 26, 128, 36, 64, 47, 512, 48, 512
        DC16 28, 1024, 39, 512, 25, 1024, 27, 128, 39, 8192, 50, 128, 38, 512
        DC16 15, 128, 25, 128, 17, 16, 28, 128, 26, 1024, 37, 8192, 38, 128, 49
        DC16 128, 47, 1024, 38, 1024, 15, 16, 36, 8192, 16, 128, 49, 16, 36
        DC16 128, 36, 512, 36, 1024, 39, 128, 37, 512, 37, 1024, 48, 1024, 36
        DC16 16, 47, 16, 16, 16, 14, 16, 27, 16, 39, 16, 14, 4096, 28, 16, 25
        DC16 16, 48, 16, 27, 4096, 37, 16, 37, 128, 38, 16, 17, 8, 26, 4096, 26
        DC16 16, 50, 8, 14, 8, 25, 4096, 17, 4096, 47, 8, 16, 4096, 28, 4096
        DC16 47, 4096, 15, 4096, 36, 8, 15, 8, 28, 8, 17, 256, 49, 8, 27, 8, 50
        DC16 4096, 48, 4096, 48, 8, 39, 8, 37, 4096, 26, 8, 17, 4, 47, 4, 14
        DC16 256, 50, 4, 48, 4, 38, 4096, 28, 256, 27, 256, 39, 256, 16, 4, 16
        DC16 256, 25, 8, 16, 8, 15, 4, 14, 4, 39, 4096, 39, 4, 37, 8, 36, 4096
        DC16 38, 8, 27, 4, 15, 256, 25, 4, 36, 4, 49, 256, 26, 4, 49, 4096, 28
        DC16 4, 49, 4, 37, 4, 26, 256, 47, 256, 25, 256, 50, 256, 38, 4, 48
        DC16 256, 38, 256, 37, 256, 36, 256, 50, 2, 26, 2048, 17, 2, 14, 2048
        DC16 28, 2048, 27, 2048, 25, 2048, 37, 2048, 14, 2, 47, 2048, 49, 2048
        DC16 47, 2, 49, 2, 17, 2048, 38, 2048, 15, 2048, 39, 2, 16, 2, 15, 2
        DC16 50, 2048, 48, 2048, 27, 2, 37, 2, 28, 2, 48, 2, 16, 2048, 25, 2
        DC16 26, 2, 39, 2048, 36, 2048, 36, 2, 38, 2

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for mode_20k>`:
        DATA
        DC16 0, 1, 1, 16, 1, 4, 18, 64, 29, 64, 40, 64, 51, 64, 1, 2, 1, 8, 1
        DC16 32, 8, 256, 8, 128, 8, 64, 8, 32, 8, 16, 30, 256, 30, 128, 30, 64
        DC16 30, 32, 30, 16, 18, 32, 29, 32, 40, 32, 51, 32, 18, 1, 29, 1, 40
        DC16 1, 51, 1, 18, 8, 29, 8, 40, 8, 51, 8, 18, 4, 29, 4, 40, 4, 51, 4
        DC16 19, 32, 41, 32, 18, 2, 29, 2, 40, 2, 51, 2, 18, 16, 29, 16, 40, 16
        DC16 51, 16, 8, 8, 1, 64, 1, 128, 19, 16, 41, 16, 30, 8, 3, 8, 3, 2, 2
        DC16 16, 3, 32, 3, 16, 3, 4, 2, 1, 4, 16, 2, 8, 2, 64, 2, 4, 4, 32, 4
        DC16 64, 3, 1, 4, 8, 1, 1, 2, 2, 8, 4, 30, 4, 5, 32, 19, 8, 41, 8, 2
        DC16 128, 5, 8, 2, 32, 19, 4, 41, 4, 8, 2, 30, 2, 4, 2, 4, 4, 19, 2, 41
        DC16 2, 5, 4, 5, 2, 4, 1, 7, 1, 5, 16, 5, 64, 8, 1, 30, 1, 6, 16, 5, 1
        DC16 6, 4, 6, 8, 6, 2, 19, 1, 41, 1, 6, 1, 7, 16, 7, 8, 7, 4, 7, 2, 9
        DC16 1, 20, 1, 31, 1, 42, 1, 10, 8, 11, 8, 15, 256, 46, 2, 14, 256, 43
        DC16 8, 21, 8, 48, 256, 22, 8, 44, 8, 24, 2, 45, 2, 26, 256, 23, 2, 35
        DC16 2, 12, 2, 25, 256, 36, 256, 22, 512, 47, 256, 10, 512, 33, 8, 32
        DC16 8, 13, 2, 34, 2, 24, 1, 11, 512, 13, 1, 28, 8192, 16, 8192, 37
        DC16 256, 21, 512, 23, 1, 46, 1, 35, 1, 45, 1, 27, 8192, 50, 8192, 43
        DC16 512, 12, 1, 44, 512, 49, 8192, 17, 8192, 32, 512, 33, 512, 34, 1
        DC16 39, 8192, 38, 8192, 10, 16, 10, 256, 22, 16, 11, 256, 15, 128, 26
        DC16 128, 43, 256, 21, 16, 25, 128, 22, 256, 11, 16, 50, 16, 44, 256
        DC16 44, 16, 47, 128, 16, 4096, 14, 128, 21, 256, 32, 256, 43, 16, 17
        DC16 16, 33, 256, 27, 256, 48, 128, 32, 16, 10, 4, 33, 16, 28, 4096, 28
        DC16 32, 21, 4, 17, 4096, 44, 4, 37, 128, 32, 4, 39, 16, 27, 4096, 27
        DC16 16, 39, 32, 15, 64, 27, 32, 36, 128, 17, 32, 49, 4096, 50, 32, 16
        DC16 32, 43, 4, 49, 16, 25, 64, 49, 32, 14, 64, 16, 16, 39, 256, 26, 64
        DC16 11, 4, 28, 16, 27, 512, 16, 256, 39, 4096, 28, 512, 49, 256, 50
        DC16 256, 50, 4096, 28, 256, 48, 64, 17, 64, 17, 512, 17, 256, 50, 64
        DC16 22, 4, 16, 512, 16, 64, 38, 4096, 50, 512, 39, 512, 38, 32, 38, 16
        DC16 47, 64, 28, 64, 37, 64, 33, 4, 49, 512, 50, 8, 39, 8, 39, 64, 36
        DC16 64, 17, 8, 49, 64, 27, 8, 15, 8, 27, 64, 38, 8, 28, 8, 38, 256, 38
        DC16 512, 26, 8, 49, 8, 14, 8, 22, 128, 38, 64, 10, 128, 47, 8, 43, 1
        DC16 26, 4, 11, 1, 16, 8, 44, 128, 28, 2048, 47, 4, 11, 128, 15, 4, 21
        DC16 1, 21, 128, 27, 2048, 10, 1, 43, 128, 44, 1, 25, 8, 48, 8, 33, 1
        DC16 27, 4, 25, 4, 36, 4, 36, 8, 17, 4, 32, 1, 27, 128, 14, 4, 50, 2
        DC16 17, 2048, 15, 32, 50, 4, 16, 4, 48, 4, 38, 4, 33, 128, 16, 2048
        DC16 37, 8, 39, 4, 25, 32, 22, 1, 32, 128, 37, 4, 17, 2, 49, 4, 26, 32
        DC16 39, 2048, 14, 32, 50, 2048, 39, 2, 17, 128, 16, 128, 49, 2048, 47
        DC16 32, 48, 32, 28, 4, 38, 2048, 28, 2, 10, 2, 50, 128, 38, 2, 28, 128
        DC16 16, 2, 25, 2, 15, 2, 39, 128, 49, 2, 49, 128, 27, 2, 36, 32, 26, 2
        DC16 44, 2, 44, 64, 22, 2, 37, 32, 36, 2, 33, 2, 32, 2, 11, 2, 47, 2
        DC16 21, 2, 10, 64, 14, 2, 43, 64, 22, 64, 37, 2, 48, 2, 43, 2, 11, 64
        DC16 38, 128, 25, 512, 21, 64, 48, 512, 14, 512, 15, 512, 50, 1, 37
        DC16 512, 33, 64, 26, 512, 32, 64, 27, 1024, 36, 512, 28, 1024, 47, 512
        DC16 17, 1, 17, 1024, 39, 1, 16, 1024, 50, 1024, 26, 16, 16, 1, 49, 1
        DC16 27, 1, 15, 16, 39, 1024, 25, 16, 28, 1, 49, 1024, 38, 1024, 14, 16
        DC16 38, 1, 47, 1, 47, 16, 48, 16, 36, 16, 26, 1, 25, 1, 37, 16, 14, 1
        DC16 15, 1, 21, 32, 43, 32, 37, 1, 48, 1, 11, 32, 44, 32, 10, 32, 36, 1
        DC16 22, 32, 33, 32, 32, 32

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for mode_23k>`:
        DATA
        DC16 0, 1, 1, 16, 1, 4, 18, 64, 29, 64, 40, 64, 51, 64, 1, 2, 1, 8, 1
        DC16 32, 8, 256, 8, 128, 8, 64, 8, 32, 8, 16, 30, 256, 30, 128, 30, 64
        DC16 30, 32, 30, 16, 18, 32, 29, 32, 40, 32, 51, 32, 18, 1, 29, 1, 40
        DC16 1, 51, 1, 18, 8, 29, 8, 40, 8, 51, 8, 18, 4, 29, 4, 40, 4, 51, 4
        DC16 19, 32, 41, 32, 18, 2, 29, 2, 40, 2, 51, 2, 18, 16, 29, 16, 40, 16
        DC16 51, 16, 8, 8, 1, 64, 1, 128, 19, 16, 41, 16, 30, 8, 3, 8, 3, 2, 2
        DC16 16, 3, 32, 3, 16, 3, 4, 2, 1, 4, 16, 2, 8, 2, 64, 2, 4, 4, 32, 4
        DC16 64, 3, 1, 4, 8, 1, 1, 2, 2, 8, 4, 30, 4, 5, 32, 19, 8, 41, 8, 2
        DC16 128, 5, 8, 2, 32, 19, 4, 41, 4, 8, 2, 30, 2, 4, 2, 4, 4, 19, 2, 41
        DC16 2, 5, 4, 5, 2, 4, 1, 7, 1, 5, 16, 5, 64, 8, 1, 30, 1, 6, 16, 5, 1
        DC16 6, 4, 6, 8, 6, 2, 19, 1, 41, 1, 6, 1, 7, 16, 7, 8, 7, 4, 7, 2, 9
        DC16 1, 20, 1, 31, 1, 42, 1, 23, 1024, 24, 1024, 22, 1024, 12, 1024, 10
        DC16 1024, 46, 1024, 13, 1024, 21, 1024, 35, 1024, 44, 1024, 43, 1024
        DC16 33, 1024, 11, 1024, 23, 256, 45, 1024, 34, 1024, 24, 256, 35, 256
        DC16 13, 256, 11, 256, 23, 512, 46, 256, 22, 256, 10, 256, 13, 512, 10
        DC16 512, 46, 512, 43, 256, 21, 256, 12, 256, 21, 512, 32, 1024, 22
        DC16 512, 12, 512, 45, 512, 45, 256, 44, 512, 44, 256, 24, 512, 35, 512
        DC16 11, 512, 32, 256, 32, 512, 43, 512, 33, 256, 34, 256, 33, 512, 34
        DC16 512, 23, 128, 10, 128, 24, 128, 12, 128, 13, 128, 11, 128, 43, 128
        DC16 46, 128, 22, 128, 21, 128, 50, 512, 35, 128, 45, 128, 13, 4, 11, 4
        DC16 33, 128, 10, 64, 32, 128, 43, 4, 17, 512, 47, 512, 21, 4, 14, 512
        DC16 44, 128, 24, 4, 12, 4, 22, 4, 10, 4, 13, 64, 25, 512, 16, 512, 11
        DC16 64, 39, 512, 23, 4, 35, 4, 44, 64, 45, 4, 49, 512, 35, 64, 27, 512
        DC16 46, 4, 34, 128, 28, 512, 15, 512, 26, 512, 23, 64, 16, 32, 36, 512
        DC16 46, 64, 15, 64, 37, 512, 24, 64, 38, 512, 43, 64, 48, 512, 22, 64
        DC16 10, 8, 45, 64, 12, 64, 48, 64, 26, 32, 17, 1024, 23, 8, 49, 1024
        DC16 15, 1024, 48, 16, 17, 32, 33, 64, 21, 64, 49, 64, 25, 32, 50, 64
        DC16 26, 64, 28, 1024, 27, 64, 13, 8, 34, 4, 44, 4, 27, 32, 21, 8, 32
        DC16 64, 22, 8, 50, 1024, 27, 1024, 48, 32, 14, 1024, 32, 4, 17, 64, 16
        DC16 64, 34, 64, 15, 32, 39, 16, 24, 8, 47, 64, 13, 32, 17, 16, 28, 64
        DC16 47, 1024, 45, 8, 25, 16, 16, 16, 33, 4, 39, 32, 14, 64, 28, 32, 49
        DC16 32, 12, 8, 36, 1024, 50, 32, 25, 1024, 39, 64, 23, 32, 14, 16, 26
        DC16 16, 47, 32, 38, 64, 37, 1024, 14, 32, 36, 32, 15, 16, 16, 1024, 11
        DC16 32, 25, 64, 48, 1024, 26, 1024, 44, 8, 43, 8, 49, 16, 10, 32, 43
        DC16 32, 39, 1024, 11, 8, 50, 16, 21, 2, 37, 64, 21, 32, 28, 16, 47, 16
        DC16 37, 32, 35, 8, 24, 32, 38, 32, 46, 32, 32, 8, 10, 16, 23, 1, 37
        DC16 16, 13, 16, 21, 1, 27, 16, 33, 32, 36, 64, 23, 16, 46, 8, 12, 32
        DC16 24, 2, 13, 1, 10, 1, 44, 32, 22, 32, 38, 16, 24, 1, 38, 1024, 32
        DC16 32, 45, 32, 43, 1, 44, 16, 34, 8, 35, 1, 46, 1, 22, 2, 33, 1, 36
        DC16 16, 35, 32, 43, 16, 45, 1, 23, 2, 22, 1, 12, 1, 13, 2, 14, 256, 27
        DC16 8, 11, 1, 12, 2, 11, 2, 17, 256, 44, 1, 21, 16, 24, 16, 45, 16, 16
        DC16 256, 22, 16, 48, 8, 11, 16, 43, 2, 28, 256, 27, 256, 10, 2, 32, 2
        DC16 33, 8, 17, 8, 35, 2, 47, 256, 15, 256, 12, 16, 16, 8, 39, 8, 15, 8
        DC16 34, 32, 34, 1, 44, 2, 27, 4, 45, 2, 35, 16, 46, 16, 33, 2, 50, 256
        DC16 48, 256, 26, 8, 25, 8, 25, 256, 50, 8, 14, 8, 32, 1, 49, 256, 26
        DC16 256, 39, 256, 38, 8, 17, 4, 28, 8, 37, 256, 46, 2, 50, 4, 36, 256
        DC16 34, 16, 15, 4, 14, 4, 33, 16, 49, 8, 32, 16, 48, 4, 38, 256, 34, 2
        DC16 47, 4, 25, 4, 36, 8, 26, 4, 37, 8, 16, 4, 48, 2, 28, 4, 37, 4, 39
        DC16 4, 47, 8, 36, 4, 17, 2, 38, 4, 49, 4, 27, 2, 14, 2, 25, 2, 50, 2
        DC16 28, 2, 15, 2, 47, 2, 39, 2, 26, 2, 16, 2, 49, 2, 37, 2, 47, 128
        DC16 36, 2, 38, 2, 16, 128, 14, 128, 17, 128, 50, 128, 39, 128, 28, 128
        DC16 49, 128, 15, 128, 38, 128, 25, 128, 37, 128, 26, 128, 27, 128, 48
        DC16 128, 50, 1, 36, 128, 39, 1, 14, 1, 49, 1, 26, 1, 25, 1, 15, 1, 48
        DC16 1, 38, 1, 27, 1, 28, 1, 16, 1, 17, 1, 47, 1, 37, 1, 36, 1

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for mode_24k>`:
        DATA
        DC16 0, 1, 1, 16, 1, 4, 18, 64, 30, 64, 42, 64, 54, 64, 1, 2, 1, 8, 1
        DC16 32, 8, 256, 8, 128, 8, 64, 8, 32, 8, 16, 32, 256, 32, 128, 32, 64
        DC16 32, 32, 32, 16, 18, 32, 30, 32, 42, 32, 54, 32, 18, 1, 30, 1, 42
        DC16 1, 54, 1, 18, 8, 30, 8, 42, 8, 54, 8, 18, 4, 30, 4, 42, 4, 54, 4
        DC16 20, 32, 44, 32, 18, 2, 30, 2, 42, 2, 54, 2, 18, 16, 30, 16, 42, 16
        DC16 54, 16, 8, 8, 1, 64, 1, 128, 20, 16, 44, 16, 32, 8, 3, 8, 3, 2, 2
        DC16 16, 3, 32, 3, 16, 3, 4, 2, 1, 4, 16, 2, 8, 2, 64, 2, 4, 4, 32, 4
        DC16 64, 3, 1, 4, 8, 1, 1, 2, 2, 8, 4, 32, 4, 5, 32, 19, 8, 19, 4, 19
        DC16 2, 19, 1, 31, 8, 31, 4, 31, 2, 31, 1, 43, 8, 43, 4, 43, 2, 43, 1
        DC16 55, 8, 55, 4, 55, 2, 55, 1, 20, 8, 44, 8, 2, 128, 5, 8, 2, 32, 20
        DC16 4, 44, 4, 8, 2, 32, 2, 4, 2, 4, 4, 20, 2, 44, 2, 5, 4, 5, 2, 4, 1
        DC16 7, 1, 5, 16, 5, 64, 8, 1, 32, 1, 6, 16, 5, 1, 6, 4, 6, 8, 6, 2, 20
        DC16 1, 44, 1, 6, 1, 7, 16, 7, 8, 7, 4, 7, 2, 9, 1, 21, 1, 33, 1, 45, 1
        DC16 24, 1024, 25, 1024, 23, 1024, 12, 1024, 10, 1024, 49, 1024, 13
        DC16 1024, 22, 1024, 37, 1024, 47, 1024, 46, 1024, 35, 1024, 11, 1024
        DC16 24, 256, 48, 1024, 36, 1024, 25, 256, 37, 256, 13, 256, 11, 256
        DC16 24, 512, 49, 256, 23, 256, 10, 256, 13, 512, 10, 512, 49, 512, 46
        DC16 256, 22, 256, 12, 256, 22, 512, 34, 1024, 23, 512, 12, 512, 48
        DC16 512, 48, 256, 47, 512, 47, 256, 25, 512, 37, 512, 11, 512, 34, 256
        DC16 34, 512, 46, 512, 35, 256, 36, 256, 35, 512, 36, 512, 24, 128, 10
        DC16 128, 25, 128, 12, 128, 13, 128, 11, 128, 46, 128, 49, 128, 23, 128
        DC16 22, 128, 53, 512, 37, 128, 48, 128, 13, 4, 11, 4, 35, 128, 10, 64
        DC16 34, 128, 46, 4, 17, 512, 50, 512, 22, 4, 14, 512, 47, 128, 25, 4
        DC16 12, 4, 23, 4, 10, 4, 13, 64, 26, 512, 16, 512, 11, 64, 41, 512, 24
        DC16 4, 37, 4, 47, 64, 48, 4, 52, 512, 37, 64, 28, 512, 49, 4, 36, 128
        DC16 29, 512, 15, 512, 27, 512, 24, 64, 16, 32, 38, 512, 49, 64, 15, 64
        DC16 39, 512, 25, 64, 40, 512, 46, 64, 51, 512, 23, 64, 10, 8, 48, 64
        DC16 12, 64, 51, 64, 27, 32, 17, 1024, 24, 8, 52, 1024, 15, 1024, 51
        DC16 16, 17, 32, 35, 64, 22, 64, 52, 64, 26, 32, 53, 64, 27, 64, 29
        DC16 1024, 28, 64, 13, 8, 36, 4, 47, 4, 28, 32, 22, 8, 34, 64, 23, 8
        DC16 53, 1024, 28, 1024, 51, 32, 14, 1024, 34, 4, 17, 64, 16, 64, 36
        DC16 64, 15, 32, 41, 16, 25, 8, 50, 64, 13, 32, 17, 16, 29, 64, 50
        DC16 1024, 48, 8, 26, 16, 16, 16, 35, 4, 41, 32, 14, 64, 29, 32, 52, 32
        DC16 12, 8, 38, 1024, 53, 32, 26, 1024, 41, 64, 24, 32, 14, 16, 27, 16
        DC16 50, 32, 40, 64, 39, 1024, 14, 32, 38, 32, 15, 16, 16, 1024, 11, 32
        DC16 26, 64, 51, 1024, 27, 1024, 47, 8, 46, 8, 52, 16, 10, 32, 46, 32
        DC16 41, 1024, 11, 8, 53, 16, 22, 2, 39, 64, 22, 32, 29, 16, 50, 16, 39
        DC16 32, 37, 8, 25, 32, 40, 32, 49, 32, 34, 8, 10, 16, 24, 1, 39, 16
        DC16 13, 16, 22, 1, 28, 16, 35, 32, 38, 64, 24, 16, 49, 8, 12, 32, 25
        DC16 2, 13, 1, 10, 1, 47, 32, 23, 32, 40, 16, 25, 1, 40, 1024, 34, 32
        DC16 48, 32, 46, 1, 47, 16, 36, 8, 37, 1, 49, 1, 23, 2, 35, 1, 38, 16
        DC16 37, 32, 46, 16, 48, 1, 24, 2, 23, 1, 12, 1, 13, 2, 14, 256, 28, 8
        DC16 11, 1, 12, 2, 11, 2, 17, 256, 47, 1, 22, 16, 25, 16, 48, 16, 16
        DC16 256, 23, 16, 51, 8, 11, 16, 46, 2, 29, 256, 28, 256, 10, 2, 34, 2
        DC16 35, 8, 17, 8, 37, 2, 50, 256, 15, 256, 12, 16, 16, 8, 41, 8, 15, 8
        DC16 36, 32, 36, 1, 47, 2, 28, 4, 48, 2, 37, 16, 49, 16, 35, 2, 53, 256
        DC16 51, 256, 27, 8, 26, 8, 26, 256, 53, 8, 14, 8, 34, 1, 52, 256, 27
        DC16 256, 41, 256, 40, 8, 17, 4, 29, 8, 39, 256, 49, 2, 53, 4, 38, 256
        DC16 36, 16, 15, 4, 14, 4, 35, 16, 52, 8, 34, 16, 51, 4, 40, 256, 36, 2
        DC16 50, 4, 26, 4, 38, 8, 27, 4, 39, 8, 16, 4, 51, 2, 29, 4, 39, 4, 41
        DC16 4, 50, 8, 38, 4, 17, 2, 40, 4, 52, 4, 28, 2, 14, 2, 26, 2, 53, 2
        DC16 29, 2, 15, 2, 50, 2, 41, 2, 27, 2, 16, 2, 52, 2, 39, 2, 50, 128
        DC16 38, 2, 40, 2, 16, 128, 14, 128, 17, 128, 53, 128, 41, 128, 29, 128
        DC16 52, 128, 15, 128, 40, 128, 26, 128, 39, 128, 27, 128, 28, 128, 51
        DC16 128, 53, 1, 38, 128, 41, 1, 14, 1, 52, 1, 27, 1, 26, 1, 15, 1, 51
        DC16 1, 40, 1, 28, 1, 29, 1, 16, 1, 17, 1, 50, 1, 39, 1, 38, 1

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for mode_DTX>`:
        DATA
        DC16 0, 32, 0, 16, 0, 8, 0, 4, 0, 2, 0, 1, 1, 32, 1, 16, 1, 8, 1, 4, 1
        DC16 2, 1, 1, 2, 32, 2, 16, 2, 8, 2, 4, 2, 2, 2, 1, 3, 16, 3, 8, 3, 4
        DC16 3, 2, 3, 1, 4, 16, 4, 8, 4, 4, 4, 2, 4, 1, 5, 32, 5, 16, 5, 8, 5
        DC16 4, 5, 2, 5, 1, 6, 1

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for nb_of_param>`:
        DATA
        DC16 18, 32, 36, 36, 36, 52, 52, 52, 56
        DC8 0, 0

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for dfh_M7k>`:
        DATA
        DC16 0, 49, 131, 84, 5, 50, 29, 2015, 8, 0, 2061, 8, 1, 3560, 8, 0
        DC16 2981, 8

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for dfh_M9k>`:
        DATA
        DC16 0, 49, 131, 55, 49, 38, 26, 29, 29, 3, 15, 7, 15, 8, 16, 13, 7, 17
        DC16 16, 8, 0, 16, 20, 16, 27, 8, 23, 0, 27, 0, 27, 8

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for dfh_M12k>`:
        DATA
        DC16 0, 49, 131, 55, 49, 38, 26, 29, 58, 1, 7, 63, 127, 15, 70, 37, 1
        DC16 209, 210, 224, 96, 31, 7, 1, 256, 260, 271, 443, 31, 47, 0, 400
        DC16 238, 436, 347, 31

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for dfh_M14k>`:
        DATA
        DC16 0, 49, 131, 55, 49, 38, 26, 29, 58, 1, 3847, 3845, 63, 127, 70, 34
        DC16 0, 3128, 4517, 192, 96, 0, 2, 1, 4160, 8036, 267, 443, 31, 46, 0
        DC16 3840, 7091, 432, 395, 31

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for dfh_M16k>`:
        DATA
        DC16 0, 49, 131, 55, 49, 38, 26, 29, 58, 1, 3847, 3845, 3847, 3843, 70
        DC16 31, 0, 3648, 4764, 824, 2864, 0, 6, 1, 4160, 5220, 4319, 7131, 31
        DC16 47, 0, 112, 3764, 219, 211, 31

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for dfh_M18k>`:
        DATA
        DC16 0, 49, 131, 55, 49, 38, 26, 29, 58, 1, 3, 2, 3, 2, 7223, 703, 7223
        DC16 703, 70, 0, 1, 3, 2, 2, 3, 9475, 9483, 3090, 8737, 0, 0, 1, 0, 0
        DC16 2, 0, 4112, 4400, 8415, 14047, 31, 38, 0, 2, 1, 3, 1, 91, 426
        DC16 13545, 12955, 0

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for dfh_M20k>`:
        DATA
        DC16 0, 49, 131, 55, 49, 38, 26, 29, 58, 1, 161, 759, 3, 2, 127, 516
        DC16 6167, 447, 70, 11, 1, 264, 641, 2, 3, 123, 562, 8347, 4354, 0, 1
        DC16 1, 264, 408, 3, 0, 256, 308, 9487, 14047, 31, 46, 0, 320, 885, 2
        DC16 2, 464, 439, 11347, 12739, 0

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for dfh_M23k>`:
        DATA
        DC16 0, 49, 131, 55, 49, 38, 26, 29, 58, 1, 1154, 1729, 1154, 1761, 447
        DC16 1519, 959, 495, 70, 27, 1, 1800, 1253, 665, 1960, 546, 164, 1043
        DC16 335, 0, 28, 1, 580, 196, 1187, 383, 1031, 1052, 359, 1531, 31, 45
        DC16 1, 1024, 893, 1272, 1920, 101, 876, 203, 1119, 31

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for dfh_M24k>`:
        DATA
        DC16 0, 49, 131, 55, 49, 38, 26, 29, 58, 1, 1729, 1154, 1761, 1154
        DC16 1519, 959, 495, 447, 70, 3, 42, 1, 580, 1436, 1362, 1250, 901, 714
        DC16 24, 45, 0, 0, 0, 1, 68, 708, 1212, 383, 1048, 1611, 1756, 1467, 31
        DC16 1, 23, 0, 1536, 1460, 861, 1554, 410, 1368, 1008, 594, 31, 0

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for dhf>`:
        DATA
        DC32 dfh_M7k, dfh_M9k, dfh_M12k, dfh_M14k, dfh_M16k, dfh_M18k, dfh_M20k
        DC32 dfh_M23k, dfh_M24k, dfh_M24k

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        END
// 1010    dfh_M7k,
// 1011    dfh_M9k,
// 1012    dfh_M12k,
// 1013    dfh_M14k,
// 1014    dfh_M16k,
// 1015    dfh_M18k,
// 1016    dfh_M20k,
// 1017    dfh_M23k,
// 1018    dfh_M24k,
// 1019    dfh_M24k
// 1020 };
// 1021 
// 1022 #endif
// 
// 12 412 bytes in segment DATA_I
// 12 412 bytes in segment DATA_ID
//     12 bytes in segment INITTAB
// 
//      0 bytes of CODE  memory (+ 12 bytes shared)
// 12 412 bytes of CONST memory
// 12 412 bytes of DATA  memory
//
//Errors: none
//Warnings: 1
