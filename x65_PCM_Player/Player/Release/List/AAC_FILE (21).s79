//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   14/Feb/2012  15:39:22 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\AAC\AACD /
//                       EC\AAC_FILE (21).c                                  /
//    Command line    =  "D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\AAC\AAC /
//                       DEC\AAC_FILE (21).c" -D NDEBUG -lC                  /
//                       D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\Release\ /
//                       List\ -lA D:\SVN\SieELF\SieELF\x65_PCM_Player\Playe /
//                       r\Release\List\ -o D:\SVN\SieELF\SieELF\x65_PCM_Pla /
//                       yer\Player\Release\Obj\ -s9 --cpu_mode arm          /
//                       --endian little --cpu ARM926EJ-S --stack_align 4    /
//                       --interwork -e --fpu None --dlib_config             /
//                       "D:\Program Files\IAR\Embedded Workbench 4.0        /
//                       Evaluation\ARM\LIB\dl5tpainl8n.h" --preinclude      /
//                       swilib.h -I "D:\Program Files\IAR\Embedded          /
//                       Workbench 4.0 Evaluation\ARM\INC\"                  /
//                       --inline_threshold=16                               /
//    List file       =  D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\Release\ /
//                       List\AAC_FILE (21).s79                              /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME `AAC_FILE (21)`

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        PUBLIC raac_huffTabScaleFact
        PUBLIC raac_huffTabScaleFactInfo
        PUBLIC raac_huffTabSpec
        PUBLIC raac_huffTabSpecInfo
// D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\AAC\AACDEC\AAC_FILE (21).c
//    1 /* ***** BEGIN LICENSE BLOCK *****  
//    2  * Source last modified: $Id: hufftabs.c,v 1.1 2005/02/26 01:47:34 jrecker Exp $ 
//    3  *   
//    4  * Portions Copyright (c) 1995-2005 RealNetworks, Inc. All Rights Reserved.  
//    5  *       
//    6  * The contents of this file, and the files included with this file, 
//    7  * are subject to the current version of the RealNetworks Public 
//    8  * Source License (the "RPSL") available at 
//    9  * http://www.helixcommunity.org/content/rpsl unless you have licensed 
//   10  * the file under the current version of the RealNetworks Community 
//   11  * Source License (the "RCSL") available at 
//   12  * http://www.helixcommunity.org/content/rcsl, in which case the RCSL 
//   13  * will apply. You may also obtain the license terms directly from 
//   14  * RealNetworks.  You may not use this file except in compliance with 
//   15  * the RPSL or, if you have a valid RCSL with RealNetworks applicable 
//   16  * to this file, the RCSL.  Please see the applicable RPSL or RCSL for 
//   17  * the rights, obligations and limitations governing use of the 
//   18  * contents of the file. 
//   19  *   
//   20  * This file is part of the Helix DNA Technology. RealNetworks is the 
//   21  * developer of the Original Code and owns the copyrights in the 
//   22  * portions it created. 
//   23  *   
//   24  * This file, and the files included with this file, is distributed 
//   25  * and made available on an 'AS IS' basis, WITHOUT WARRANTY OF ANY 
//   26  * KIND, EITHER EXPRESS OR IMPLIED, AND REALNETWORKS HEREBY DISCLAIMS 
//   27  * ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES 
//   28  * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET 
//   29  * ENJOYMENT OR NON-INFRINGEMENT. 
//   30  *  
//   31  * Technology Compatibility Kit Test Suite(s) Location:  
//   32  *    http://www.helixcommunity.org/content/tck  
//   33  *  
//   34  * Contributor(s):  
//   35  *   
//   36  * ***** END LICENSE BLOCK ***** */  
//   37 
//   38 /**************************************************************************************
//   39  * Fixed-point HE-AAC decoder
//   40  * Jon Recker (jrecker@real.com)
//   41  * February 2005
//   42  *
//   43  * hufftabs.c - Huffman symbol tables
//   44  **************************************************************************************/
//   45 
//   46 #include "coder_aac.h"
//   47 

        RSEG DATA_C:CONST:SORT:NOROOT(2)
//   48 const HuffInfo huffTabSpecInfo[11] = {
raac_huffTabSpecInfo:
        DATA
        DC32 11
        DC8 1, 0, 0, 0, 8, 0, 24, 0, 24, 8, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 9
        DC8 0, 0, 1, 1, 7, 24, 15, 19, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 81, 16
        DC8 1, 0, 0, 4, 2, 6, 3, 5, 15, 15, 8, 9, 3, 3, 5, 2, 0, 0, 0, 0
        DC32 162, 12
        DC8 0, 0, 0, 10, 6, 0, 9, 21, 8, 14, 11, 2, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 243, 13
        DC8 1, 0, 0, 4, 4, 0, 4, 12, 12, 12, 18, 10, 4, 0, 0, 0, 0, 0, 0, 0
        DC32 324, 11
        DC8 0, 0, 0, 9, 0, 16, 13, 8, 23, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 405, 12
        DC8 1, 0, 2, 1, 0, 4, 5, 10, 14, 15, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 486, 10
        DC8 0, 0, 1, 5, 7, 10, 14, 15, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 550, 15
        DC8 1, 0, 2, 1, 0, 4, 3, 8, 11, 20, 31, 38, 32, 14, 4, 0, 0, 0, 0, 0
        DC32 614, 12
        DC8 0, 0, 0, 3, 8, 14, 17, 25, 31, 41, 22, 8, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 783, 12
        DC8 0, 0, 0, 2, 6, 7, 16, 59, 55, 95, 43, 6, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 952
//   49 	/* table 0 not used */
//   50 	{11, {  1,  0,  0,  0,  8,  0, 24,  0, 24,  8, 16,  0,  0,  0,  0,  0,  0,  0,  0,  0},   0},
//   51 	{ 9, {  0,  0,  1,  1,  7, 24, 15, 19, 14,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},  81},
//   52 	{16, {  1,  0,  0,  4,  2,  6,  3,  5, 15, 15,  8,  9,  3,  3,  5,  2,  0,  0,  0,  0}, 162},
//   53 	{12, {  0,  0,  0, 10,  6,  0,  9, 21,  8, 14, 11,  2,  0,  0,  0,  0,  0,  0,  0,  0}, 243},
//   54 	{13, {  1,  0,  0,  4,  4,  0,  4, 12, 12, 12, 18, 10,  4,  0,  0,  0,  0,  0,  0,  0}, 324},
//   55 	{11, {  0,  0,  0,  9,  0, 16, 13,  8, 23,  8,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0}, 405},
//   56 	{12, {  1,  0,  2,  1,  0,  4,  5, 10, 14, 15,  8,  4,  0,  0,  0,  0,  0,  0,  0,  0}, 486},
//   57 	{10, {  0,  0,  1,  5,  7, 10, 14, 15,  8,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}, 550},
//   58 	{15, {  1,  0,  2,  1,  0,  4,  3,  8, 11, 20, 31, 38, 32, 14,  4,  0,  0,  0,  0,  0}, 614},
//   59 	{12, {  0,  0,  0,  3,  8, 14, 17, 25, 31, 41, 22,  8,  0,  0,  0,  0,  0,  0,  0,  0}, 783},
//   60 	{12, {  0,  0,  0,  2,  6,  7, 16, 59, 55, 95, 43,  6,  0,  0,  0,  0,  0,  0,  0,  0}, 952},
//   61 };
//   62 

        RSEG DATA_C:CONST:SORT:NOROOT(2)
//   63 const signed short huffTabSpec[1241] = {
raac_huffTabSpec:
        DATA
        DC16 0, 512, 3584, 7, 64, 1, 56, 8, 448, 960, 3648, 57, 120, 456, 15
        DC16 576, 63, 4032, 504, 568, 71, 3592, 9, 520, 449, 72, 65, 3640, 513
        DC16 3591, 519, 3585, 455, 632, 3704, 968, 79, 121, 457, 463, 1016, 569
        DC16 127, 3656, 3599, 4040, 505, 961, 967, 3655, 4088, 511, 73, 527
        DC16 577, 3649, 584, 4033, 3647, 583, 575, 3641, 4039, 3593, 521, 975
        DC16 3705, 3663, 1017, 585, 4041, 639, 4047, 4095, 633, 969, 3657, 3711
        DC16 4089, 1023, 591, 0, 512, 3584, 1, 56, 7, 448, 8, 64, 456, 3648
        DC16 120, 15, 71, 57, 3591, 960, 568, 4032, 63, 520, 513, 449, 3592, 65
        DC16 504, 3585, 455, 3640, 576, 72, 9, 519, 121, 569, 3704, 463, 968
        DC16 583, 521, 3656, 505, 584, 3599, 4088, 3641, 1016, 632, 961, 3655
        DC16 4040, 3593, 4033, 4039, 511, 527, 575, 127, 73, 3649, 3647, 79
        DC16 967, 457, 577, 975, 3705, 1017, 4095, 3663, 3657, 585, 4047, 969
        DC16 3711, 4041, 639, 1023, 4089, 633, 591, 0, 4608, 4097, 4160, 4104
        DC16 8768, 8201, 8264, 8257, 8712, 12361, 8705, 12872, 16969, 12809
        DC16 12865, 5120, 4098, 8202, 9280, 12936, 8209, 12369, 8832, 12362
        DC16 13384, 4112, 8328, 8272, 4224, 8258, 9224, 17033, 12425, 12880
        DC16 16977, 12929, 8720, 12817, 8321, 17481, 16970, 13377, 12810, 8210
        DC16 12370, 13448, 12944, 8706, 9217, 12433, 9344, 17041, 12866, 13321
        DC16 16978, 17545, 8336, 12426, 12818, 13441, 13392, 13456, 12434
        DC16 17553, 17489, 17034, 17042, 8322, 9232, 12930, 13329, 17482, 13378
        DC16 17554, 17546, 17490, 13322, 9218, 13442, 13330, 16969, 12361
        DC16 12865, 12872, 12809, 4608, 8768, 0, 8201, 8712, 8705, 8264, 4097
        DC16 8257, 4104, 4160, 17481, 16977, 17033, 16970, 13384, 13377, 12936
        DC16 13321, 12369, 12362, 12880, 12425, 12810, 12929, 12866, 12817
        DC16 9280, 9224, 8832, 9217, 8258, 8328, 8202, 8272, 8321, 8706, 8209
        DC16 8720, 5120, 4098, 4224, 4112, 17041, 17545, 17489, 16978, 17034
        DC16 17482, 12944, 13448, 13392, 12433, 12370, 13441, 12426, 13329
        DC16 12818, 17553, 12930, 13322, 13378, 17042, 17490, 17546, 8336, 9344
        DC16 8210, 9232, 8322, 9218, 17554, 12434, 13456, 13442, 13330, 0, 992
        DC16 32, 1, 31, 63, 993, 1023, 33, 960, 2, 64, 30, 991, 65, 1022, 34
        DC16 961, 95, 994, 62, 928, 96, 29, 3, 959, 35, 97, 1021, 929, 127, 61
        DC16 995, 962, 66, 990, 94, 958, 126, 963, 93, 98, 67, 930, 989, 28
        DC16 896, 129, 128, 927, 4, 159, 1020, 36, 996, 897, 60, 125, 957, 931
        DC16 964, 926, 130, 92, 68, 99, 898, 988, 158, 124, 925, 899, 100, 932
        DC16 131, 157, 956, 156, 900, 132, 924, 0, 32, 31, 1, 992, 33, 993, 63
        DC16 1023, 95, 65, 961, 991, 960, 994, 64, 62, 34, 30, 1022, 2, 94, 962
        DC16 990, 66, 929, 97, 127, 995, 959, 35, 61, 1021, 96, 928, 29, 3, 98
        DC16 958, 963, 67, 126, 93, 989, 930, 99, 125, 957, 931, 60, 1020, 129
        DC16 897, 927, 36, 159, 996, 28, 898, 926, 68, 988, 896, 130, 158, 964
        DC16 128, 92, 4, 956, 932, 124, 157, 100, 131, 899, 925, 132, 900, 924
        DC16 156, 0, 1056, 1025, 2081, 2113, 2082, 1088, 1026, 2145, 2083, 2114
        DC16 1120, 1027, 2115, 2146, 2084, 2177, 2085, 2209, 2147, 2116, 1028
        DC16 1152, 2178, 2117, 2210, 1029, 2241, 1184, 2086, 2179, 2149, 2148
        DC16 2211, 2118, 2242, 2087, 2150, 1030, 1216, 2180, 2273, 2181, 2274
        DC16 2212, 2243, 2119, 2275, 2244, 2213, 2182, 2151, 1248, 1031, 2245
        DC16 2214, 2276, 2183, 2215, 2277, 2278, 2246, 2247, 2279, 2081, 2113
        DC16 1056, 2082, 1025, 2114, 0, 1088, 1026, 2145, 2083, 2146, 2115
        DC16 2147, 2177, 2084, 2178, 2116, 1120, 1027, 2179, 2148, 2210, 2209
        DC16 2117, 2085, 2211, 2149, 2180, 2212, 1028, 2181, 1152, 2118, 2242
        DC16 2241, 2086, 2150, 2243, 2213, 1184, 2244, 1029, 2182, 2273, 2274
        DC16 2119, 2245, 2275, 2087, 2214, 2151, 2246, 2276, 1216, 2183, 1030
        DC16 2277, 2278, 2247, 2215, 1248, 1031, 2279, 0, 1056, 1025, 2081
        DC16 2113, 2082, 1088, 1026, 2145, 2114, 2083, 1120, 1027, 2115, 2146
        DC16 2084, 2177, 2116, 2085, 2178, 2147, 1028, 1152, 2209, 2117, 2086
        DC16 2148, 2210, 2241, 2179, 1029, 2118, 1184, 2087, 2149, 2088, 2305
        DC16 2180, 2211, 2242, 2273, 1030, 2306, 2120, 2150, 2119, 2181, 2337
        DC16 2089, 2274, 1216, 2212, 2243, 2307, 1031, 2338, 2152, 2182, 2151
        DC16 1032, 2369, 2244, 2121, 2213, 1280, 1248, 2275, 2370, 2339, 2308
        DC16 2090, 2276, 2245, 2214, 2184, 2183, 2153, 2401, 2216, 1312, 2309
        DC16 2371, 2122, 1033, 2402, 2340, 2246, 2433, 2185, 2310, 2091, 2341
        DC16 2372, 2215, 2277, 2123, 2092, 2434, 2403, 2154, 2217, 2247, 2311
        DC16 2404, 1034, 2278, 2435, 1344, 2373, 2186, 2248, 2124, 2342, 2343
        DC16 2187, 1376, 2249, 2155, 2218, 2312, 2280, 2437, 2156, 2405, 2279
        DC16 2436, 2406, 2374, 2188, 2281, 2219, 1035, 2438, 2250, 1408, 2375
        DC16 2220, 2282, 2344, 1036, 2407, 2313, 2345, 2376, 2283, 2439, 2251
        DC16 2315, 2408, 2284, 2252, 2314, 2377, 2316, 2346, 2347, 2348, 2379
        DC16 2441, 2378, 2409, 2440, 2410, 2442, 2443, 2380, 2411, 2412, 2444
        DC16 2081, 2082, 2113, 2114, 1056, 1025, 2083, 2146, 2145, 2115, 2147
        DC16 1088, 1026, 2116, 2178, 2084, 2177, 0, 2179, 2148, 1120, 1027
        DC16 2180, 2117, 2210, 2085, 2209, 2211, 2149, 2212, 2181, 2242, 2118
        DC16 2243, 1152, 2241, 1028, 2086, 2150, 2213, 2244, 2182, 2245, 2274
        DC16 2151, 2119, 2214, 2306, 2275, 1184, 2273, 1029, 2305, 2087, 2307
        DC16 2276, 2183, 2120, 2246, 2277, 2088, 2152, 2308, 2184, 2215, 2309
        DC16 2216, 2278, 2247, 2338, 1216, 2248, 2339, 2153, 2337, 2121, 1030
        DC16 2310, 2340, 2185, 2370, 2089, 2279, 2311, 2341, 2280, 2371, 2217
        DC16 2372, 2122, 2369, 2154, 2342, 2249, 1280, 2186, 1248, 2402, 2281
        DC16 2403, 2374, 2090, 2401, 2343, 1031, 2312, 2373, 2155, 2218, 2313
        DC16 2405, 1032, 2404, 2123, 2282, 2250, 2375, 2187, 2091, 2434, 2344
        DC16 2435, 2406, 2219, 2436, 2407, 2437, 2156, 2251, 1312, 2376, 1344
        DC16 2433, 1033, 2188, 2345, 2438, 2124, 2314, 2346, 2092, 2408, 2439
        DC16 2283, 2220, 2252, 2377, 2315, 2440, 1034, 2284, 1376, 2378, 2409
        DC16 2410, 1035, 2411, 2347, 2379, 1408, 2316, 2441, 2380, 2348, 2412
        DC16 2443, 1036, 2442, 2444, 0, 8257, 9232, 4160, 4097, 8321, 8258
        DC16 8322, 8259, 8385, 8386, 4224, 8323, 4098, 8387, 8449, 8260, 8450
        DC16 8324, 8451, 8388, 4288, 4099, 8513, 8514, 8325, 8452, 8261, 8515
        DC16 8389, 8516, 8453, 8578, 8326, 8577, 8579, 8390, 8262, 8464, 8400
        DC16 9221, 9219, 9220, 8580, 9222, 4352, 8454, 4100, 8336, 8517, 8528
        DC16 9223, 9218, 9224, 8327, 8642, 8391, 8581, 8518, 8592, 9226, 8643
        DC16 8641, 9225, 8656, 8272, 8263, 8455, 9227, 8644, 9228, 8720, 9217
        DC16 8582, 8784, 8328, 8519, 8848, 9229, 8707, 8706, 8392, 4416, 9230
        DC16 8912, 8645, 8456, 8583, 8646, 4101, 8708, 9231, 8976, 8264, 8705
        DC16 9104, 8520, 9040, 8393, 8709, 8647, 8329, 8710, 8770, 8771, 9168
        DC16 8457, 8584, 4480, 8772, 8521, 8711, 8648, 8265, 8835, 4102, 8834
        DC16 8769, 8773, 8458, 8330, 8774, 8394, 8585, 8836, 8712, 8837, 8775
        DC16 8899, 8266, 4544, 8838, 8649, 8395, 8522, 8833, 8459, 8898, 9026
        DC16 8586, 9027, 8331, 5120, 8523, 8901, 8900, 8776, 8650, 8713, 4112
        DC16 8461, 4103, 8397, 8902, 9025, 9028, 8963, 8333, 9029, 8714, 8587
        DC16 8840, 8839, 9090, 8964, 8267, 8460, 8897, 8396, 8269, 8962, 8651
        DC16 8398, 8524, 8525, 9092, 8462, 8903, 9091, 8965, 9030, 8966, 4608
        DC16 8904, 8332, 8777, 9093, 8589, 8842, 9154, 8715, 8778, 9094, 8841
        DC16 8526, 8905, 9089, 8334, 8588, 8268, 9032, 4104, 9031, 8652, 8967
        DC16 8653, 9155, 8961, 8590, 8335, 9157, 9156, 8270, 8779, 8463, 9095
        DC16 8717, 9033, 8716, 8527, 8399, 8843, 8906, 8968, 9158, 9159, 8718
        DC16 9153, 8654, 4672, 4105, 8781, 8780, 8969, 9096, 8845, 9097, 8970
        DC16 8591, 8655, 8782, 9160, 8907, 8910, 8271, 8844, 8846, 9035, 9034
        DC16 8909, 8908, 8719, 9099, 9036, 8973, 9161, 9098, 4736, 8971, 8783
        DC16 4106, 8972, 4800, 8974, 8847, 9037, 4109, 9100, 9162, 9163, 8911
        DC16 9101, 4928, 4107, 9038, 9164, 9165, 8975, 4992, 9102, 9039, 4864
        DC16 9103, 4110, 4108, 9166, 5056, 4111, 9167
        DC8 0, 0
//   64 	/* spectrum table 1 [81] (signed) */
//   65 	0x0000, 0x0200, 0x0e00, 0x0007, 0x0040, 0x0001, 0x0038, 0x0008, 0x01c0, 0x03c0, 0x0e40, 0x0039, 0x0078, 0x01c8, 0x000f, 0x0240, 
//   66 	0x003f, 0x0fc0, 0x01f8, 0x0238, 0x0047, 0x0e08, 0x0009, 0x0208, 0x01c1, 0x0048, 0x0041, 0x0e38, 0x0201, 0x0e07, 0x0207, 0x0e01, 
//   67 	0x01c7, 0x0278, 0x0e78, 0x03c8, 0x004f, 0x0079, 0x01c9, 0x01cf, 0x03f8, 0x0239, 0x007f, 0x0e48, 0x0e0f, 0x0fc8, 0x01f9, 0x03c1, 
//   68 	0x03c7, 0x0e47, 0x0ff8, 0x01ff, 0x0049, 0x020f, 0x0241, 0x0e41, 0x0248, 0x0fc1, 0x0e3f, 0x0247, 0x023f, 0x0e39, 0x0fc7, 0x0e09, 
//   69 	0x0209, 0x03cf, 0x0e79, 0x0e4f, 0x03f9, 0x0249, 0x0fc9, 0x027f, 0x0fcf, 0x0fff, 0x0279, 0x03c9, 0x0e49, 0x0e7f, 0x0ff9, 0x03ff, 
//   70 	0x024f, 
//   71 	/* spectrum table 2 [81] (signed) */
//   72 	0x0000, 0x0200, 0x0e00, 0x0001, 0x0038, 0x0007, 0x01c0, 0x0008, 0x0040, 0x01c8, 0x0e40, 0x0078, 0x000f, 0x0047, 0x0039, 0x0e07, 
//   73 	0x03c0, 0x0238, 0x0fc0, 0x003f, 0x0208, 0x0201, 0x01c1, 0x0e08, 0x0041, 0x01f8, 0x0e01, 0x01c7, 0x0e38, 0x0240, 0x0048, 0x0009, 
//   74 	0x0207, 0x0079, 0x0239, 0x0e78, 0x01cf, 0x03c8, 0x0247, 0x0209, 0x0e48, 0x01f9, 0x0248, 0x0e0f, 0x0ff8, 0x0e39, 0x03f8, 0x0278, 
//   75 	0x03c1, 0x0e47, 0x0fc8, 0x0e09, 0x0fc1, 0x0fc7, 0x01ff, 0x020f, 0x023f, 0x007f, 0x0049, 0x0e41, 0x0e3f, 0x004f, 0x03c7, 0x01c9, 
//   76 	0x0241, 0x03cf, 0x0e79, 0x03f9, 0x0fff, 0x0e4f, 0x0e49, 0x0249, 0x0fcf, 0x03c9, 0x0e7f, 0x0fc9, 0x027f, 0x03ff, 0x0ff9, 0x0279, 
//   77 	0x024f, 
//   78 	/* spectrum table 3 [81] (unsigned) */
//   79 	0x0000, 0x1200, 0x1001, 0x1040, 0x1008, 0x2240, 0x2009, 0x2048, 0x2041, 0x2208, 0x3049, 0x2201, 0x3248, 0x4249, 0x3209, 0x3241, 
//   80 	0x1400, 0x1002, 0x200a, 0x2440, 0x3288, 0x2011, 0x3051, 0x2280, 0x304a, 0x3448, 0x1010, 0x2088, 0x2050, 0x1080, 0x2042, 0x2408, 
//   81 	0x4289, 0x3089, 0x3250, 0x4251, 0x3281, 0x2210, 0x3211, 0x2081, 0x4449, 0x424a, 0x3441, 0x320a, 0x2012, 0x3052, 0x3488, 0x3290, 
//   82 	0x2202, 0x2401, 0x3091, 0x2480, 0x4291, 0x3242, 0x3409, 0x4252, 0x4489, 0x2090, 0x308a, 0x3212, 0x3481, 0x3450, 0x3490, 0x3092, 
//   83 	0x4491, 0x4451, 0x428a, 0x4292, 0x2082, 0x2410, 0x3282, 0x3411, 0x444a, 0x3442, 0x4492, 0x448a, 0x4452, 0x340a, 0x2402, 0x3482, 
//   84 	0x3412, 
//   85 	/* spectrum table 4 [81] (unsigned) */
//   86 	0x4249, 0x3049, 0x3241, 0x3248, 0x3209, 0x1200, 0x2240, 0x0000, 0x2009, 0x2208, 0x2201, 0x2048, 0x1001, 0x2041, 0x1008, 0x1040, 
//   87 	0x4449, 0x4251, 0x4289, 0x424a, 0x3448, 0x3441, 0x3288, 0x3409, 0x3051, 0x304a, 0x3250, 0x3089, 0x320a, 0x3281, 0x3242, 0x3211, 
//   88 	0x2440, 0x2408, 0x2280, 0x2401, 0x2042, 0x2088, 0x200a, 0x2050, 0x2081, 0x2202, 0x2011, 0x2210, 0x1400, 0x1002, 0x1080, 0x1010, 
//   89 	0x4291, 0x4489, 0x4451, 0x4252, 0x428a, 0x444a, 0x3290, 0x3488, 0x3450, 0x3091, 0x3052, 0x3481, 0x308a, 0x3411, 0x3212, 0x4491, 
//   90 	0x3282, 0x340a, 0x3442, 0x4292, 0x4452, 0x448a, 0x2090, 0x2480, 0x2012, 0x2410, 0x2082, 0x2402, 0x4492, 0x3092, 0x3490, 0x3482, 
//   91 	0x3412, 
//   92 	/* spectrum table 5 [81] (signed) */
//   93 	0x0000, 0x03e0, 0x0020, 0x0001, 0x001f, 0x003f, 0x03e1, 0x03ff, 0x0021, 0x03c0, 0x0002, 0x0040, 0x001e, 0x03df, 0x0041, 0x03fe, 
//   94 	0x0022, 0x03c1, 0x005f, 0x03e2, 0x003e, 0x03a0, 0x0060, 0x001d, 0x0003, 0x03bf, 0x0023, 0x0061, 0x03fd, 0x03a1, 0x007f, 0x003d, 
//   95 	0x03e3, 0x03c2, 0x0042, 0x03de, 0x005e, 0x03be, 0x007e, 0x03c3, 0x005d, 0x0062, 0x0043, 0x03a2, 0x03dd, 0x001c, 0x0380, 0x0081, 
//   96 	0x0080, 0x039f, 0x0004, 0x009f, 0x03fc, 0x0024, 0x03e4, 0x0381, 0x003c, 0x007d, 0x03bd, 0x03a3, 0x03c4, 0x039e, 0x0082, 0x005c, 
//   97 	0x0044, 0x0063, 0x0382, 0x03dc, 0x009e, 0x007c, 0x039d, 0x0383, 0x0064, 0x03a4, 0x0083, 0x009d, 0x03bc, 0x009c, 0x0384, 0x0084, 
//   98 	0x039c, 
//   99 	/* spectrum table 6 [81] (signed) */
//  100 	0x0000, 0x0020, 0x001f, 0x0001, 0x03e0, 0x0021, 0x03e1, 0x003f, 0x03ff, 0x005f, 0x0041, 0x03c1, 0x03df, 0x03c0, 0x03e2, 0x0040, 
//  101 	0x003e, 0x0022, 0x001e, 0x03fe, 0x0002, 0x005e, 0x03c2, 0x03de, 0x0042, 0x03a1, 0x0061, 0x007f, 0x03e3, 0x03bf, 0x0023, 0x003d, 
//  102 	0x03fd, 0x0060, 0x03a0, 0x001d, 0x0003, 0x0062, 0x03be, 0x03c3, 0x0043, 0x007e, 0x005d, 0x03dd, 0x03a2, 0x0063, 0x007d, 0x03bd, 
//  103 	0x03a3, 0x003c, 0x03fc, 0x0081, 0x0381, 0x039f, 0x0024, 0x009f, 0x03e4, 0x001c, 0x0382, 0x039e, 0x0044, 0x03dc, 0x0380, 0x0082, 
//  104 	0x009e, 0x03c4, 0x0080, 0x005c, 0x0004, 0x03bc, 0x03a4, 0x007c, 0x009d, 0x0064, 0x0083, 0x0383, 0x039d, 0x0084, 0x0384, 0x039c, 
//  105 	0x009c, 
//  106 	/* spectrum table 7 [64] (unsigned) */
//  107 	0x0000, 0x0420, 0x0401, 0x0821, 0x0841, 0x0822, 0x0440, 0x0402, 0x0861, 0x0823, 0x0842, 0x0460, 0x0403, 0x0843, 0x0862, 0x0824, 
//  108 	0x0881, 0x0825, 0x08a1, 0x0863, 0x0844, 0x0404, 0x0480, 0x0882, 0x0845, 0x08a2, 0x0405, 0x08c1, 0x04a0, 0x0826, 0x0883, 0x0865, 
//  109 	0x0864, 0x08a3, 0x0846, 0x08c2, 0x0827, 0x0866, 0x0406, 0x04c0, 0x0884, 0x08e1, 0x0885, 0x08e2, 0x08a4, 0x08c3, 0x0847, 0x08e3, 
//  110 	0x08c4, 0x08a5, 0x0886, 0x0867, 0x04e0, 0x0407, 0x08c5, 0x08a6, 0x08e4, 0x0887, 0x08a7, 0x08e5, 0x08e6, 0x08c6, 0x08c7, 0x08e7, 
//  111 	/* spectrum table 8 [64] (unsigned) */
//  112 	0x0821, 0x0841, 0x0420, 0x0822, 0x0401, 0x0842, 0x0000, 0x0440, 0x0402, 0x0861, 0x0823, 0x0862, 0x0843, 0x0863, 0x0881, 0x0824, 
//  113 	0x0882, 0x0844, 0x0460, 0x0403, 0x0883, 0x0864, 0x08a2, 0x08a1, 0x0845, 0x0825, 0x08a3, 0x0865, 0x0884, 0x08a4, 0x0404, 0x0885, 
//  114 	0x0480, 0x0846, 0x08c2, 0x08c1, 0x0826, 0x0866, 0x08c3, 0x08a5, 0x04a0, 0x08c4, 0x0405, 0x0886, 0x08e1, 0x08e2, 0x0847, 0x08c5, 
//  115 	0x08e3, 0x0827, 0x08a6, 0x0867, 0x08c6, 0x08e4, 0x04c0, 0x0887, 0x0406, 0x08e5, 0x08e6, 0x08c7, 0x08a7, 0x04e0, 0x0407, 0x08e7, 	
//  116 	/* spectrum table 9 [169] (unsigned) */
//  117 	0x0000, 0x0420, 0x0401, 0x0821, 0x0841, 0x0822, 0x0440, 0x0402, 0x0861, 0x0842, 0x0823, 0x0460, 0x0403, 0x0843, 0x0862, 0x0824, 
//  118 	0x0881, 0x0844, 0x0825, 0x0882, 0x0863, 0x0404, 0x0480, 0x08a1, 0x0845, 0x0826, 0x0864, 0x08a2, 0x08c1, 0x0883, 0x0405, 0x0846, 
//  119 	0x04a0, 0x0827, 0x0865, 0x0828, 0x0901, 0x0884, 0x08a3, 0x08c2, 0x08e1, 0x0406, 0x0902, 0x0848, 0x0866, 0x0847, 0x0885, 0x0921, 
//  120 	0x0829, 0x08e2, 0x04c0, 0x08a4, 0x08c3, 0x0903, 0x0407, 0x0922, 0x0868, 0x0886, 0x0867, 0x0408, 0x0941, 0x08c4, 0x0849, 0x08a5, 
//  121 	0x0500, 0x04e0, 0x08e3, 0x0942, 0x0923, 0x0904, 0x082a, 0x08e4, 0x08c5, 0x08a6, 0x0888, 0x0887, 0x0869, 0x0961, 0x08a8, 0x0520, 
//  122 	0x0905, 0x0943, 0x084a, 0x0409, 0x0962, 0x0924, 0x08c6, 0x0981, 0x0889, 0x0906, 0x082b, 0x0925, 0x0944, 0x08a7, 0x08e5, 0x084b, 
//  123 	0x082c, 0x0982, 0x0963, 0x086a, 0x08a9, 0x08c7, 0x0907, 0x0964, 0x040a, 0x08e6, 0x0983, 0x0540, 0x0945, 0x088a, 0x08c8, 0x084c, 
//  124 	0x0926, 0x0927, 0x088b, 0x0560, 0x08c9, 0x086b, 0x08aa, 0x0908, 0x08e8, 0x0985, 0x086c, 0x0965, 0x08e7, 0x0984, 0x0966, 0x0946, 
//  125 	0x088c, 0x08e9, 0x08ab, 0x040b, 0x0986, 0x08ca, 0x0580, 0x0947, 0x08ac, 0x08ea, 0x0928, 0x040c, 0x0967, 0x0909, 0x0929, 0x0948, 
//  126 	0x08eb, 0x0987, 0x08cb, 0x090b, 0x0968, 0x08ec, 0x08cc, 0x090a, 0x0949, 0x090c, 0x092a, 0x092b, 0x092c, 0x094b, 0x0989, 0x094a, 
//  127 	0x0969, 0x0988, 0x096a, 0x098a, 0x098b, 0x094c, 0x096b, 0x096c, 0x098c, 
//  128 	/* spectrum table 10 [169] (unsigned) */
//  129 	0x0821, 0x0822, 0x0841, 0x0842, 0x0420, 0x0401, 0x0823, 0x0862, 0x0861, 0x0843, 0x0863, 0x0440, 0x0402, 0x0844, 0x0882, 0x0824, 
//  130 	0x0881, 0x0000, 0x0883, 0x0864, 0x0460, 0x0403, 0x0884, 0x0845, 0x08a2, 0x0825, 0x08a1, 0x08a3, 0x0865, 0x08a4, 0x0885, 0x08c2, 
//  131 	0x0846, 0x08c3, 0x0480, 0x08c1, 0x0404, 0x0826, 0x0866, 0x08a5, 0x08c4, 0x0886, 0x08c5, 0x08e2, 0x0867, 0x0847, 0x08a6, 0x0902, 
//  132 	0x08e3, 0x04a0, 0x08e1, 0x0405, 0x0901, 0x0827, 0x0903, 0x08e4, 0x0887, 0x0848, 0x08c6, 0x08e5, 0x0828, 0x0868, 0x0904, 0x0888, 
//  133 	0x08a7, 0x0905, 0x08a8, 0x08e6, 0x08c7, 0x0922, 0x04c0, 0x08c8, 0x0923, 0x0869, 0x0921, 0x0849, 0x0406, 0x0906, 0x0924, 0x0889, 
//  134 	0x0942, 0x0829, 0x08e7, 0x0907, 0x0925, 0x08e8, 0x0943, 0x08a9, 0x0944, 0x084a, 0x0941, 0x086a, 0x0926, 0x08c9, 0x0500, 0x088a, 
//  135 	0x04e0, 0x0962, 0x08e9, 0x0963, 0x0946, 0x082a, 0x0961, 0x0927, 0x0407, 0x0908, 0x0945, 0x086b, 0x08aa, 0x0909, 0x0965, 0x0408, 
//  136 	0x0964, 0x084b, 0x08ea, 0x08ca, 0x0947, 0x088b, 0x082b, 0x0982, 0x0928, 0x0983, 0x0966, 0x08ab, 0x0984, 0x0967, 0x0985, 0x086c, 
//  137 	0x08cb, 0x0520, 0x0948, 0x0540, 0x0981, 0x0409, 0x088c, 0x0929, 0x0986, 0x084c, 0x090a, 0x092a, 0x082c, 0x0968, 0x0987, 0x08eb, 
//  138 	0x08ac, 0x08cc, 0x0949, 0x090b, 0x0988, 0x040a, 0x08ec, 0x0560, 0x094a, 0x0969, 0x096a, 0x040b, 0x096b, 0x092b, 0x094b, 0x0580, 
//  139 	0x090c, 0x0989, 0x094c, 0x092c, 0x096c, 0x098b, 0x040c, 0x098a, 0x098c, 
//  140 	/* spectrum table 11 [289] (unsigned) */
//  141 	0x0000, 0x2041, 0x2410, 0x1040, 0x1001, 0x2081, 0x2042, 0x2082, 0x2043, 0x20c1, 0x20c2, 0x1080, 0x2083, 0x1002, 0x20c3, 0x2101, 
//  142 	0x2044, 0x2102, 0x2084, 0x2103, 0x20c4, 0x10c0, 0x1003, 0x2141, 0x2142, 0x2085, 0x2104, 0x2045, 0x2143, 0x20c5, 0x2144, 0x2105, 
//  143 	0x2182, 0x2086, 0x2181, 0x2183, 0x20c6, 0x2046, 0x2110, 0x20d0, 0x2405, 0x2403, 0x2404, 0x2184, 0x2406, 0x1100, 0x2106, 0x1004, 
//  144 	0x2090, 0x2145, 0x2150, 0x2407, 0x2402, 0x2408, 0x2087, 0x21c2, 0x20c7, 0x2185, 0x2146, 0x2190, 0x240a, 0x21c3, 0x21c1, 0x2409, 
//  145 	0x21d0, 0x2050, 0x2047, 0x2107, 0x240b, 0x21c4, 0x240c, 0x2210, 0x2401, 0x2186, 0x2250, 0x2088, 0x2147, 0x2290, 0x240d, 0x2203, 
//  146 	0x2202, 0x20c8, 0x1140, 0x240e, 0x22d0, 0x21c5, 0x2108, 0x2187, 0x21c6, 0x1005, 0x2204, 0x240f, 0x2310, 0x2048, 0x2201, 0x2390, 
//  147 	0x2148, 0x2350, 0x20c9, 0x2205, 0x21c7, 0x2089, 0x2206, 0x2242, 0x2243, 0x23d0, 0x2109, 0x2188, 0x1180, 0x2244, 0x2149, 0x2207, 
//  148 	0x21c8, 0x2049, 0x2283, 0x1006, 0x2282, 0x2241, 0x2245, 0x210a, 0x208a, 0x2246, 0x20ca, 0x2189, 0x2284, 0x2208, 0x2285, 0x2247, 
//  149 	0x22c3, 0x204a, 0x11c0, 0x2286, 0x21c9, 0x20cb, 0x214a, 0x2281, 0x210b, 0x22c2, 0x2342, 0x218a, 0x2343, 0x208b, 0x1400, 0x214b, 
//  150 	0x22c5, 0x22c4, 0x2248, 0x21ca, 0x2209, 0x1010, 0x210d, 0x1007, 0x20cd, 0x22c6, 0x2341, 0x2344, 0x2303, 0x208d, 0x2345, 0x220a, 
//  151 	0x218b, 0x2288, 0x2287, 0x2382, 0x2304, 0x204b, 0x210c, 0x22c1, 0x20cc, 0x204d, 0x2302, 0x21cb, 0x20ce, 0x214c, 0x214d, 0x2384, 
//  152 	0x210e, 0x22c7, 0x2383, 0x2305, 0x2346, 0x2306, 0x1200, 0x22c8, 0x208c, 0x2249, 0x2385, 0x218d, 0x228a, 0x23c2, 0x220b, 0x224a, 
//  153 	0x2386, 0x2289, 0x214e, 0x22c9, 0x2381, 0x208e, 0x218c, 0x204c, 0x2348, 0x1008, 0x2347, 0x21cc, 0x2307, 0x21cd, 0x23c3, 0x2301, 
//  154 	0x218e, 0x208f, 0x23c5, 0x23c4, 0x204e, 0x224b, 0x210f, 0x2387, 0x220d, 0x2349, 0x220c, 0x214f, 0x20cf, 0x228b, 0x22ca, 0x2308, 
//  155 	0x23c6, 0x23c7, 0x220e, 0x23c1, 0x21ce, 0x1240, 0x1009, 0x224d, 0x224c, 0x2309, 0x2388, 0x228d, 0x2389, 0x230a, 0x218f, 0x21cf, 
//  156 	0x224e, 0x23c8, 0x22cb, 0x22ce, 0x204f, 0x228c, 0x228e, 0x234b, 0x234a, 0x22cd, 0x22cc, 0x220f, 0x238b, 0x234c, 0x230d, 0x23c9, 
//  157 	0x238a, 0x1280, 0x230b, 0x224f, 0x100a, 0x230c, 0x12c0, 0x230e, 0x228f, 0x234d, 0x100d, 0x238c, 0x23ca, 0x23cb, 0x22cf, 0x238d, 
//  158 	0x1340, 0x100b, 0x234e, 0x23cc, 0x23cd, 0x230f, 0x1380, 0x238e, 0x234f, 0x1300, 0x238f, 0x100e, 0x100c, 0x23ce, 0x13c0, 0x100f, 
//  159 	0x23cf, 
//  160 };
//  161 

        RSEG DATA_C:CONST:SORT:NOROOT(2)
//  162 const HuffInfo huffTabScaleFactInfo = 
raac_huffTabScaleFactInfo:
        DATA
        DC32 19
        DC8 1, 0, 1, 3, 2, 4, 3, 5, 4, 6, 6, 6, 5, 8, 4, 7, 3, 7, 46, 0
        DC32 0
//  163 	{19, { 1,  0,  1,  3,  2,  4,  3,  5,  4,  6,  6,  6,  5,  8,  4,  7,  3,  7, 46,  0},   0};
//  164 
//  165 /* note - includes offset of -60 (4.6.2.3 in spec) */

        RSEG DATA_C:CONST:SORT:NOROOT(2)
//  166 const signed short huffTabScaleFact[121] = {
raac_huffTabScaleFact:
        DATA
        DC16 0, -1, 1, -2, 2, -3, 3, -4, 4, -5, 5, 6, -6, 7, -7, 8, -8, 9, -9
        DC16 10, -10, -11, 11, 12, -12, 13, -13, 14, -14, 16, 15, 17, 18, -15
        DC16 -17, -16, 19, -18, -19, 20, -20, 21, -21, 22, -22, 23, -23, -25
        DC16 25, -27, -24, -26, 24, -28, 27, 29, -30, -29, 26, -31, -34, -33
        DC16 -32, -36, 28, -35, -38, -37, 30, -39, -41, -57, -59, -58, -60, 38
        DC16 39, 40, 41, 42, 57, 37, 31, 32, 33, 34, 35, 36, 44, 51, 52, 53, 54
        DC16 55, 56, 50, 45, 46, 47, 48, 49, 58, -54, -52, -51, -50, -55, 43
        DC16 60, 59, -56, -53, -45, -44, -42, -40, -43, -49, -48, -46, -47
        DC8 0, 0

        END
//  167 		/* scale factor table [121] */
//  168 	   0,   -1,    1,   -2,    2,   -3,    3,   -4,    4,   -5,    5,    6,   -6,    7,   -7,    8,
//  169 	  -8,    9,   -9,   10,  -10,  -11,   11,   12,  -12,   13,  -13,   14,  -14,   16,   15,   17,
//  170 	  18,  -15,  -17,  -16,   19,  -18,  -19,   20,  -20,   21,  -21,   22,  -22,   23,  -23,  -25,
//  171 	  25,  -27,  -24,  -26,   24,  -28,   27,   29,  -30,  -29,   26,  -31,  -34,  -33,  -32,  -36,
//  172 	  28,  -35,  -38,  -37,   30,  -39,  -41,  -57,  -59,  -58,  -60,   38,   39,   40,   41,   42,
//  173 	  57,   37,   31,   32,   33,   34,   35,   36,   44,   51,   52,   53,   54,   55,   56,   50,
//  174 	  45,   46,   47,   48,   49,   58,  -54,  -52,  -51,  -50,  -55,   43,   60,   59,  -56,  -53,
//  175 	 -45,  -44,  -42,  -40,  -43,  -49,  -48,  -46,  -47,
//  176 };
//  177 
// 
// 3 064 bytes in segment DATA_C
// 
// 3 064 bytes of CONST memory
//
//Errors: none
//Warnings: none
