//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   14/Feb/2012  15:39:31 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\MOD\Juda /
//                       s\JUDASTBL.C                                        /
//    Command line    =  D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\MOD\Juda /
//                       s\JUDASTBL.C -D NDEBUG -lC                          /
//                       D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\Release\ /
//                       List\ -lA D:\SVN\SieELF\SieELF\x65_PCM_Player\Playe /
//                       r\Release\List\ -o D:\SVN\SieELF\SieELF\x65_PCM_Pla /
//                       yer\Player\Release\Obj\ -s9 --cpu_mode arm          /
//                       --endian little --cpu ARM926EJ-S --stack_align 4    /
//                       --interwork -e --fpu None --dlib_config             /
//                       "D:\Program Files\IAR\Embedded Workbench 4.0        /
//                       Evaluation\ARM\LIB\dl5tpainl8n.h" --preinclude      /
//                       swilib.h -I "D:\Program Files\IAR\Embedded          /
//                       Workbench 4.0 Evaluation\ARM\INC\"                  /
//                       --inline_threshold=16                               /
//    List file       =  D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\Release\ /
//                       List\JUDASTBL.s79                                   /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME JUDASTBL

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        PUBWEAK `?*?DATA_ID`
        PUBWEAK ?init?tab?DATA_I
        PUBLIC amigafreqtable
        PUBLIC linearfreqtable
        PUBLIC periodtable
        PUBLIC retrigaddtable
        PUBLIC retrigmultable
        PUBLIC s3mfinetunetable
        PUBLIC s3mperiodtable
        PUBLIC vibratotable
        PUBLIC vibratotypetable
// D:\SVN\SieELF\SieELF\x65_PCM_Player\Player\MOD\Judas\JUDASTBL.C
//    1 /*
//    2  * Moduleplayer tables + a routine to lock them
//    3  *
//    4  * NOTE: none of these tables have been illegally ripped from another players'
//    5  * source code. All are either calculated, taken from the "official" module
//    6  * format textfiles or just figured out by myself.
//    7  *
//    8  * If you need these, rip these! Blasphemy-ware rulez!
//    9  */
//   10 
//   11 
//   12 
//   13 /* Multi retrig tables */

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//   14 signed char retrigaddtable[] =
retrigaddtable:
        DS8 16
        REQUIRE `?<Initializer for retrigaddtable>`
//   15 {
//   16         0, -1, -2, -4, -8, -16, 0, 0, 0, +1, +2, +4, +8, +16, 0, 0
//   17 };

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//   18 signed char retrigmultable[] =
retrigmultable:
        DS8 16
        REQUIRE `?<Initializer for retrigmultable>`
//   19 {
//   20         0, 0, 0, 0, 0, 0, 11, 8, 0, 0, 0, 0, 0, 0, 24, 32
//   21 };
//   22 
//   23 /* Vibrato tables (used both for normal & instrument vibrato) */

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//   24 signed char vibratotable[4][256] =
vibratotable:
        DS8 1024
        REQUIRE `?<Initializer for vibratotable>`
//   25 {
//   26         {
//   27                 0, -2, -3, -5, -6, -8, -9, -11, -12, -14, -16, -17, -19, -20, -22, -23,
//   28                 -24, -26, -27, -29, -30, -32, -33, -34, -36, -37, -38, -39, -41, -42, -43, -44,
//   29                 -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -56, -57, -58, -59,
//   30                 -59, -60, -60, -61, -61, -62, -62, -62, -63, -63, -63, -64, -64, -64, -64, -64,
//   31                 -64, -64, -64, -64, -64, -64, -63, -63, -63, -62, -62, -62, -61, -61, -60, -60,
//   32                 -59, -59, -58, -57, -56, -56, -55, -54, -53, -52, -51, -50, -49, -48, -47, -46,
//   33                 -45, -44, -43, -42, -41, -39, -38, -37, -36, -34, -33, -32, -30, -29, -27, -26,
//   34                 -24, -23, -22, -20, -19, -17, -16, -14, -12, -11, -9, -8, -6, -5, -3, -2,
//   35                 0, 2, 3, 5, 6, 8, 9, 11, 12, 14, 16, 17, 19, 20, 22, 23,
//   36                 24, 26, 27, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44,
//   37                 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 56, 57, 58, 59,
//   38                 59, 60, 60, 61, 61, 62, 62, 62, 63, 63, 63, 64, 64, 64, 64, 64,
//   39                 64, 64, 64, 64, 64, 64, 63, 63, 63, 62, 62, 62, 61, 61, 60, 60,
//   40                 59, 59, 58, 57, 56, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46,
//   41                 45, 44, 43, 42, 41, 39, 38, 37, 36, 34, 33, 32, 30, 29, 27, 26,
//   42                 24, 23, 22, 20, 19, 17, 16, 14, 12, 11, 9, 8, 6, 5, 3, 2
//   43         },
//   44         {
//   45                 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
//   46                 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
//   47                 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
//   48                 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
//   49                 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
//   50                 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
//   51                 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
//   52                 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
//   53                 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64,
//   54                 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64,
//   55                 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64,
//   56                 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64,
//   57                 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64,
//   58                 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64,
//   59                 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64,
//   60                 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64
//   61         },
//   62         {
//   63                 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
//   64                 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15,
//   65                 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23,
//   66                 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31,
//   67                 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 39,
//   68                 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47,
//   69                 48, 48, 49, 49, 50, 50, 51, 51, 52, 52, 53, 53, 54, 54, 55, 55,
//   70                 56, 56, 57, 57, 58, 58, 59, 59, 60, 60, 61, 61, 62, 62, 63, 63,
//   71                 -64, -64, -63, -63, -62, -62, -61, -61, -60, -60, -59, -59, -58, -58, -57, -57,
//   72                 -56, -56, -55, -55, -54, -54, -53, -53, -52, -52, -51, -51, -50, -50, -49, -49,
//   73                 -48, -48, -47, -47, -46, -46, -45, -45, -44, -44, -43, -43, -42, -42, -41, -41,
//   74                 -40, -40, -39, -39, -38, -38, -37, -37, -36, -36, -35, -35, -34, -34, -33, -33,
//   75                 -32, -32, -31, -31, -30, -30, -29, -29, -28, -28, -27, -27, -26, -26, -25, -25,
//   76                 -24, -24, -23, -23, -22, -22, -21, -21, -20, -20, -19, -19, -18, -18, -17, -17,
//   77                 -16, -16, -15, -15, -14, -14, -13, -13, -12, -12, -11, -11, -10, -10, -9, -9,
//   78                 -8, -8, -7, -7, -6, -6, -5, -5, -4, -4, -3, -3, -2, -2, -1, -1
//   79         },
//   80         {
//   81                 0, 0, -1, -1, -2, -2, -3, -3, -4, -4, -5, -5, -6, -6, -7, -7,
//   82                 -8, -8, -9, -9, -10, -10, -11, -11, -12, -12, -13, -13, -14, -14, -15, -15,
//   83                 -16, -16, -17, -17, -18, -18, -19, -19, -20, -20, -21, -21, -22, -22, -23, -23,
//   84                 -24, -24, -25, -25, -26, -26, -27, -27, -28, -28, -29, -29, -30, -30, -31, -31,
//   85                 -32, -32, -33, -33, -34, -34, -35, -35, -36, -36, -37, -37, -38, -38, -39, -39,
//   86                 -40, -40, -41, -41, -42, -42, -43, -43, -44, -44, -45, -45, -46, -46, -47, -47,
//   87                 -48, -48, -49, -49, -50, -50, -51, -51, -52, -52, -53, -53, -54, -54, -55, -55,
//   88                 -56, -56, -57, -57, -58, -58, -59, -59, -60, -60, -61, -61, -62, -62, -63, -63,
//   89                 64, 64, 63, 63, 62, 62, 61, 61, 60, 60, 59, 59, 58, 58, 57, 57,
//   90                 56, 56, 55, 55, 54, 54, 53, 53, 52, 52, 51, 51, 50, 50, 49, 49,
//   91                 48, 48, 47, 47, 46, 46, 45, 45, 44, 44, 43, 43, 42, 42, 41, 41,
//   92                 40, 40, 39, 39, 38, 38, 37, 37, 36, 36, 35, 35, 34, 34, 33, 33,
//   93                 32, 32, 31, 31, 30, 30, 29, 29, 28, 28, 27, 27, 26, 26, 25, 25,
//   94                 24, 24, 23, 23, 22, 22, 21, 21, 20, 20, 19, 19, 18, 18, 17, 17,
//   95                 16, 16, 15, 15, 14, 14, 13, 13, 12, 12, 11, 11, 10, 10, 9, 9,
//   96                 8, 8, 7, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1
//   97         }
//   98 };
//   99 
//  100 /* XM linear frequency table */

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  101 unsigned linearfreqtable[] =
linearfreqtable:
        DS8 3072
        REQUIRE `?<Initializer for linearfreqtable>`
//  102 {
//  103         535232, 534749, 534266, 533784, 533303, 532822, 532341, 531861, 531381, 530902,
//  104         530423, 529944, 529466, 528988, 528511, 528034, 527558, 527082, 526607, 526131,
//  105         525657, 525183, 524709, 524236, 523763, 523290, 522818, 522346, 521875, 521404,
//  106         520934, 520464, 519994, 519525, 519057, 518588, 518121, 517653, 517186, 516720,
//  107         516253, 515788, 515322, 514858, 514393, 513929, 513465, 513002, 512539, 512077,
//  108         511615, 511154, 510692, 510232, 509771, 509312, 508852, 508393, 507934, 507476,
//  109         507018, 506561, 506104, 505647, 505191, 504735, 504280, 503825, 503371, 502917,
//  110         502463, 502010, 501557, 501104, 500652, 500201, 499749, 499298, 498848, 498398,
//  111         497948, 497499, 497050, 496602, 496154, 495706, 495259, 494812, 494366, 493920,
//  112         493474, 493029, 492585, 492140, 491696, 491253, 490809, 490367, 489924, 489482,
//  113         489041, 488600, 488159, 487718, 487278, 486839, 486400, 485961, 485522, 485084,
//  114         484647, 484210, 483773, 483336, 482900, 482465, 482029, 481595, 481160, 480726,
//  115         480292, 479859, 479426, 478994, 478562, 478130, 477699, 477268, 476837, 476407,
//  116         475977, 475548, 475119, 474690, 474262, 473834, 473407, 472979, 472553, 472126,
//  117         471701, 471275, 470850, 470425, 470001, 469577, 469153, 468730, 468307, 467884,
//  118         467462, 467041, 466619, 466198, 465778, 465358, 464938, 464518, 464099, 463681,
//  119         463262, 462844, 462427, 462010, 461593, 461177, 460760, 460345, 459930, 459515,
//  120         459100, 458686, 458272, 457859, 457446, 457033, 456621, 456209, 455797, 455386,
//  121         454975, 454565, 454155, 453745, 453336, 452927, 452518, 452110, 451702, 451294,
//  122         450887, 450481, 450074, 449668, 449262, 448857, 448452, 448048, 447644, 447240,
//  123         446836, 446433, 446030, 445628, 445226, 444824, 444423, 444022, 443622, 443221,
//  124         442821, 442422, 442023, 441624, 441226, 440828, 440430, 440033, 439636, 439239,
//  125         438843, 438447, 438051, 437656, 437261, 436867, 436473, 436079, 435686, 435293,
//  126         434900, 434508, 434116, 433724, 433333, 432942, 432551, 432161, 431771, 431382,
//  127         430992, 430604, 430215, 429827, 429439, 429052, 428665, 428278, 427892, 427506,
//  128         427120, 426735, 426350, 425965, 425581, 425197, 424813, 424430, 424047, 423665,
//  129         423283, 422901, 422519, 422138, 421757, 421377, 420997, 420617, 420237, 419858,
//  130         419479, 419101, 418723, 418345, 417968, 417591, 417214, 416838, 416462, 416086,
//  131         415711, 415336, 414961, 414586, 414212, 413839, 413465, 413092, 412720, 412347,
//  132         411975, 411604, 411232, 410862, 410491, 410121, 409751, 409381, 409012, 408643,
//  133         408274, 407906, 407538, 407170, 406803, 406436, 406069, 405703, 405337, 404971,
//  134         404606, 404241, 403876, 403512, 403148, 402784, 402421, 402058, 401695, 401333,
//  135         400970, 400609, 400247, 399886, 399525, 399165, 398805, 398445, 398086, 397727,
//  136         397368, 397009, 396651, 396293, 395936, 395579, 395222, 394865, 394509, 394153,
//  137         393798, 393442, 393087, 392733, 392378, 392024, 391671, 391317, 390964, 390612,
//  138         390259, 389907, 389556, 389204, 388853, 388502, 388152, 387802, 387452, 387102,
//  139         386753, 386404, 386056, 385707, 385359, 385012, 384664, 384317, 383971, 383624,
//  140         383278, 382932, 382587, 382242, 381897, 381552, 381208, 380864, 380521, 380177,
//  141         379834, 379492, 379149, 378807, 378466, 378124, 377783, 377442, 377102, 376762,
//  142         376422, 376082, 375743, 375404, 375065, 374727, 374389, 374051, 373714, 373377,
//  143         373040, 372703, 372367, 372031, 371695, 371360, 371025, 370690, 370356, 370022,
//  144         369688, 369355, 369021, 368688, 368356, 368023, 367691, 367360, 367028, 366697,
//  145         366366, 366036, 365706, 365376, 365046, 364717, 364388, 364059, 363731, 363403,
//  146         363075, 362747, 362420, 362093, 361766, 361440, 361114, 360788, 360463, 360137,
//  147         359813, 359488, 359164, 358840, 358516, 358193, 357869, 357547, 357224, 356902,
//  148         356580, 356258, 355937, 355616, 355295, 354974, 354654, 354334, 354014, 353695,
//  149         353376, 353057, 352739, 352420, 352103, 351785, 351468, 351150, 350834, 350517,
//  150         350201, 349885, 349569, 349254, 348939, 348624, 348310, 347995, 347682, 347368,
//  151         347055, 346741, 346429, 346116, 345804, 345492, 345180, 344869, 344558, 344247,
//  152         343936, 343626, 343316, 343006, 342697, 342388, 342079, 341770, 341462, 341154,
//  153         340846, 340539, 340231, 339924, 339618, 339311, 339005, 338700, 338394, 338089,
//  154         337784, 337479, 337175, 336870, 336566, 336263, 335959, 335656, 335354, 335051,
//  155         334749, 334447, 334145, 333844, 333542, 333242, 332941, 332641, 332341, 332041,
//  156         331741, 331442, 331143, 330844, 330546, 330247, 329950, 329652, 329355, 329057,
//  157         328761, 328464, 328168, 327872, 327576, 327280, 326985, 326690, 326395, 326101,
//  158         325807, 325513, 325219, 324926, 324633, 324340, 324047, 323755, 323463, 323171,
//  159         322879, 322588, 322297, 322006, 321716, 321426, 321136, 320846, 320557, 320267,
//  160         319978, 319690, 319401, 319113, 318825, 318538, 318250, 317963, 317676, 317390,
//  161         317103, 316817, 316532, 316246, 315961, 315676, 315391, 315106, 314822, 314538,
//  162         314254, 313971, 313688, 313405, 313122, 312839, 312557, 312275, 311994, 311712,
//  163         311431, 311150, 310869, 310589, 310309, 310029, 309749, 309470, 309190, 308911,
//  164         308633, 308354, 308076, 307798, 307521, 307243, 306966, 306689, 306412, 306136,
//  165         305860, 305584, 305308, 305033, 304758, 304483, 304208, 303934, 303659, 303385,
//  166         303112, 302838, 302565, 302292, 302019, 301747, 301475, 301203, 300931, 300660,
//  167         300388, 300117, 299847, 299576, 299306, 299036, 298766, 298497, 298227, 297958,
//  168         297689, 297421, 297153, 296884, 296617, 296349, 296082, 295815, 295548, 295281,
//  169         295015, 294749, 294483, 294217, 293952, 293686, 293421, 293157, 292892, 292628,
//  170         292364, 292100, 291837, 291574, 291311, 291048, 290785, 290523, 290261, 289999,
//  171         289737, 289476, 289215, 288954, 288693, 288433, 288173, 287913, 287653, 287393,
//  172         287134, 286875, 286616, 286358, 286099, 285841, 285583, 285326, 285068, 284811,
//  173         284554, 284298, 284041, 283785, 283529, 283273, 283017, 282762, 282507, 282252,
//  174         281998, 281743, 281489, 281235, 280981, 280728, 280475, 280222, 279969, 279716,
//  175         279464, 279212, 278960, 278708, 278457, 278206, 277955, 277704, 277453, 277203,
//  176         276953, 276703, 276453, 276204, 275955, 275706, 275457, 275209, 274960, 274712,
//  177         274465, 274217, 273970, 273722, 273476, 273229, 272982, 272736, 272490, 272244,
//  178         271999, 271753, 271508, 271263, 271018, 270774, 270530, 270286, 270042, 269798,
//  179         269555, 269312, 269069, 268826, 268583, 268341, 268099, 267857
//  180 };
//  181 
//  182 /* Period table for S3Ms */

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  183 unsigned short s3mperiodtable[] =
s3mperiodtable:
        DS8 24
        REQUIRE `?<Initializer for s3mperiodtable>`
//  184 {
//  185         1712, 1616, 1524, 1440, 1356, 1280, 1208, 1140, 1076, 1016, 960, 907
//  186 };
//  187 
//  188 /* Period table for MODs, lowest octave (0) with all finetunes */

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  189 unsigned short periodtable[16][12] =
periodtable:
        DS8 384
        REQUIRE `?<Initializer for periodtable>`
//  190 {
//  191         {6848, 6464, 6096, 5760, 5424, 5120, 4832, 4560, 4304, 4064, 3840, 3624},
//  192         {6800, 6416, 6056, 5720, 5392, 5096, 4808, 4536, 4280, 4040, 3816, 3600},
//  193         {6752, 6368, 6016, 5672, 5360, 5056, 4776, 4504, 4256, 4016, 3792, 3576},
//  194         {6704, 6328, 5968, 5632, 5320, 5024, 4736, 4472, 4224, 3984, 3760, 3552},
//  195         {6656, 6280, 5928, 5592, 5280, 4984, 4704, 4440, 4192, 3960, 3736, 3528},
//  196         {6608, 6232, 5888, 5552, 5240, 4952, 4672, 4408, 4160, 3928, 3704, 3496},
//  197         {6560, 6192, 5840, 5512, 5208, 4912, 4640, 4376, 4128, 3896, 3680, 3472},
//  198         {6512, 6144, 5800, 5472, 5168, 4880, 4600, 4344, 4104, 3872, 3656, 3448},
//  199         {7256, 6848, 6464, 6096, 5760, 5424, 5120, 4832, 4560, 4304, 4032, 3840},
//  200         {7200, 6800, 6416, 6056, 5720, 5400, 5088, 4808, 4536, 4280, 4040, 3816},
//  201         {7152, 6752, 6368, 6016, 5672, 5360, 5056, 4776, 4504, 4256, 4016, 3792},
//  202         {7096, 6704, 6328, 5968, 5632, 5320, 5024, 4736, 4472, 4224, 3984, 3760},
//  203         {7048, 6656, 6280, 5928, 5592, 5280, 4984, 4704, 4440, 4192, 3952, 3736},
//  204         {7000, 6608, 6232, 5888, 5552, 5240, 4952, 4672, 4408, 4160, 3928, 3704},
//  205         {6944, 6560, 6192, 5840, 5512, 5208, 4912, 4640, 4376, 4128, 3896, 3680},
//  206         {6896, 6512, 6144, 5800, 5472, 5168, 4880, 4600, 4344, 4104, 3872, 3656}
//  207 };
//  208 
//  209 /* S3M Set Finetune values */

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  210 unsigned short s3mfinetunetable[] =
s3mfinetunetable:
        DS8 32
        REQUIRE `?<Initializer for s3mfinetunetable>`
//  211 {
//  212         7895, 7941, 7985, 8046, 8107, 8169, 8232, 8280, 8363, 8413, 8463, 8529,
//  213         8581, 8651, 8723, 8757
//  214 };
//  215 
//  216 /*
//  217  * Conversion table from XM instr. vibrato types to standard vibrato types
//  218  * NOTE: Random isn't implemented, who needs it?!
//  219  */

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  220 unsigned char vibratotypetable[] =
vibratotypetable:
        DS8 4
        REQUIRE `?<Initializer for vibratotypetable>`
//  221 {
//  222         0, 2, 1, 0
//  223 };
//  224 
//  225 /* XM Amiga frequency table. */

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  226 unsigned amigafreqtable[] =
amigafreqtable:
        DS8 420
        REQUIRE `?<Initializer for amigafreqtable>`

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for retrigaddtable>`:
        DATA
        DC8 0, -1, -2, -4, -8, -16, 0, 0, 0, 1, 2, 4, 8, 16, 0, 0

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for retrigmultable>`:
        DATA
        DC8 0, 0, 0, 0, 0, 0, 11, 8, 0, 0, 0, 0, 0, 0, 24, 32

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for vibratotable>`:
        DATA
        DC8 0, -2, -3, -5, -6, -8, -9, -11, -12, -14, -16, -17, -19, -20, -22
        DC8 -23, -24, -26, -27, -29, -30, -32, -33, -34, -36, -37, -38, -39
        DC8 -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53
        DC8 -54, -55, -56, -56, -57, -58, -59, -59, -60, -60, -61, -61, -62
        DC8 -62, -62, -63, -63, -63, -64, -64, -64, -64, -64, -64, -64, -64
        DC8 -64, -64, -64, -63, -63, -63, -62, -62, -62, -61, -61, -60, -60
        DC8 -59, -59, -58, -57, -56, -56, -55, -54, -53, -52, -51, -50, -49
        DC8 -48, -47, -46, -45, -44, -43, -42, -41, -39, -38, -37, -36, -34
        DC8 -33, -32, -30, -29, -27, -26, -24, -23, -22, -20, -19, -17, -16
        DC8 -14, -12, -11, -9, -8, -6, -5, -3, -2, 0, 2, 3, 5, 6, 8, 9, 11, 12
        DC8 14, 16, 17, 19, 20, 22, 23, 24, 26, 27, 29, 30, 32, 33, 34, 36, 37
        DC8 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55
        DC8 56, 56, 57, 58, 59, 59, 60, 60, 61, 61, 62, 62, 62, 63, 63, 63, 64
        DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 63, 63, 63, 62, 62, 62, 61
        DC8 61, 60, 60, 59, 59, 58, 57, 56, 56, 55, 54, 53, 52, 51, 50, 49, 48
        DC8 47, 46, 45, 44, 43, 42, 41, 39, 38, 37, 36, 34, 33, 32, 30, 29, 27
        DC8 26, 24, 23, 22, 20, 19, 17, 16, 14, 12, 11, 9, 8, 6, 5, 3, 2, 64
        DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64
        DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64
        DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64
        DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64
        DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64
        DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64
        DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64
        DC8 64, 64, 64, 64, 64, 64, 64, 64, -64, -64, -64, -64, -64, -64, -64
        DC8 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64
        DC8 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64
        DC8 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64
        DC8 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64
        DC8 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64
        DC8 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64
        DC8 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64
        DC8 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64
        DC8 -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64
        DC8 -64, -64, -64, -64, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7
        DC8 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16
        DC8 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25
        DC8 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33
        DC8 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42
        DC8 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 49, 50, 50
        DC8 51, 51, 52, 52, 53, 53, 54, 54, 55, 55, 56, 56, 57, 57, 58, 58, 59
        DC8 59, 60, 60, 61, 61, 62, 62, 63, 63, -64, -64, -63, -63, -62, -62
        DC8 -61, -61, -60, -60, -59, -59, -58, -58, -57, -57, -56, -56, -55
        DC8 -55, -54, -54, -53, -53, -52, -52, -51, -51, -50, -50, -49, -49
        DC8 -48, -48, -47, -47, -46, -46, -45, -45, -44, -44, -43, -43, -42
        DC8 -42, -41, -41, -40, -40, -39, -39, -38, -38, -37, -37, -36, -36
        DC8 -35, -35, -34, -34, -33, -33, -32, -32, -31, -31, -30, -30, -29
        DC8 -29, -28, -28, -27, -27, -26, -26, -25, -25, -24, -24, -23, -23
        DC8 -22, -22, -21, -21, -20, -20, -19, -19, -18, -18, -17, -17, -16
        DC8 -16, -15, -15, -14, -14, -13, -13, -12, -12, -11, -11, -10, -10, -9
        DC8 -9, -8, -8, -7, -7, -6, -6, -5, -5, -4, -4, -3, -3, -2, -2, -1, -1
        DC8 0, 0, -1, -1, -2, -2, -3, -3, -4, -4, -5, -5, -6, -6, -7, -7, -8
        DC8 -8, -9, -9, -10, -10, -11, -11, -12, -12, -13, -13, -14, -14, -15
        DC8 -15, -16, -16, -17, -17, -18, -18, -19, -19, -20, -20, -21, -21
        DC8 -22, -22, -23, -23, -24, -24, -25, -25, -26, -26, -27, -27, -28
        DC8 -28, -29, -29, -30, -30, -31, -31, -32, -32, -33, -33, -34, -34
        DC8 -35, -35, -36, -36, -37, -37, -38, -38, -39, -39, -40, -40, -41
        DC8 -41, -42, -42, -43, -43, -44, -44, -45, -45, -46, -46, -47, -47
        DC8 -48, -48, -49, -49, -50, -50, -51, -51, -52, -52, -53, -53, -54
        DC8 -54, -55, -55, -56, -56, -57, -57, -58, -58, -59, -59, -60, -60
        DC8 -61, -61, -62, -62, -63, -63, 64, 64, 63, 63, 62, 62, 61, 61, 60
        DC8 60, 59, 59, 58, 58, 57, 57, 56, 56, 55, 55, 54, 54, 53, 53, 52, 52
        DC8 51, 51, 50, 50, 49, 49, 48, 48, 47, 47, 46, 46, 45, 45, 44, 44, 43
        DC8 43, 42, 42, 41, 41, 40, 40, 39, 39, 38, 38, 37, 37, 36, 36, 35, 35
        DC8 34, 34, 33, 33, 32, 32, 31, 31, 30, 30, 29, 29, 28, 28, 27, 27, 26
        DC8 26, 25, 25, 24, 24, 23, 23, 22, 22, 21, 21, 20, 20, 19, 19, 18, 18
        DC8 17, 17, 16, 16, 15, 15, 14, 14, 13, 13, 12, 12, 11, 11, 10, 10, 9
        DC8 9, 8, 8, 7, 7, 6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1, 1

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for linearfreqtable>`:
        DATA
        DC32 535232, 534749, 534266, 533784, 533303, 532822, 532341, 531861
        DC32 531381, 530902, 530423, 529944, 529466, 528988, 528511, 528034
        DC32 527558, 527082, 526607, 526131, 525657, 525183, 524709, 524236
        DC32 523763, 523290, 522818, 522346, 521875, 521404, 520934, 520464
        DC32 519994, 519525, 519057, 518588, 518121, 517653, 517186, 516720
        DC32 516253, 515788, 515322, 514858, 514393, 513929, 513465, 513002
        DC32 512539, 512077, 511615, 511154, 510692, 510232, 509771, 509312
        DC32 508852, 508393, 507934, 507476, 507018, 506561, 506104, 505647
        DC32 505191, 504735, 504280, 503825, 503371, 502917, 502463, 502010
        DC32 501557, 501104, 500652, 500201, 499749, 499298, 498848, 498398
        DC32 497948, 497499, 497050, 496602, 496154, 495706, 495259, 494812
        DC32 494366, 493920, 493474, 493029, 492585, 492140, 491696, 491253
        DC32 490809, 490367, 489924, 489482, 489041, 488600, 488159, 487718
        DC32 487278, 486839, 486400, 485961, 485522, 485084, 484647, 484210
        DC32 483773, 483336, 482900, 482465, 482029, 481595, 481160, 480726
        DC32 480292, 479859, 479426, 478994, 478562, 478130, 477699, 477268
        DC32 476837, 476407, 475977, 475548, 475119, 474690, 474262, 473834
        DC32 473407, 472979, 472553, 472126, 471701, 471275, 470850, 470425
        DC32 470001, 469577, 469153, 468730, 468307, 467884, 467462, 467041
        DC32 466619, 466198, 465778, 465358, 464938, 464518, 464099, 463681
        DC32 463262, 462844, 462427, 462010, 461593, 461177, 460760, 460345
        DC32 459930, 459515, 459100, 458686, 458272, 457859, 457446, 457033
        DC32 456621, 456209, 455797, 455386, 454975, 454565, 454155, 453745
        DC32 453336, 452927, 452518, 452110, 451702, 451294, 450887, 450481
        DC32 450074, 449668, 449262, 448857, 448452, 448048, 447644, 447240
        DC32 446836, 446433, 446030, 445628, 445226, 444824, 444423, 444022
        DC32 443622, 443221, 442821, 442422, 442023, 441624, 441226, 440828
        DC32 440430, 440033, 439636, 439239, 438843, 438447, 438051, 437656
        DC32 437261, 436867, 436473, 436079, 435686, 435293, 434900, 434508
        DC32 434116, 433724, 433333, 432942, 432551, 432161, 431771, 431382
        DC32 430992, 430604, 430215, 429827, 429439, 429052, 428665, 428278
        DC32 427892, 427506, 427120, 426735, 426350, 425965, 425581, 425197
        DC32 424813, 424430, 424047, 423665, 423283, 422901, 422519, 422138
        DC32 421757, 421377, 420997, 420617, 420237, 419858, 419479, 419101
        DC32 418723, 418345, 417968, 417591, 417214, 416838, 416462, 416086
        DC32 415711, 415336, 414961, 414586, 414212, 413839, 413465, 413092
        DC32 412720, 412347, 411975, 411604, 411232, 410862, 410491, 410121
        DC32 409751, 409381, 409012, 408643, 408274, 407906, 407538, 407170
        DC32 406803, 406436, 406069, 405703, 405337, 404971, 404606, 404241
        DC32 403876, 403512, 403148, 402784, 402421, 402058, 401695, 401333
        DC32 400970, 400609, 400247, 399886, 399525, 399165, 398805, 398445
        DC32 398086, 397727, 397368, 397009, 396651, 396293, 395936, 395579
        DC32 395222, 394865, 394509, 394153, 393798, 393442, 393087, 392733
        DC32 392378, 392024, 391671, 391317, 390964, 390612, 390259, 389907
        DC32 389556, 389204, 388853, 388502, 388152, 387802, 387452, 387102
        DC32 386753, 386404, 386056, 385707, 385359, 385012, 384664, 384317
        DC32 383971, 383624, 383278, 382932, 382587, 382242, 381897, 381552
        DC32 381208, 380864, 380521, 380177, 379834, 379492, 379149, 378807
        DC32 378466, 378124, 377783, 377442, 377102, 376762, 376422, 376082
        DC32 375743, 375404, 375065, 374727, 374389, 374051, 373714, 373377
        DC32 373040, 372703, 372367, 372031, 371695, 371360, 371025, 370690
        DC32 370356, 370022, 369688, 369355, 369021, 368688, 368356, 368023
        DC32 367691, 367360, 367028, 366697, 366366, 366036, 365706, 365376
        DC32 365046, 364717, 364388, 364059, 363731, 363403, 363075, 362747
        DC32 362420, 362093, 361766, 361440, 361114, 360788, 360463, 360137
        DC32 359813, 359488, 359164, 358840, 358516, 358193, 357869, 357547
        DC32 357224, 356902, 356580, 356258, 355937, 355616, 355295, 354974
        DC32 354654, 354334, 354014, 353695, 353376, 353057, 352739, 352420
        DC32 352103, 351785, 351468, 351150, 350834, 350517, 350201, 349885
        DC32 349569, 349254, 348939, 348624, 348310, 347995, 347682, 347368
        DC32 347055, 346741, 346429, 346116, 345804, 345492, 345180, 344869
        DC32 344558, 344247, 343936, 343626, 343316, 343006, 342697, 342388
        DC32 342079, 341770, 341462, 341154, 340846, 340539, 340231, 339924
        DC32 339618, 339311, 339005, 338700, 338394, 338089, 337784, 337479
        DC32 337175, 336870, 336566, 336263, 335959, 335656, 335354, 335051
        DC32 334749, 334447, 334145, 333844, 333542, 333242, 332941, 332641
        DC32 332341, 332041, 331741, 331442, 331143, 330844, 330546, 330247
        DC32 329950, 329652, 329355, 329057, 328761, 328464, 328168, 327872
        DC32 327576, 327280, 326985, 326690, 326395, 326101, 325807, 325513
        DC32 325219, 324926, 324633, 324340, 324047, 323755, 323463, 323171
        DC32 322879, 322588, 322297, 322006, 321716, 321426, 321136, 320846
        DC32 320557, 320267, 319978, 319690, 319401, 319113, 318825, 318538
        DC32 318250, 317963, 317676, 317390, 317103, 316817, 316532, 316246
        DC32 315961, 315676, 315391, 315106, 314822, 314538, 314254, 313971
        DC32 313688, 313405, 313122, 312839, 312557, 312275, 311994, 311712
        DC32 311431, 311150, 310869, 310589, 310309, 310029, 309749, 309470
        DC32 309190, 308911, 308633, 308354, 308076, 307798, 307521, 307243
        DC32 306966, 306689, 306412, 306136, 305860, 305584, 305308, 305033
        DC32 304758, 304483, 304208, 303934, 303659, 303385, 303112, 302838
        DC32 302565, 302292, 302019, 301747, 301475, 301203, 300931, 300660
        DC32 300388, 300117, 299847, 299576, 299306, 299036, 298766, 298497
        DC32 298227, 297958, 297689, 297421, 297153, 296884, 296617, 296349
        DC32 296082, 295815, 295548, 295281, 295015, 294749, 294483, 294217
        DC32 293952, 293686, 293421, 293157, 292892, 292628, 292364, 292100
        DC32 291837, 291574, 291311, 291048, 290785, 290523, 290261, 289999
        DC32 289737, 289476, 289215, 288954, 288693, 288433, 288173, 287913
        DC32 287653, 287393, 287134, 286875, 286616, 286358, 286099, 285841
        DC32 285583, 285326, 285068, 284811, 284554, 284298, 284041, 283785
        DC32 283529, 283273, 283017, 282762, 282507, 282252, 281998, 281743
        DC32 281489, 281235, 280981, 280728, 280475, 280222, 279969, 279716
        DC32 279464, 279212, 278960, 278708, 278457, 278206, 277955, 277704
        DC32 277453, 277203, 276953, 276703, 276453, 276204, 275955, 275706
        DC32 275457, 275209, 274960, 274712, 274465, 274217, 273970, 273722
        DC32 273476, 273229, 272982, 272736, 272490, 272244, 271999, 271753
        DC32 271508, 271263, 271018, 270774, 270530, 270286, 270042, 269798
        DC32 269555, 269312, 269069, 268826, 268583, 268341, 268099, 267857

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for s3mperiodtable>`:
        DATA
        DC16 1712, 1616, 1524, 1440, 1356, 1280, 1208, 1140, 1076, 1016, 960
        DC16 907

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for periodtable>`:
        DATA
        DC16 6848, 6464, 6096, 5760, 5424, 5120, 4832, 4560, 4304, 4064, 3840
        DC16 3624, 6800, 6416, 6056, 5720, 5392, 5096, 4808, 4536, 4280, 4040
        DC16 3816, 3600, 6752, 6368, 6016, 5672, 5360, 5056, 4776, 4504, 4256
        DC16 4016, 3792, 3576, 6704, 6328, 5968, 5632, 5320, 5024, 4736, 4472
        DC16 4224, 3984, 3760, 3552, 6656, 6280, 5928, 5592, 5280, 4984, 4704
        DC16 4440, 4192, 3960, 3736, 3528, 6608, 6232, 5888, 5552, 5240, 4952
        DC16 4672, 4408, 4160, 3928, 3704, 3496, 6560, 6192, 5840, 5512, 5208
        DC16 4912, 4640, 4376, 4128, 3896, 3680, 3472, 6512, 6144, 5800, 5472
        DC16 5168, 4880, 4600, 4344, 4104, 3872, 3656, 3448, 7256, 6848, 6464
        DC16 6096, 5760, 5424, 5120, 4832, 4560, 4304, 4032, 3840, 7200, 6800
        DC16 6416, 6056, 5720, 5400, 5088, 4808, 4536, 4280, 4040, 3816, 7152
        DC16 6752, 6368, 6016, 5672, 5360, 5056, 4776, 4504, 4256, 4016, 3792
        DC16 7096, 6704, 6328, 5968, 5632, 5320, 5024, 4736, 4472, 4224, 3984
        DC16 3760, 7048, 6656, 6280, 5928, 5592, 5280, 4984, 4704, 4440, 4192
        DC16 3952, 3736, 7000, 6608, 6232, 5888, 5552, 5240, 4952, 4672, 4408
        DC16 4160, 3928, 3704, 6944, 6560, 6192, 5840, 5512, 5208, 4912, 4640
        DC16 4376, 4128, 3896, 3680, 6896, 6512, 6144, 5800, 5472, 5168, 4880
        DC16 4600, 4344, 4104, 3872, 3656

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for s3mfinetunetable>`:
        DATA
        DC16 7895, 7941, 7985, 8046, 8107, 8169, 8232, 8280, 8363, 8413, 8463
        DC16 8529, 8581, 8651, 8723, 8757

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for vibratotypetable>`:
        DATA
        DC8 0, 2, 1, 0

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for amigafreqtable>`:
        DATA
        DC32 907, 900, 894, 887, 881, 875, 868, 862, 856, 850, 844, 838, 832
        DC32 826, 820, 814, 808, 802, 796, 791, 785, 779, 774, 768, 762, 757
        DC32 752, 746, 741, 736, 730, 725, 720, 715, 709, 704, 699, 694, 689
        DC32 684, 678, 675, 670, 665, 660, 655, 651, 646, 640, 636, 632, 628
        DC32 623, 619, 614, 610, 604, 601, 597, 592, 588, 584, 580, 575, 570
        DC32 567, 563, 559, 555, 551, 547, 543, 538, 535, 532, 528, 524, 520
        DC32 516, 513, 508, 505, 502, 498, 494, 491, 487, 484, 480, 477, 474
        DC32 470, 467, 463, 460, 457, 453, 450, 447, 443, 440, 437, 434, 431
        DC32 428

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        END
//  227 {
//  228         907, 900, 894, 887, 881, 875, 868, 862, 856, 850, 844, 838, 832, 826, 820, 814,
//  229         808, 802, 796, 791, 785, 779, 774, 768, 762, 757, 752, 746, 741, 736, 730, 725,
//  230         720, 715, 709, 704, 699, 694, 689, 684, 678, 675, 670, 665, 660, 655, 651, 646,
//  231         640, 636, 632, 628, 623, 619, 614, 610, 604, 601, 597, 592, 588, 584, 580, 575,
//  232         570, 567, 563, 559, 555, 551, 547, 543, 538, 535, 532, 528, 524, 520, 516, 513,
//  233         508, 505, 502, 498, 494, 491, 487, 484, 480, 477, 474, 470, 467, 463, 460, 457,
//  234         453, 450, 447, 443, 440, 437, 434, 431, 428
//  235 };
//  236 
//  237 
//  238 
//  239 
// 
// 4 992 bytes in segment DATA_I
// 4 992 bytes in segment DATA_ID
//    12 bytes in segment INITTAB
// 
//     0 bytes of CODE  memory (+ 12 bytes shared)
// 4 992 bytes of CONST memory
// 4 992 bytes of DATA  memory
//
//Errors: none
//Warnings: none
