##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    08/Jun/2010  15:03:30 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  F:\SVN\cn\Master\getConfig.c                         #
#    Command line    =  F:\SVN\cn\Master\getConfig.c -D NEWSGOLD -lC         #
#                       F:\SVN\cn\Master\Release_NEWSGOLD\List\ -o           #
#                       F:\SVN\cn\Master\Release_NEWSGOLD\Obj\ -s9           #
#                       --no_unroll --no_clustering --cpu_mode arm --endian  #
#                       little --cpu ARM926EJ-S --stack_align 4 --interwork  #
#                       -e --fpu None --dlib_config "F:\software\Embedded    #
#                       Workbench 4.0 Evaluation\ARM\LIB\dl5tpainl8n.h" -I   #
#                       "F:\software\Embedded Workbench 4.0                  #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  F:\SVN\cn\Master\Release_NEWSGOLD\List\getConfig.lst #
#    Object file     =  F:\SVN\cn\Master\Release_NEWSGOLD\Obj\getConfig.r79  #
#                                                                            #
#                                                                            #
##############################################################################

F:\SVN\cn\Master\getConfig.c
      1          /*
      2           * 文件名: getConfig.c
      3           * 作者: BingK(binghelingxi)
      4           *
      5           * 最后修改日期: 2008.08.05
      6           *
      7           * 作用: 读取config.txt，并进行解析，储存结果，还提供了一些文字处理函数
      8           * 备注: WINTEL_DEBUG为使用在windows中使用编译器进行调试的条件编译项目
      9           *
     10           */
     11          
     12          #ifdef	WINTEL_DEBUG
     13          #include <stdio.h>
     14          #include <stdlib.h>
     15          #include <string.h>
     16          #include <memory.h>
     17          #else
     18          #include "..\inc\swilib.h"
     19          #endif
     20          #include "getConfig.h"
     21          #include "ptcFileWork.h"
     22          #include "usedstr.h"
     23          #include "string.h"
     24          #include "main.h"
     25          
     26          
     27          #ifdef	WINTEL_DEBUG
     28          #define PATCH_DIR	"E:\\SRC\\SVN\\SieELF\\Master\\Patches\\"
     29          char cfg_buf[CONFIG_SIZE];
     30          int patch_n=0;
     31          #define mfree free
     32          
     33          #else
     34          

   \                                 In segment DATA_Z, align 4, align-sorted
     35          char cfg_buf[CONFIG_SIZE];
   \                     cfg_buf:
   \   00000000                      DS8 49152
     36          //char *cfg_buf;
     37          
     38          #endif
     39          

   \                                 In segment DATA_Z, align 4, align-sorted
     40          PTC_CONFIG * volatile ptcfgtop=0;
   \                     ptcfgtop:
   \   00000000                      DS8 4
     41          
     42          
     43          //打开config.txt并载入到cfg_buf

   \                                 In segment CODE, align 4, keep-with-next
     44          int loadConfig(void)
     45          {
     46          	char cfg_path[128]=PATCH_DIR;
   \                     loadConfig:
   \   00000000   CC109FE5           LDR      R1,??loadConfig_0  ;; `?<Constant "0:\\\\Misc\\\\Patches\\\\">`
   \   00000004   70402DE9           PUSH     {R4-R6,LR}
   \   00000008   ACD04DE2           SUB      SP,SP,#+172
   \   0000000C   04008DE2           ADD      R0,SP,#+4
   \   00000010   8030A0E3           MOV      R3,#+128
   \                     ??loadConfig_1:
   \   00000014   043053E2           SUBS     R3,R3,#+4
   \   00000018   032091E7           LDR      R2,[R1, R3]
   \   0000001C   032080E7           STR      R2,[R0, R3]
   \   00000020   FBFFFF1A           BNE      ??loadConfig_1
     47          	int size=0;
     48          #ifdef	WINTEL_DEBUG
     49          	FILE *fp;
     50          	strcpy(cfg_path, "E:\\SRC\\SVN\\SieELF\\Master\\Patches\\PTC\\configs.txt");
     51          	fp=fopen(cfg_path, "rb");
     52          	if(!fp)
     53          	{
     54          		cfg_buf[0]=0;
     55          		return 0;
     56          	}
     57          	size=fread(cfg_buf, sizeof(char), CONFIG_SIZE, fp);
     58          	fclose(fp);
     59          #else
     60          	int f;
     61          	unsigned int ferr;
     62          	FSTATS fstat;
     63          	strcat(cfg_path, PTC_FOLDR);
   \   00000024   AC109FE5           LDR      R1,??loadConfig_0+0x4  ;; `?<Constant "ptc\\\\">`
     64          	strcat(cfg_path, "configs.txt");
     65          	if(GetFileStats(cfg_path,&fstat,&ferr)!=-1)
   \   00000028   0040E0E3           MVN      R4,#+0
   \   0000002C   170000EF           SWI      +23
   \   00000030   A4109FE5           LDR      R1,??loadConfig_0+0x8  ;; `?<Constant "configs.txt">`
   \   00000034   04008DE2           ADD      R0,SP,#+4
   \   00000038   170000EF           SWI      +23
   \   0000003C   0D20A0E1           MOV      R2,SP
   \   00000040   84108DE2           ADD      R1,SP,#+132
   \   00000044   04008DE2           ADD      R0,SP,#+4
   \   00000048   840000EF           SWI      +132
   \   0000004C   040050E1           CMP      R0,R4
   \   00000050   1C00000A           BEQ      ??loadConfig_2
     66          	{
     67          		f=fopen(cfg_path, A_BIN+A_ReadOnly, P_READ, &ferr);
   \   00000054   0D30A0E1           MOV      R3,SP
   \   00000058   8020A0E3           MOV      R2,#+128
   \   0000005C   801CA0E3           MOV      R1,#+32768
   \   00000060   04008DE2           ADD      R0,SP,#+4
   \   00000064   0A0000EF           SWI      +10
   \   00000068   0050A0E1           MOV      R5,R0
     68          		if(f==-1)
   \   0000006C   040055E1           CMP      R5,R4
   \   00000070   1400000A           BEQ      ??loadConfig_2
     69          		{
     70          			return 0;
     71          		}
     72          		size=fstat.size;
   \   00000074   88409DE5           LDR      R4,[SP, #+136]
     73          		if(size<=0)
   \   00000078   010054E3           CMP      R4,#+1
   \   0000007C   110000BA           BLT      ??loadConfig_2
     74          			return 0;
     75          		//cfg_buf=malloc((size+3)&(~3));
     76          		if(fread(f, cfg_buf, size, &ferr)!=size)
   \   00000080   ........           LDR      R6,??DataTable0  ;; cfg_buf
   \   00000084   0D30A0E1           MOV      R3,SP
   \   00000088   0420A0E1           MOV      R2,R4
   \   0000008C   0610A0E1           MOV      R1,R6
   \   00000090   0B0000EF           SWI      +11
   \   00000094   040050E1           CMP      R0,R4
   \   00000098   0D10A0E1           MOV      R1,SP
   \   0000009C   0500A0E1           MOV      R0,R5
   \   000000A0   0200000A           BEQ      ??loadConfig_3
     77          		{
     78          			fclose(f, &ferr);
   \   000000A4   0D0000EF           SWI      +13
     79          			//mfree(cfg_buf);
     80          			return 0;
   \   000000A8   0000A0E3           MOV      R0,#+0
   \   000000AC   030000EA           B        ??loadConfig_4
     81          		}
     82          		fclose(f, &ferr);
   \                     ??loadConfig_3:
   \   000000B0   0D0000EF           SWI      +13
     83          		cfg_buf[size]=0;
   \   000000B4   0000A0E3           MOV      R0,#+0
   \   000000B8   0600C4E7           STRB     R0,[R4, +R6]
     84          	}
     85          	else
     86          		return 0;
     87          #endif
     88          	return 1;
   \   000000BC   0100A0E3           MOV      R0,#+1
   \                     ??loadConfig_4:
   \   000000C0   ACD08DE2           ADD      SP,SP,#+172
   \   000000C4   7080BDE8           POP      {R4-R6,PC}
   \                     ??loadConfig_2:
   \   000000C8   0000A0E3           MOV      R0,#+0
   \   000000CC   ACD08DE2           ADD      SP,SP,#+172
   \   000000D0   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??loadConfig_0:
   \   000000D4   ........           DC32     `?<Constant "0:\\\\Misc\\\\Patches\\\\">`
   \   000000D8   ........           DC32     `?<Constant "ptc\\\\">`
   \   000000DC   ........           DC32     `?<Constant "configs.txt">`
     89          }
     90          //将一个PTC_CONFIG指针添加到链表，即添加一个补丁

   \                                 In segment CODE, align 4, keep-with-next
     91          void addPatchConfigList(void)
     92          {
   \                     addPatchConfigList:
   \   00000000   00402DE9           PUSH     {LR}
     93          	PTC_CONFIG *ptcfg=malloc(sizeof(PTC_CONFIG));
   \   00000004   A400A0E3           MOV      R0,#+164
   \   00000008   140000EF           SWI      +20
     94          	ptcfg->prev=0;
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   001080E5           STR      R1,[R0, #+0]
     95          	ptcfg->next=0;
   \   00000014   041080E5           STR      R1,[R0, #+4]
     96          	ptcfg->patchonoff=127; //all profile on, patch off 
   \   00000018   7F20A0E3           MOV      R2,#+127
   \   0000001C   0820C0E5           STRB     R2,[R0, #+8]
     97          	ptcfg->patchInfo=0;
   \   00000020   1C1080E5           STR      R1,[R0, #+28]
     98          	ptcfg->mainitem.smName[0]=0;
   \   00000024   2010C0E5           STRB     R1,[R0, #+32]
     99          	ptcfg->mainitem.item=0;
   \   00000028   A01080E5           STR      R1,[R0, #+160]
    100          	ptcfg->needSaveData=0;
   \   0000002C   0C1080E5           STR      R1,[R0, #+12]
    101          	ptcfg->memory=0;
   \   00000030   141080E5           STR      R1,[R0, #+20]
    102          	ptcfg->disableProfile=0;
   \   00000034   101080E5           STR      R1,[R0, #+16]
    103          	ptcfg->offset=0;
   \   00000038   181080E5           STR      R1,[R0, #+24]
    104          	if(!ptcfgtop)
   \   0000003C   ........           LDR      R1,??DataTable4  ;; ptcfgtop
   \   00000040   002091E5           LDR      R2,[R1, #+0]
   \   00000044   000052E3           CMP      R2,#+0
    105          		ptcfgtop=ptcfg;
   \   00000048   00008105           STREQ    R0,[R1, #+0]
   \   0000004C   0300000A           BEQ      ??addPatchConfigList_0
    106          	else
    107          	{
    108          		PTC_CONFIG *ptcfg_1=ptcfgtop;
   \   00000050   002091E5           LDR      R2,[R1, #+0]
    109          		ptcfgtop=ptcfg;
   \   00000054   000081E5           STR      R0,[R1, #+0]
    110          		ptcfg->next=ptcfg_1;
   \   00000058   042080E5           STR      R2,[R0, #+4]
    111          		ptcfg_1->prev=ptcfg;
   \   0000005C   000082E5           STR      R0,[R2, #+0]
    112          	}
    113          	patch_n++;
   \                     ??addPatchConfigList_0:
   \   00000060   0C009FE5           LDR      R0,??addPatchConfigList_1  ;; patch_n
   \   00000064   001090E5           LDR      R1,[R0, #+0]
   \   00000068   011081E2           ADD      R1,R1,#+1
   \   0000006C   001080E5           STR      R1,[R0, #+0]
    114          }
   \   00000070   0080BDE8           POP      {PC}             ;; return
   \                     ??addPatchConfigList_1:
   \   00000074   ........           DC32     patch_n
    115          
    116          //添加作者，版本等信息

   \                                 In segment CODE, align 4, keep-with-next
    117          void addToPatchInfo(char *pdata)
    118          {
   \                     addToPatchInfo:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    119          	PATCH_INFO *ptcinfo=malloc(sizeof(PATCH_INFO));
   \   00000008   BC00A0E3           MOV      R0,#+188
   \   0000000C   140000EF           SWI      +20
   \   00000010   0050A0E1           MOV      R5,R0
    120          	char *pp=pdata;
    121          	char *p1; //start
    122          	char *p2; //end
    123          	ptcinfo->patchName[0]=0;
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   0000C5E5           STRB     R0,[R5, #+0]
    124          	ptcinfo->patchID[0]=0;
   \   0000001C   8000C5E5           STRB     R0,[R5, #+128]
    125          	ptcinfo->info=0;
   \   00000020   B80085E5           STR      R0,[R5, #+184]
    126          	ptcinfo->author[0]=0;
   \   00000024   9800C5E5           STRB     R0,[R5, #+152]
    127          	ptcinfo->version[0]=0;
   \   00000028   9000C5E5           STRB     R0,[R5, #+144]
    128          	p1=gotoMyStrStart(pp);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000034   0060A0E1           MOV      R6,R0
    129          	p2=gotoMyStrEnd(pp);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    130          	strnCopyWithEnd(ptcinfo->patchName, p1, p2-p1);
   \   00000040   062040E0           SUB      R2,R0,R6
   \   00000044   0610A0E1           MOV      R1,R6
   \   00000048   0500A0E1           MOV      R0,R5
   \   0000004C   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    131          	if((pp=strstrInQuote(pdata, "ver="))||(pp=strstrInQuote(pdata, "version=")))
   \   00000050   5C119FE5           LDR      R1,??addToPatchInfo_0+0x8  ;; `?<Constant "ver=">`
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000005C   0070B0E1           MOVS     R7,R0
   \   00000060   0400001A           BNE      ??addToPatchInfo_1
   \   00000064   4C119FE5           LDR      R1,??addToPatchInfo_0+0xC  ;; `?<Constant "version=">`
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000070   0070B0E1           MOVS     R7,R0
   \   00000074   0800000A           BEQ      ??addToPatchInfo_2
    132          	{
    133          		p1=gotoMyStrStart(pp);
   \                     ??addToPatchInfo_1:
   \   00000078   0700A0E1           MOV      R0,R7
   \   0000007C   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000080   0060A0E1           MOV      R6,R0
    134          		p2=gotoMyStrEnd(pp);
   \   00000084   0700A0E1           MOV      R0,R7
   \   00000088   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    135          		strnCopyWithEnd(ptcinfo->version, p1, p2-p1);
   \   0000008C   062040E0           SUB      R2,R0,R6
   \   00000090   0610A0E1           MOV      R1,R6
   \   00000094   900085E2           ADD      R0,R5,#+144
   \   00000098   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    136          	}
    137          	if((pp=strstrInQuote(pdata, "cp="))||(pp=strstrInQuote(pdata, "copyright=")))
   \                     ??addToPatchInfo_2:
   \   0000009C   421F8FE2           ADR      R1,??addToPatchInfo_0  ;; "cp="
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000000A8   0070B0E1           MOVS     R7,R0
   \   000000AC   0400001A           BNE      ??addToPatchInfo_3
   \   000000B0   04119FE5           LDR      R1,??addToPatchInfo_0+0x10  ;; `?<Constant "copyright=">`
   \   000000B4   0400A0E1           MOV      R0,R4
   \   000000B8   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000000BC   0070B0E1           MOVS     R7,R0
   \   000000C0   0800000A           BEQ      ??addToPatchInfo_4
    138          	{
    139          		p1=gotoMyStrStart(pp);
   \                     ??addToPatchInfo_3:
   \   000000C4   0700A0E1           MOV      R0,R7
   \   000000C8   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   000000CC   0060A0E1           MOV      R6,R0
    140          		p2=gotoMyStrEnd(pp);
   \   000000D0   0700A0E1           MOV      R0,R7
   \   000000D4   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    141          		strnCopyWithEnd(ptcinfo->author, p1, p2-p1);
   \   000000D8   062040E0           SUB      R2,R0,R6
   \   000000DC   0610A0E1           MOV      R1,R6
   \   000000E0   980085E2           ADD      R0,R5,#+152
   \   000000E4   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    142          	}
    143          	if(pp=strstrInQuote(pdata, "id="))
   \                     ??addToPatchInfo_4:
   \   000000E8   301F8FE2           ADR      R1,??addToPatchInfo_0+0x4  ;; "id="
   \   000000EC   0400A0E1           MOV      R0,R4
   \   000000F0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000000F4   0070B0E1           MOVS     R7,R0
   \   000000F8   0700000A           BEQ      ??addToPatchInfo_5
    144          	{
    145          		p1=gotoMyStrStart(pp);
   \   000000FC   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000100   0060A0E1           MOV      R6,R0
    146          		p2=gotoMyStrEnd(pp);
   \   00000104   0700A0E1           MOV      R0,R7
   \   00000108   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    147          		strnCopyWithEnd(ptcinfo->patchID, p1, p2-p1);
   \   0000010C   062040E0           SUB      R2,R0,R6
   \   00000110   0610A0E1           MOV      R1,R6
   \   00000114   800085E2           ADD      R0,R5,#+128
   \   00000118   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    148          	}
    149          	if((pp=strstrInQuote(pdata, "mem="))||(pp=strstrInQuote(pdata, "memory="))) //指定ptc长度
   \                     ??addToPatchInfo_5:
   \   0000011C   9C109FE5           LDR      R1,??addToPatchInfo_0+0x14  ;; `?<Constant "mem=">`
   \   00000120   ........           LDR      R6,??DataTable4  ;; ptcfgtop
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000012C   000050E3           CMP      R0,#+0
   \   00000130   0400001A           BNE      ??addToPatchInfo_6
   \   00000134   88109FE5           LDR      R1,??addToPatchInfo_0+0x18  ;; `?<Constant "memory=">`
   \   00000138   0400A0E1           MOV      R0,R4
   \   0000013C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000140   000050E3           CMP      R0,#+0
   \   00000144   0800000A           BEQ      ??addToPatchInfo_7
    150          	{
    151          		pp=gotoRealPos(pp);
   \                     ??addToPatchInfo_6:
   \   00000148   ........           _BLF     gotoRealPos,??gotoRealPos??rA
    152          		str2num(pp, &ptcfgtop->memory, 0,0, 0);
   \   0000014C   0010A0E3           MOV      R1,#+0
   \   00000150   02002DE9           PUSH     {R1}
   \   00000154   0120A0E1           MOV      R2,R1
   \   00000158   001096E5           LDR      R1,[R6, #+0]
   \   0000015C   0030A0E3           MOV      R3,#+0
   \   00000160   141081E2           ADD      R1,R1,#+20
   \   00000164   ........           _BLF     str2num,??str2num??rA
   \   00000168   04D08DE2           ADD      SP,SP,#+4
    153          	}
    154          	if((pp=strstrInQuote(pdata, STR_DISPF1))||(pp=strstrInQuote(pdata, STR_DISPF2)))
   \                     ??addToPatchInfo_7:
   \   0000016C   54109FE5           LDR      R1,??addToPatchInfo_0+0x1C  ;; STR_DISPF1
   \   00000170   0400A0E1           MOV      R0,R4
   \   00000174   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000178   000050E3           CMP      R0,#+0
   \   0000017C   0400001A           BNE      ??addToPatchInfo_8
   \   00000180   44109FE5           LDR      R1,??addToPatchInfo_0+0x20  ;; STR_DISPF2
   \   00000184   0400A0E1           MOV      R0,R4
   \   00000188   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000018C   000050E3           CMP      R0,#+0
   \   00000190   0200000A           BEQ      ??addToPatchInfo_9
    155          	{
    156          		ptcfgtop->disableProfile=1;
   \                     ??addToPatchInfo_8:
   \   00000194   000096E5           LDR      R0,[R6, #+0]
   \   00000198   0110A0E3           MOV      R1,#+1
   \   0000019C   101080E5           STR      R1,[R0, #+16]
    157          	}
    158          	ptcfgtop->patchInfo=ptcinfo;
   \                     ??addToPatchInfo_9:
   \   000001A0   000096E5           LDR      R0,[R6, #+0]
   \   000001A4   1C5080E5           STR      R5,[R0, #+28]
    159          }
   \   000001A8   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??addToPatchInfo_0:
   \   000001AC   63703D00           DC8      "cp="
   \   000001B0   69643D00           DC8      "id="
   \   000001B4   ........           DC32     `?<Constant "ver=">`
   \   000001B8   ........           DC32     `?<Constant "version=">`
   \   000001BC   ........           DC32     `?<Constant "copyright=">`
   \   000001C0   ........           DC32     `?<Constant "mem=">`
   \   000001C4   ........           DC32     `?<Constant "memory=">`
   \   000001C8   ........           DC32     STR_DISPF1
   \   000001CC   ........           DC32     STR_DISPF2
    160          
    161          //将预置的选项添加到条目

   \                                 In segment CODE, align 4, keep-with-next
    162          void addPreItemToData(PREPARE_DATA *preData, PREPARE_ITEM *prepareItem)
    163          {
    164          	if(!preData->prepareItem)
   \                     addPreItemToData:
   \   00000000   202090E5           LDR      R2,[R0, #+32]
   \   00000004   000052E3           CMP      R2,#+0
    165          		preData->prepareItem=prepareItem;
   \   00000008   20108005           STREQ    R1,[R0, #+32]
   \   0000000C   1EFF2F01           BXEQ     LR
    166          	else
    167          	{
    168          		PREPARE_ITEM *preItem=preData->prepareItem;
   \   00000010   040092E5           LDR      R0,[R2, #+4]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0300000A           BEQ      ??addPreItemToData_0
    169          		while(preItem->next) //goto last
    170          			preItem=preItem->next;
   \                     ??addPreItemToData_1:
   \   0000001C   042092E5           LDR      R2,[R2, #+4]
   \   00000020   040092E5           LDR      R0,[R2, #+4]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   FBFFFF1A           BNE      ??addPreItemToData_1
    171          		preItem->next=prepareItem;
   \                     ??addPreItemToData_0:
   \   0000002C   041082E5           STR      R1,[R2, #+4]
    172          		prepareItem->prev=preItem;
   \   00000030   002081E5           STR      R2,[R1, #+0]
    173          	}
    174          }
   \   00000034   1EFF2FE1           BX       LR               ;; return
    175          
    176          //将条目添加到条目链表

   \                                 In segment CODE, align 4, keep-with-next
    177          void addItemToConfig(void *item, PATCH_SUBMENU *userPoint, int type, int bytePos, char *name)
    178          {
   \                     addItemToConfig:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   1C909DE5           LDR      R9,[SP, #+28]
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   0270A0E1           MOV      R7,R2
   \   00000014   0380A0E1           MOV      R8,R3
    179          	PATCH_ITEM *patchItem=malloc(sizeof(PATCH_ITEM));
   \   00000018   9400A0E3           MOV      R0,#+148
   \   0000001C   140000EF           SWI      +20
   \   00000020   0050A0E1           MOV      R5,R0
    180          	patchItem->prev=0;
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   000085E5           STR      R0,[R5, #+0]
    181          	patchItem->next=0;
   \   0000002C   040085E5           STR      R0,[R5, #+4]
    182          	patchItem->bytePos=bytePos;
   \   00000030   088085E5           STR      R8,[R5, #+8]
    183          	if(name)
   \   00000034   000059E3           CMP      R9,#+0
   \   00000038   0C00000A           BEQ      ??addItemToConfig_0
    184          	{
    185          		cleanStrByChr(name, '`');
   \   0000003C   6010A0E3           MOV      R1,#+96
   \   00000040   0900A0E1           MOV      R0,R9
   \   00000044   ........           _BLF     cleanStrByChr,??cleanStrByChr??rA
    186          		cleanStrByChr(name, 0xA);
   \   00000048   0A10A0E3           MOV      R1,#+10
   \   0000004C   0900A0E1           MOV      R0,R9
   \   00000050   ........           _BLF     cleanStrByChr,??cleanStrByChr??rA
    187          		cleanStrByChr(name, 0xD);
   \   00000054   0D10A0E3           MOV      R1,#+13
   \   00000058   0900A0E1           MOV      R0,R9
   \   0000005C   ........           _BLF     cleanStrByChr,??cleanStrByChr??rA
    188          		strcpy(patchItem->itemName, name);
   \   00000060   0910A0E1           MOV      R1,R9
   \   00000064   0C0085E2           ADD      R0,R5,#+12
   \   00000068   1A0000EF           SWI      +26
   \   0000006C   000000EA           B        ??addItemToConfig_1
    189          	}
    190          	else
    191          		patchItem->itemName[0]=0;
   \                     ??addItemToConfig_0:
   \   00000070   0C00C5E5           STRB     R0,[R5, #+12]
    192          	patchItem->itemType=type;
   \                     ??addItemToConfig_1:
   \   00000074   8C7085E5           STR      R7,[R5, #+140]
    193          	patchItem->itemData=item;
   \   00000078   906085E5           STR      R6,[R5, #+144]
    194          	if(!userPoint->item)
   \   0000007C   800094E5           LDR      R0,[R4, #+128]
   \   00000080   000050E3           CMP      R0,#+0
    195          			userPoint->item=patchItem;
   \   00000084   80508405           STREQ    R5,[R4, #+128]
   \   00000088   F083BD08           POPEQ    {R4-R9,PC}
    196          	else
    197          	{
    198          		PATCH_ITEM *pItem=userPoint->item;
   \   0000008C   041090E5           LDR      R1,[R0, #+4]
   \   00000090   000051E3           CMP      R1,#+0
   \   00000094   0300000A           BEQ      ??addItemToConfig_2
    199          		while(pItem->next) //goto last
    200          			pItem=pItem->next;
   \                     ??addItemToConfig_3:
   \   00000098   040090E5           LDR      R0,[R0, #+4]
   \   0000009C   041090E5           LDR      R1,[R0, #+4]
   \   000000A0   000051E3           CMP      R1,#+0
   \   000000A4   FBFFFF1A           BNE      ??addItemToConfig_3
    201          		pItem->next=patchItem;
   \                     ??addItemToConfig_2:
   \   000000A8   045080E5           STR      R5,[R0, #+4]
    202          		patchItem->prev=pItem;
   \   000000AC   000085E5           STR      R0,[R5, #+0]
    203          	}
    204          }
   \   000000B0   F083BDE8           POP      {R4-R9,PC}       ;; return
    205          
    206          
    207          //解析预置的选项，及其对应的数据，并添加到条目链表

   \                                 In segment CODE, align 4, keep-with-next
    208          void addPrepareData(char *pdata)
    209          {
   \                     addPrepareData:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
    210          	char *p=pdata;
    211          	char *pp;
    212          	char *p1;
    213          	char *p2;
    214          	char *p3=gotoQuoteEnd(p);
    215          	PREPARE_DATA *preData=malloc(sizeof(PREPARE_DATA));
    216          	preData->useAs[0]=0;
   \   00000004   0050A0E3           MOV      R5,#+0
   \   00000008   0080A0E1           MOV      R8,R0
   \   0000000C   ........           _BLF     gotoQuoteEnd,??gotoQuoteEnd??rA
   \   00000010   0060A0E1           MOV      R6,R0
   \   00000014   2400A0E3           MOV      R0,#+36
   \   00000018   140000EF           SWI      +20
   \   0000001C   0040A0E1           MOV      R4,R0
   \   00000020   0050C4E5           STRB     R5,[R4, #+0]
    217          	preData->prepareItem=0;
   \   00000024   205084E5           STR      R5,[R4, #+32]
    218          	p1=gotoMyStrStart(p);
   \   00000028   0800A0E1           MOV      R0,R8
   \   0000002C   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000030   0070A0E1           MOV      R7,R0
    219          	p2=gotoMyStrEnd(p);
   \   00000034   0800A0E1           MOV      R0,R8
   \   00000038   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
   \   0000003C   0090A0E1           MOV      R9,R0
    220          	strnCopyWithEnd(preData->useAs, p1, p2-p1);
   \   00000040   072049E0           SUB      R2,R9,R7
   \   00000044   0710A0E1           MOV      R1,R7
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    221          	p=p2+1;
   \   00000050   017089E2           ADD      R7,R9,#+1
    222          	while((p<p3)&&(pp=gotoRealPos(p))&&(pp<p3)&&(p1=gotoMyStrStart(pp)))
   \                     ??addPrepareData_0:
   \   00000054   060057E1           CMP      R7,R6
   \   00000058   3800002A           BCS      ??addPrepareData_1
   \   0000005C   0700A0E1           MOV      R0,R7
   \   00000060   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000064   0090B0E1           MOVS     R9,R0
   \   00000068   3400000A           BEQ      ??addPrepareData_1
   \   0000006C   060059E1           CMP      R9,R6
   \   00000070   3200002A           BCS      ??addPrepareData_1
   \   00000074   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000078   0070B0E1           MOVS     R7,R0
   \   0000007C   2F00000A           BEQ      ??addPrepareData_1
    223          	{
    224          		PREPARE_ITEM *prepareItem=malloc(sizeof(PREPARE_ITEM));
   \   00000080   8C00A0E3           MOV      R0,#+140
   \   00000084   140000EF           SWI      +20
   \   00000088   0080A0E1           MOV      R8,R0
    225          		prepareItem->next=0;
   \   0000008C   045088E5           STR      R5,[R8, #+4]
    226          		prepareItem->prev=0;
   \   00000090   005088E5           STR      R5,[R8, #+0]
    227          		prepareItem->itemName[0]=0;
   \   00000094   0850C8E5           STRB     R5,[R8, #+8]
    228          		prepareItem->data=0;
   \   00000098   8850C8E5           STRB     R5,[R8, #+136]
    229          		if(*pp=='`')
   \   0000009C   0000D9E5           LDRB     R0,[R9, #+0]
   \   000000A0   600050E3           CMP      R0,#+96
   \   000000A4   0200001A           BNE      ??addPrepareData_2
    230          			p2=gotoMyStrEnd(pp);
   \   000000A8   0900A0E1           MOV      R0,R9
   \   000000AC   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
   \   000000B0   020000EA           B        ??addPrepareData_3
    231          		else
    232          			p2=gotoStringEndByChr(pp, '=');
   \                     ??addPrepareData_2:
   \   000000B4   3D10A0E3           MOV      R1,#+61
   \   000000B8   0900A0E1           MOV      R0,R9
   \   000000BC   ........           _BLF     gotoStringEndByChr,??gotoStringEndByChr??rA
   \                     ??addPrepareData_3:
   \   000000C0   0090A0E1           MOV      R9,R0
    233          		strnCopyWithEnd(prepareItem->itemName, p1, p2-p1);
   \   000000C4   072049E0           SUB      R2,R9,R7
   \   000000C8   0710A0E1           MOV      R1,R7
   \   000000CC   080088E2           ADD      R0,R8,#+8
   \   000000D0   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    234          		cleanStrByChr(prepareItem->itemName, '`'); //可能是不标准的补丁格式
   \   000000D4   6010A0E3           MOV      R1,#+96
   \   000000D8   080088E2           ADD      R0,R8,#+8
   \   000000DC   ........           _BLF     cleanStrByChr,??cleanStrByChr??rA
    235          		if(*p2=='`')
   \   000000E0   0000D9E5           LDRB     R0,[R9, #+0]
    236          			p=p2+2;
    237          		else
    238          		{
    239          			p=p2+1;
    240          		}
    241          		str2num_char(p, &prepareItem->data, 0xff, 0, 0);
   \   000000E4   FF20A0E3           MOV      R2,#+255
   \   000000E8   881088E2           ADD      R1,R8,#+136
   \   000000EC   600050E3           CMP      R0,#+96
   \   000000F0   0000A0E3           MOV      R0,#+0
   \   000000F4   01002DE9           PUSH     {R0}
   \   000000F8   02708902           ADDEQ    R7,R9,#+2
   \   000000FC   01708912           ADDNE    R7,R9,#+1
   \   00000100   0030A0E1           MOV      R3,R0
   \   00000104   0700A0E1           MOV      R0,R7
   \   00000108   ........           _BLF     str2num_char,??str2num_char??rA
    242          		addPreItemToData(preData, prepareItem);
   \   0000010C   0810A0E1           MOV      R1,R8
   \   00000110   0400A0E1           MOV      R0,R4
   \   00000114   ........           BL       addPreItemToData
   \   00000118   04D08DE2           ADD      SP,SP,#+4
    243          		while(*p)
   \                     ??addPrepareData_4:
   \   0000011C   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   CAFFFF0A           BEQ      ??addPrepareData_0
    244          		{
    245          			if(*p<=X_CHAR||*p=='`')
   \   00000128   210050E3           CMP      R0,#+33
   \   0000012C   C8FFFF3A           BCC      ??addPrepareData_0
   \   00000130   600050E3           CMP      R0,#+96
   \   00000134   C6FFFF0A           BEQ      ??addPrepareData_0
    246          				break;
    247          			p++;
   \   00000138   017087E2           ADD      R7,R7,#+1
   \   0000013C   F6FFFFEA           B        ??addPrepareData_4
    248          		}
    249          		//p=gotoStringEndByChr(p, X_CHAR);
    250          	}
    251          	addItemToConfig(preData, &ptcfgtop->mainitem, TYPE_PRE, 0, NULL);
   \                     ??addPrepareData_1:
   \   00000140   0000A0E3           MOV      R0,#+0
   \   00000144   01002DE9           PUSH     {R0}
   \   00000148   0030A0E1           MOV      R3,R0
   \   0000014C   0020A0E1           MOV      R2,R0
   \   00000150   ........           LDR      R0,??DataTable4  ;; ptcfgtop
   \   00000154   000090E5           LDR      R0,[R0, #+0]
   \   00000158   201080E2           ADD      R1,R0,#+32
   \   0000015C   0400A0E1           MOV      R0,R4
   \   00000160   ........           BL       addItemToConfig
    252          }
   \   00000164   F183BDE8           POP      {R0,R4-R9,PC}    ;; return
    253          
    254          //从预置的选项条目中读取数据到一个CBOX，即选择项

   \                                 In segment CODE, align 4, keep-with-next
    255          void addPreDataToCBoxItem(DATA_CBOX *cbox, char *p)
    256          {
   \                     addPreDataToCBoxItem:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0100A0E1           MOV      R0,R1
    257          	//CBOX_ITEM *cboxitem=cbox->cboxitem;
    258          	char *p1;
    259          	char *p2;
    260          	PATCH_ITEM *ptcitem=ptcfgtop->mainitem.item;
   \   0000000C   ........           LDR      R1,??DataTable4  ;; ptcfgtop
   \   00000010   001091E5           LDR      R1,[R1, #+0]
   \   00000014   A05091E5           LDR      R5,[R1, #+160]
    261          	PREPARE_ITEM *preitem=0;
    262          	p=gotoRealPos(p);
   \   00000018   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000001C   0060A0E1           MOV      R6,R0
    263          	p1=gotoMyStrStart(p);
   \   00000020   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000024   0070A0E1           MOV      R7,R0
    264          	p2=gotoMyStrEnd(p);
   \   00000028   0600A0E1           MOV      R0,R6
   \   0000002C   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
   \   00000030   0060A0E1           MOV      R6,R0
   \   00000034   000000EA           B        ??addPreDataToCBoxItem_0
    265          	while(ptcitem)
    266          	{
    267          		if(ptcitem->itemType==TYPE_PRE)
    268          		{
    269          			PREPARE_DATA *preData=ptcitem->itemData;
    270          			if(!strncmpNoCase(preData->useAs, p1, p2-p1))
    271          			{
    272          				preitem=preData->prepareItem;
    273          				break;
    274          			}
    275          		}
    276          		ptcitem=ptcitem->next;
   \                     ??addPreDataToCBoxItem_1:
   \   00000038   045095E5           LDR      R5,[R5, #+4]
   \                     ??addPreDataToCBoxItem_0:
   \   0000003C   000055E3           CMP      R5,#+0
   \   00000040   F081BD08           POPEQ    {R4-R8,PC}
   \   00000044   8C0095E5           LDR      R0,[R5, #+140]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   F9FFFF1A           BNE      ??addPreDataToCBoxItem_1
   \   00000050   908095E5           LDR      R8,[R5, #+144]
   \   00000054   072046E0           SUB      R2,R6,R7
   \   00000058   0710A0E1           MOV      R1,R7
   \   0000005C   0800A0E1           MOV      R0,R8
   \   00000060   ........           _BLF     strncmpNoCase,??strncmpNoCase??rA
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   F2FFFF1A           BNE      ??addPreDataToCBoxItem_1
   \   0000006C   205098E5           LDR      R5,[R8, #+32]
   \   00000070   090000EA           B        ??addPreDataToCBoxItem_2
    277          	}
    278          	while(preitem)
    279          	{
    280          		CBOX_ITEM *tcitem=malloc(sizeof(CBOX_ITEM));
    281          		tcitem->next=0;
    282          		tcitem->prev=0;
    283          		tcitem->data=preitem->data;
    284          		strcpy(tcitem->name, preitem->itemName);
    285          		if(!cbox->cboxitem)
    286          			cbox->cboxitem=tcitem;
    287          		else
    288          		{
    289          			CBOX_ITEM *cbitem=cbox->cboxitem;
   \                     ??addPreDataToCBoxItem_3:
   \   00000074   041090E5           LDR      R1,[R0, #+4]
   \   00000078   000051E3           CMP      R1,#+0
   \   0000007C   0300000A           BEQ      ??addPreDataToCBoxItem_4
    290          			while(cbitem->next)
    291          				cbitem=cbitem->next;
   \                     ??addPreDataToCBoxItem_5:
   \   00000080   040090E5           LDR      R0,[R0, #+4]
   \   00000084   041090E5           LDR      R1,[R0, #+4]
   \   00000088   000051E3           CMP      R1,#+0
   \   0000008C   FBFFFF1A           BNE      ??addPreDataToCBoxItem_5
    292          			cbitem->next=tcitem;
   \                     ??addPreDataToCBoxItem_4:
   \   00000090   046080E5           STR      R6,[R0, #+4]
    293          			tcitem->prev=cbitem;
   \   00000094   000086E5           STR      R0,[R6, #+0]
    294          		}
    295          		preitem=preitem->next;
   \                     ??addPreDataToCBoxItem_6:
   \   00000098   045095E5           LDR      R5,[R5, #+4]
   \                     ??addPreDataToCBoxItem_2:
   \   0000009C   000055E3           CMP      R5,#+0
   \   000000A0   F081BD08           POPEQ    {R4-R8,PC}
   \   000000A4   8C00A0E3           MOV      R0,#+140
   \   000000A8   140000EF           SWI      +20
   \   000000AC   0060A0E1           MOV      R6,R0
   \   000000B0   0000A0E3           MOV      R0,#+0
   \   000000B4   040086E5           STR      R0,[R6, #+4]
   \   000000B8   000086E5           STR      R0,[R6, #+0]
   \   000000BC   8800D5E5           LDRB     R0,[R5, #+136]
   \   000000C0   081085E2           ADD      R1,R5,#+8
   \   000000C4   8800C6E5           STRB     R0,[R6, #+136]
   \   000000C8   080086E2           ADD      R0,R6,#+8
   \   000000CC   1A0000EF           SWI      +26
   \   000000D0   040094E5           LDR      R0,[R4, #+4]
   \   000000D4   000050E3           CMP      R0,#+0
   \   000000D8   E5FFFF1A           BNE      ??addPreDataToCBoxItem_3
   \   000000DC   046084E5           STR      R6,[R4, #+4]
   \   000000E0   ECFFFFEA           B        ??addPreDataToCBoxItem_6
    296          	}
    297          }
    298          
    299          //将选择项条目添加到选择项链表

   \                                 In segment CODE, align 4, keep-with-next
    300          void addItemToCBox(DATA_CBOX *cbox, CBOX_ITEM *cboxitem)
    301          {
    302          	if(!cbox->cboxitem)
   \                     addItemToCBox:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \   00000004   000052E3           CMP      R2,#+0
    303          		cbox->cboxitem=cboxitem;
   \   00000008   04108005           STREQ    R1,[R0, #+4]
   \   0000000C   1EFF2F01           BXEQ     LR
    304          	else
    305          	{
    306          		CBOX_ITEM *item=cbox->cboxitem;
   \   00000010   040092E5           LDR      R0,[R2, #+4]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0300000A           BEQ      ??addItemToCBox_0
    307          		while(item->next)
    308          			item=item->next;
   \                     ??addItemToCBox_1:
   \   0000001C   042092E5           LDR      R2,[R2, #+4]
   \   00000020   040092E5           LDR      R0,[R2, #+4]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   FBFFFF1A           BNE      ??addItemToCBox_1
    309          		item->next=cboxitem;
   \                     ??addItemToCBox_0:
   \   0000002C   041082E5           STR      R1,[R2, #+4]
    310          		cboxitem->prev=item;
   \   00000030   002081E5           STR      R2,[R1, #+0]
    311          	}
    312          }
   \   00000034   1EFF2FE1           BX       LR               ;; return
    313          
    314          //没有使用预置选择项条目，而直接在括号内读取选择项条目

   \                                 In segment CODE, align 4, keep-with-next
    315          void cboxItemColon(char *pdata, DATA_CBOX *cbox)
    316          {
   \                     cboxItemColon:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   \   00000008   0070A0E1           MOV      R7,R0
    317          	//char *p=pdata;
    318          	char *pp=pdata;
    319          	char *p1;
    320          	char *p2;
    321          	char *p3=gotoQuoteEnd(pdata);
   \   0000000C   ........           _BLF     gotoQuoteEnd,??gotoQuoteEnd??rA
   \   00000010   0050A0E1           MOV      R5,R0
    322          	if(*pp=='`')
   \   00000014   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000018   600050E3           CMP      R0,#+96
    323          		pp++;
   \   0000001C   01708702           ADDEQ    R7,R7,#+1
    324          	pp=gotoRealPos(pp);
   \                     ??cboxItemColon_0:
   \   00000020   0700A0E1           MOV      R0,R7
   \   00000024   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000028   0070A0E1           MOV      R7,R0
    325          	while(*pp && pp<p3 )
   \   0000002C   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   F081BD08           POPEQ    {R4-R8,PC}
   \   00000038   050057E1           CMP      R7,R5
   \   0000003C   F081BD28           POPCS    {R4-R8,PC}
    326          	{	
    327          		CBOX_ITEM *cboxitem=malloc(sizeof(CBOX_ITEM));
   \   00000040   8C00A0E3           MOV      R0,#+140
   \   00000044   140000EF           SWI      +20
   \   00000048   0060A0E1           MOV      R6,R0
    328          		cboxitem->data=0;
   \   0000004C   0000A0E3           MOV      R0,#+0
   \   00000050   8800C6E5           STRB     R0,[R6, #+136]
    329          		cboxitem->name[0]=0;
   \   00000054   0800C6E5           STRB     R0,[R6, #+8]
    330          		cboxitem->next=0;
   \   00000058   040086E5           STR      R0,[R6, #+4]
    331          		cboxitem->prev=0;
   \   0000005C   000086E5           STR      R0,[R6, #+0]
    332          		p1=gotoMyStrStart(pp);
   \   00000060   0700A0E1           MOV      R0,R7
   \   00000064   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000068   0080A0E1           MOV      R8,R0
    333          		if(*pp=='`')
   \   0000006C   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000070   600050E3           CMP      R0,#+96
   \   00000074   0200001A           BNE      ??cboxItemColon_1
    334          			p2=gotoMyStrEnd(pp);
   \   00000078   0700A0E1           MOV      R0,R7
   \   0000007C   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
   \   00000080   020000EA           B        ??cboxItemColon_2
    335          		else
    336          			p2=gotoStringEndByChr(pp, '=');
   \                     ??cboxItemColon_1:
   \   00000084   3D10A0E3           MOV      R1,#+61
   \   00000088   0700A0E1           MOV      R0,R7
   \   0000008C   ........           _BLF     gotoStringEndByChr,??gotoStringEndByChr??rA
   \                     ??cboxItemColon_2:
   \   00000090   0070A0E1           MOV      R7,R0
    337          		strnCopyWithEnd(cboxitem->name, p1, p2-p1);
   \   00000094   082047E0           SUB      R2,R7,R8
   \   00000098   0810A0E1           MOV      R1,R8
   \   0000009C   080086E2           ADD      R0,R6,#+8
   \   000000A0   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
   \   000000A4   000000EA           B        ??cboxItemColon_3
    338          		while(*p2)
    339          		{
    340          			if(*p2=='=')
    341          				break;
    342          			p2++;
   \                     ??cboxItemColon_4:
   \   000000A8   017087E2           ADD      R7,R7,#+1
   \                     ??cboxItemColon_3:
   \   000000AC   0000D7E5           LDRB     R0,[R7, #+0]
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   3D005013           CMPNE    R0,#+61
   \   000000B8   FAFFFF1A           BNE      ??cboxItemColon_4
    343          		}
    344          		p2=gotoRealPos(p2+1);
   \   000000BC   010087E2           ADD      R0,R7,#+1
   \   000000C0   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000000C4   0070A0E1           MOV      R7,R0
    345          		str2num_char(p2, &cboxitem->data, 0xff, 0, 0);
   \   000000C8   0000A0E3           MOV      R0,#+0
   \   000000CC   01002DE9           PUSH     {R0}
   \   000000D0   0030A0E3           MOV      R3,#+0
   \   000000D4   FF20A0E3           MOV      R2,#+255
   \   000000D8   881086E2           ADD      R1,R6,#+136
   \   000000DC   0700A0E1           MOV      R0,R7
   \   000000E0   ........           _BLF     str2num_char,??str2num_char??rA
    346          		addItemToCBox(cbox, cboxitem);
   \   000000E4   0610A0E1           MOV      R1,R6
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   ........           BL       addItemToCBox
    347          		pp=p2;
   \   000000F0   04D08DE2           ADD      SP,SP,#+4
    348          		while(*pp)
   \                     ??cboxItemColon_5:
   \   000000F4   0000D7E5           LDRB     R0,[R7, #+0]
   \   000000F8   000050E3           CMP      R0,#+0
   \   000000FC   C7FFFF0A           BEQ      ??cboxItemColon_0
    349          		{
    350          			if(*pp<=X_CHAR||*pp=='`')
   \   00000100   210050E3           CMP      R0,#+33
   \   00000104   C5FFFF3A           BCC      ??cboxItemColon_0
   \   00000108   600050E3           CMP      R0,#+96
   \   0000010C   C3FFFF0A           BEQ      ??cboxItemColon_0
    351          				break;
    352          			pp++;
   \   00000110   017087E2           ADD      R7,R7,#+1
   \   00000114   F6FFFFEA           B        ??cboxItemColon_5
    353          		}
    354          		pp=gotoRealPos(pp);
    355          	}
    356          }
    357          
    358          

   \                                 In segment CODE, align 4, keep-with-next
    359          int isThatItem(char *p)
    360          {
   \                     isThatItem:
   \   00000000   000000EA           B        ??isThatItem_0
    361          	while(*p)
    362          	{
    363          		if(*p>X_CHAR)
    364          		{
    365          			if(*p=='{')
    366          				return 1;
    367          			else
    368          				return 0;
    369          		}
    370          		p--;
   \                     ??isThatItem_1:
   \   00000004   010040E2           SUB      R0,R0,#+1
   \                     ??isThatItem_0:
   \   00000008   0010D0E5           LDRB     R1,[R0, #+0]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0400000A           BEQ      ??isThatItem_2
   \   00000014   210051E3           CMP      R1,#+33
   \   00000018   F9FFFF3A           BCC      ??isThatItem_1
   \   0000001C   7B0051E3           CMP      R1,#+123
   \   00000020   0100A003           MOVEQ    R0,#+1
   \   00000024   1EFF2F01           BXEQ     LR
    371          	}
    372          	return 0;
   \                     ??isThatItem_2:
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   1EFF2FE1           BX       LR               ;; return
    373          }
    374          

   \                                 In segment CODE, align 4, keep-with-next
    375          PATCH_TP *findTemplate(PTC_CONFIG *ptcfg, char *p)
    376          {
   \                     findTemplate:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    377          	PATCH_ITEM *pitem;
    378          	if(!ptcfg)
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0100001A           BNE      ??findTemplate_0
    379          		return 0;
   \                     ??findTemplate_1:
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   7080BDE8           POP      {R4-R6,PC}
    380          	pitem=ptcfg->mainitem.item;
   \                     ??findTemplate_0:
   \   00000018   A05090E5           LDR      R5,[R0, #+160]
   \   0000001C   000000EA           B        ??findTemplate_2
    381          	while(pitem)
    382          	{
    383          		if(pitem->itemType==TYPE_TP)
    384          		{
    385          			PATCH_TP *tpl=(PATCH_TP *)pitem->itemData;
    386          			if(!strncmpNoCase(tpl->useAs, p, strlen(p)))
    387          				return tpl;
    388          		}
    389          		pitem=pitem->next;
   \                     ??findTemplate_3:
   \   00000020   045095E5           LDR      R5,[R5, #+4]
   \                     ??findTemplate_2:
   \   00000024   000055E3           CMP      R5,#+0
   \   00000028   F8FFFF0A           BEQ      ??findTemplate_1
   \   0000002C   8C0095E5           LDR      R0,[R5, #+140]
   \   00000030   130050E3           CMP      R0,#+19
   \   00000034   F9FFFF1A           BNE      ??findTemplate_3
   \   00000038   906095E5           LDR      R6,[R5, #+144]
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   1B0000EF           SWI      +27
   \   00000044   0020A0E1           MOV      R2,R0
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   0600A0E1           MOV      R0,R6
   \   00000050   ........           _BLF     strncmpNoCase,??strncmpNoCase??rA
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   F0FFFF1A           BNE      ??findTemplate_3
   \   0000005C   0600A0E1           MOV      R0,R6
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
    390          	}
    391          	return 0;
    392          }

   \                                 In segment CODE, align 4, keep-with-next
    393          int isCurrectItem(char *p)
    394          {
   \                     isCurrectItem:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    395          	char *s=p;
   \   00000008   000000EA           B        ??isCurrectItem_0
    396          	while(*s)
    397          	{
    398          		if(*s=='{')
    399          		{
    400          			char *pp=s+1;
    401          			//int i=0;
    402          			pp=gotoRealPos(pp);
    403          			pp=strchrInQuote(pp, ' ')+1;
    404          			pp=gotoRealPos(pp);
    405          			pp=strchrInQuote(pp, ' ');
    406          			while(*pp)
    407          			{
    408          				if(pp==p)
    409          					return 1;
    410          				if(*pp<=' ')
    411          					pp++;
    412          				else
    413          					return 0;
    414          			}
    415          			return 0;
    416          		}
    417          		s--;
   \                     ??isCurrectItem_1:
   \   0000000C   010040E2           SUB      R0,R0,#+1
   \                     ??isCurrectItem_0:
   \   00000010   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000014   000051E3           CMP      R1,#+0
   \   00000018   1200000A           BEQ      ??isCurrectItem_2
   \   0000001C   7B0051E3           CMP      R1,#+123
   \   00000020   F9FFFF1A           BNE      ??isCurrectItem_1
   \   00000024   010080E2           ADD      R0,R0,#+1
   \   00000028   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000002C   2010A0E3           MOV      R1,#+32
   \   00000030   ........           _BLF     strchrInQuote,??strchrInQuote??rA
   \   00000034   010080E2           ADD      R0,R0,#+1
   \   00000038   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000003C   2010A0E3           MOV      R1,#+32
   \   00000040   ........           _BLF     strchrInQuote,??strchrInQuote??rA
   \                     ??isCurrectItem_3:
   \   00000044   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000048   000051E3           CMP      R1,#+0
   \   0000004C   0500000A           BEQ      ??isCurrectItem_2
   \   00000050   040050E1           CMP      R0,R4
   \   00000054   0100A003           MOVEQ    R0,#+1
   \   00000058   1080BD08           POPEQ    {R4,PC}
   \   0000005C   ........           LDRB     R1,[R0], #+1
   \   00000060   210051E3           CMP      R1,#+33
   \   00000064   F6FFFF3A           BCC      ??isCurrectItem_3
   \                     ??isCurrectItem_2:
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   1080BDE8           POP      {R4,PC}          ;; return
    418          	}
    419          	return 0;
    420          }
    421          
    422          void subMenuCopy(PATCH_SUBMENU *sbmdst, PATCH_SUBMENU *sbmsrc, int byteBase);
    423          //解析选择项条目

   \                                 In segment CODE, align 4, keep-with-next
    424          void doItemJob(char *p, PATCH_SUBMENU *subMenu)
    425          {
   \                     doItemJob:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    426          
    427          	char *p1; //start
    428          	char *p2; //end
    429          	char *pp; //temp
    430          	char temp[128];
    431          	int bytePos=0;
    432          	if((p1=strstrInQuote(p, STR_CHKBOX1))||(p1=strstrInQuote(p, STR_CHKBOX2)))
   \   00000004   AC6B9FE5           LDR      R6,??doItemJob_0+0x8  ;; STR_VL1
   \   00000008   AC7B9FE5           LDR      R7,??doItemJob_0+0xC  ;; STR_VL
   \   0000000C   88D04DE2           SUB      SP,SP,#+136
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   00108DE5           STR      R1,[SP, #+0]
   \   00000020   981B9FE5           LDR      R1,??doItemJob_0+0x10  ;; STR_CHKBOX1
   \   00000024   0090A0E3           MOV      R9,#+0
   \   00000028   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000002C   0080B0E1           MOVS     R8,R0
   \   00000030   0400001A           BNE      ??doItemJob_1
   \   00000034   881B9FE5           LDR      R1,??doItemJob_0+0x14  ;; STR_CHKBOX2
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000040   0080B0E1           MOVS     R8,R0
   \   00000044   4600000A           BEQ      ??doItemJob_2
    433          	{
    434          		if(isCurrectItem(p1))
   \                     ??doItemJob_1:
   \   00000048   0800A0E1           MOV      R0,R8
   \   0000004C   ........           BL       isCurrectItem
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   4200000A           BEQ      ??doItemJob_2
    435          		{
    436          		DATA_CHECKBOX *checkbox=malloc(sizeof(DATA_CHECKBOX));
   \   00000058   0800A0E3           MOV      R0,#+8
   \   0000005C   140000EF           SWI      +20
   \   00000060   00A0A0E1           MOV      R10,R0
    437          		checkbox->bitPos=0;
   \   00000064   00908AE5           STR      R9,[R10, #+0]
    438          		checkbox->onoff=0;
   \   00000068   0490CAE5           STRB     R9,[R10, #+4]
    439          		pp=gotoRealPos(p1);
   \   0000006C   0800A0E1           MOV      R0,R8
   \   00000070   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000074   0090A0E1           MOV      R9,R0
    440          		p1=gotoMyStrStart(pp);
   \   00000078   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   0000007C   0080A0E1           MOV      R8,R0
    441          		p2=gotoMyStrEnd(pp);
   \   00000080   0900A0E1           MOV      R0,R9
   \   00000084   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    442          		strnCopyWithEnd(temp, p1, p2-p1);
   \   00000088   082040E0           SUB      R2,R0,R8
   \   0000008C   0810A0E1           MOV      R1,R8
   \   00000090   08008DE2           ADD      R0,SP,#+8
   \   00000094   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    443          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   00000098   0710A0E1           MOV      R1,R7
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0400001A           BNE      ??doItemJob_3
   \   000000AC   0610A0E1           MOV      R1,R6
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   0100000A           BEQ      ??doItemJob_4
    444          			checkbox->onoff=1;
   \                     ??doItemJob_3:
   \   000000C0   0100A0E3           MOV      R0,#+1
   \   000000C4   0400CAE5           STRB     R0,[R10, #+4]
    445          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_4:
   \   000000C8   010084E2           ADD      R0,R4,#+1
   \   000000CC   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000000D0   0040A0E1           MOV      R4,R0
    446          		str2num(pp, &bytePos, 0, 0, 0);
   \   000000D4   0000A0E3           MOV      R0,#+0
   \   000000D8   01002DE9           PUSH     {R0}
   \   000000DC   0030A0E3           MOV      R3,#+0
   \   000000E0   0020A0E1           MOV      R2,R0
   \   000000E4   04108DE2           ADD      R1,SP,#+4
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   ........           _BLF     str2num,??str2num??rA
   \   000000F0   04D08DE2           ADD      SP,SP,#+4
   \   000000F4   000000EA           B        ??doItemJob_5
    447          		while(*pp>X_CHAR)
    448          		{
    449          			if(*pp=='.')
    450          			{
    451          				pp++;
    452          				str2num(pp, &checkbox->bitPos, 8, 0, 0);
    453          				break;
    454          			}
    455          			pp++;
   \                     ??doItemJob_6:
   \   000000F8   014084E2           ADD      R4,R4,#+1
   \                     ??doItemJob_5:
   \   000000FC   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000100   210050E3           CMP      R0,#+33
   \   00000104   0900003A           BCC      ??doItemJob_7
   \   00000108   2E0050E3           CMP      R0,#+46
   \   0000010C   F9FFFF1A           BNE      ??doItemJob_6
   \   00000110   0000A0E3           MOV      R0,#+0
   \   00000114   01002DE9           PUSH     {R0}
   \   00000118   0030A0E3           MOV      R3,#+0
   \   0000011C   0820A0E3           MOV      R2,#+8
   \   00000120   0A10A0E1           MOV      R1,R10
   \   00000124   010084E2           ADD      R0,R4,#+1
   \   00000128   ........           _BLF     str2num,??str2num??rA
   \   0000012C   04D08DE2           ADD      SP,SP,#+4
    456          		}
    457          		addItemToConfig(checkbox, subMenu, TYPE_CHECKBOX, bytePos+ptcfgtop->offset, temp);
   \                     ??doItemJob_7:
   \   00000130   201F9FE5           LDR      R1,??doItemJob_8+0x4  ;; ptcfgtop
   \   00000134   08008DE2           ADD      R0,SP,#+8
   \   00000138   01002DE9           PUSH     {R0}
   \   0000013C   04009DE5           LDR      R0,[SP, #+4]
   \   00000140   001091E5           LDR      R1,[R1, #+0]
   \   00000144   0220A0E3           MOV      R2,#+2
   \   00000148   181091E5           LDR      R1,[R1, #+24]
   \   0000014C   003081E0           ADD      R3,R1,R0
   \   00000150   0510A0E1           MOV      R1,R5
   \   00000154   0A00A0E1           MOV      R0,R10
   \   00000158   ........           BL       addItemToConfig
    458          		return;
   \   0000015C   04D08DE2           ADD      SP,SP,#+4
   \   00000160   5B0500EA           B        ??doItemJob_9
    459          		}
    460          	}
    461          	if((p1=strstrInQuote(p, STR_XY2)))
   \                     ??doItemJob_2:
   \   00000164   F01E9FE5           LDR      R1,??doItemJob_8+0x8  ;; STR_XY2
   \   00000168   F0BE9FE5           LDR      R11,??doItemJob_8+0xC  ;; STR_Y
   \   0000016C   F08E9FE5           LDR      R8,??doItemJob_8+0x10  ;; STR_X
   \   00000170   0400A0E1           MOV      R0,R4
   \   00000174   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000178   04008DE5           STR      R0,[SP, #+4]
   \   0000017C   FFA0A0E3           MOV      R10,#+255
   \   00000180   F0AE8AE3           ORR      R10,R10,#0xF00
   \   00000184   000050E3           CMP      R0,#+0
   \   00000188   6600000A           BEQ      ??doItemJob_10
    462          	{
    463          		
    464          		if(isCurrectItem(p1))
   \   0000018C   ........           BL       isCurrectItem
   \   00000190   000050E3           CMP      R0,#+0
   \   00000194   6300000A           BEQ      ??doItemJob_10
    465          		{
    466          		DATA_POS *pos=malloc(sizeof(DATA_POS));
   \   00000198   0A00A0E3           MOV      R0,#+10
   \   0000019C   140000EF           SWI      +20
   \   000001A0   0060A0E1           MOV      R6,R0
    467          		pos->x=0;
   \   000001A4   B090C6E1           STRH     R9,[R6, #+0]
    468          		pos->off=0;
   \   000001A8   0290C6E5           STRB     R9,[R6, #+2]
    469          		pos->y=0;
   \   000001AC   B490C6E1           STRH     R9,[R6, #+4]
    470          		pos->w=0;
   \   000001B0   B690C6E1           STRH     R9,[R6, #+6]
    471          		pos->h=0;
   \   000001B4   B890C6E1           STRH     R9,[R6, #+8]
    472          		pp=gotoRealPos(p1);
   \   000001B8   04009DE5           LDR      R0,[SP, #+4]
   \   000001BC   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000001C0   0090A0E1           MOV      R9,R0
    473          		p1=gotoMyStrStart(pp);
   \   000001C4   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   000001C8   0070A0E1           MOV      R7,R0
    474          		p2=gotoMyStrEnd(pp);
   \   000001CC   0900A0E1           MOV      R0,R9
   \   000001D0   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    475          		strnCopyWithEnd(temp, p1, p2-p1);
   \   000001D4   072040E0           SUB      R2,R0,R7
   \   000001D8   0710A0E1           MOV      R1,R7
   \   000001DC   08008DE2           ADD      R0,SP,#+8
   \   000001E0   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    476          		if(p1=strstrInQuote(p, STR_X))
   \   000001E4   0810A0E1           MOV      R1,R8
   \   000001E8   0400A0E1           MOV      R0,R4
   \   000001EC   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000001F0   000050E3           CMP      R0,#+0
   \   000001F4   0900000A           BEQ      ??doItemJob_11
    477          		{
    478          			pp=gotoRealPos(p1);
   \   000001F8   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000001FC   0090A0E1           MOV      R9,R0
    479          			str2num_short(pp, &pos->x, 0xFFF, 0, 0);
   \   00000200   0000A0E3           MOV      R0,#+0
   \   00000204   01002DE9           PUSH     {R0}
   \   00000208   0030A0E3           MOV      R3,#+0
   \   0000020C   0A20A0E1           MOV      R2,R10
   \   00000210   0610A0E1           MOV      R1,R6
   \   00000214   0900A0E1           MOV      R0,R9
   \   00000218   ........           _BLF     str2num_short,??str2num_short??rA
   \   0000021C   04D08DE2           ADD      SP,SP,#+4
    480          		}
    481          		if(p1=strstrInQuote(p, STR_Y))
   \                     ??doItemJob_11:
   \   00000220   0B10A0E1           MOV      R1,R11
   \   00000224   0400A0E1           MOV      R0,R4
   \   00000228   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000022C   000050E3           CMP      R0,#+0
   \   00000230   0900000A           BEQ      ??doItemJob_12
    482          		{
    483          			pp=gotoRealPos(p1);
   \   00000234   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000238   0090A0E1           MOV      R9,R0
    484          			str2num_short(pp, &pos->y, 0xFFF, 0, 0);
   \   0000023C   0000A0E3           MOV      R0,#+0
   \   00000240   01002DE9           PUSH     {R0}
   \   00000244   0030A0E3           MOV      R3,#+0
   \   00000248   0A20A0E1           MOV      R2,R10
   \   0000024C   041086E2           ADD      R1,R6,#+4
   \   00000250   0900A0E1           MOV      R0,R9
   \   00000254   ........           _BLF     str2num_short,??str2num_short??rA
   \   00000258   04D08DE2           ADD      SP,SP,#+4
    485          		}
    486          		if(p1=strstrInQuote(p, STR_WIDTH))
   \                     ??doItemJob_12:
   \   0000025C   041E9FE5           LDR      R1,??doItemJob_8+0x14  ;; STR_WIDTH
   \   00000260   0400A0E1           MOV      R0,R4
   \   00000264   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000268   000050E3           CMP      R0,#+0
   \   0000026C   0900000A           BEQ      ??doItemJob_13
    487          		{
    488          			pp=gotoRealPos(p1);
   \   00000270   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000274   0090A0E1           MOV      R9,R0
    489          			str2num_short(pp, &pos->w, 0xFFF, 0, 0);
   \   00000278   0000A0E3           MOV      R0,#+0
   \   0000027C   01002DE9           PUSH     {R0}
   \   00000280   0030A0E3           MOV      R3,#+0
   \   00000284   0A20A0E1           MOV      R2,R10
   \   00000288   061086E2           ADD      R1,R6,#+6
   \   0000028C   0900A0E1           MOV      R0,R9
   \   00000290   ........           _BLF     str2num_short,??str2num_short??rA
   \   00000294   04D08DE2           ADD      SP,SP,#+4
    490          		}
    491          		if(p1=strstrInQuote(p, STR_HIGHT))
   \                     ??doItemJob_13:
   \   00000298   CC1D9FE5           LDR      R1,??doItemJob_8+0x18  ;; STR_HIGHT
   \   0000029C   0400A0E1           MOV      R0,R4
   \   000002A0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000002A4   0080B0E1           MOVS     R8,R0
   \   000002A8   0900000A           BEQ      ??doItemJob_14
    492          		{
    493          			pp=gotoRealPos(p1);
   \   000002AC   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000002B0   0090A0E1           MOV      R9,R0
    494          			str2num_short(pp, &pos->h, 0xFFF, 0, 0);
   \   000002B4   0000A0E3           MOV      R0,#+0
   \   000002B8   01002DE9           PUSH     {R0}
   \   000002BC   0030A0E3           MOV      R3,#+0
   \   000002C0   0A20A0E1           MOV      R2,R10
   \   000002C4   081086E2           ADD      R1,R6,#+8
   \   000002C8   0900A0E1           MOV      R0,R9
   \   000002CC   ........           _BLF     str2num_short,??str2num_short??rA
   \   000002D0   04D08DE2           ADD      SP,SP,#+4
    495          		}
    496          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_14:
   \   000002D4   010084E2           ADD      R0,R4,#+1
   \   000002D8   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000002DC   0040A0E1           MOV      R4,R0
    497          		str2num(pp, &bytePos, 0, 0, 0);
   \   000002E0   0000A0E3           MOV      R0,#+0
   \   000002E4   01002DE9           PUSH     {R0}
   \   000002E8   0030A0E3           MOV      R3,#+0
   \   000002EC   0020A0E1           MOV      R2,R0
   \   000002F0   04108DE2           ADD      R1,SP,#+4
   \   000002F4   0400A0E1           MOV      R0,R4
   \   000002F8   ........           _BLF     str2num,??str2num??rA
    498          		addItemToConfig(pos, subMenu, TYPE_POS, bytePos+ptcfgtop->offset, temp);
   \   000002FC   541D9FE5           LDR      R1,??doItemJob_8+0x4  ;; ptcfgtop
   \   00000300   0C008DE2           ADD      R0,SP,#+12
   \   00000304   01002DE9           PUSH     {R0}
   \   00000308   08009DE5           LDR      R0,[SP, #+8]
   \   0000030C   001091E5           LDR      R1,[R1, #+0]
   \   00000310   0320A0E3           MOV      R2,#+3
   \                     ??doItemJob_15:
   \   00000314   181091E5           LDR      R1,[R1, #+24]
   \   00000318   003081E0           ADD      R3,R1,R0
   \   0000031C   0510A0E1           MOV      R1,R5
   \   00000320   0600A0E1           MOV      R0,R6
   \   00000324   A30600EA           B        ??doItemJob_16
    499          		return;
    500          		}
    501          	}
    502          	if((p1=strstrInQuote(p, STR_XY1)))
   \                     ??doItemJob_10:
   \   00000328   441D9FE5           LDR      R1,??doItemJob_8+0x20  ;; STR_XY1
   \   0000032C   0400A0E1           MOV      R0,R4
   \   00000330   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000334   04008DE5           STR      R0,[SP, #+4]
   \   00000338   000050E3           CMP      R0,#+0
   \   0000033C   6200000A           BEQ      ??doItemJob_17
    503          	{
    504          		if(isCurrectItem(p1))
   \   00000340   ........           BL       isCurrectItem
   \   00000344   000050E3           CMP      R0,#+0
   \   00000348   5F00000A           BEQ      ??doItemJob_17
    505          		{
    506          		DATA_POS *pos=malloc(sizeof(DATA_POS));
   \   0000034C   0A00A0E3           MOV      R0,#+10
   \   00000350   140000EF           SWI      +20
   \   00000354   0060A0E1           MOV      R6,R0
    507          		pos->x=0;
   \   00000358   B090C6E1           STRH     R9,[R6, #+0]
    508          		pos->off=0;
   \   0000035C   0290C6E5           STRB     R9,[R6, #+2]
    509          		pos->y=0;
   \   00000360   B490C6E1           STRH     R9,[R6, #+4]
    510          		pos->w=0;
   \   00000364   B690C6E1           STRH     R9,[R6, #+6]
    511          		pos->h=0;
   \   00000368   B890C6E1           STRH     R9,[R6, #+8]
    512          		pp=gotoRealPos(p1);
   \   0000036C   04009DE5           LDR      R0,[SP, #+4]
   \   00000370   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000374   0090A0E1           MOV      R9,R0
    513          		p1=gotoMyStrStart(pp);
   \   00000378   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   0000037C   0070A0E1           MOV      R7,R0
    514          		p2=gotoMyStrEnd(pp);
   \   00000380   0900A0E1           MOV      R0,R9
   \   00000384   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    515          		strnCopyWithEnd(temp, p1, p2-p1);
   \   00000388   072040E0           SUB      R2,R0,R7
   \   0000038C   0710A0E1           MOV      R1,R7
   \   00000390   08008DE2           ADD      R0,SP,#+8
   \   00000394   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    516          		if(p1=strstrInQuote(p, STR_X))
   \   00000398   0810A0E1           MOV      R1,R8
   \   0000039C   0400A0E1           MOV      R0,R4
   \   000003A0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000003A4   000050E3           CMP      R0,#+0
   \   000003A8   0900000A           BEQ      ??doItemJob_18
    517          		{
    518          			pp=gotoRealPos(p1);
   \   000003AC   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000003B0   0090A0E1           MOV      R9,R0
    519          			str2num_short(pp, &pos->x, 0xFFF, 0, 0);
   \   000003B4   0000A0E3           MOV      R0,#+0
   \   000003B8   01002DE9           PUSH     {R0}
   \   000003BC   0030A0E3           MOV      R3,#+0
   \   000003C0   0A20A0E1           MOV      R2,R10
   \   000003C4   0610A0E1           MOV      R1,R6
   \   000003C8   0900A0E1           MOV      R0,R9
   \   000003CC   ........           _BLF     str2num_short,??str2num_short??rA
   \   000003D0   04D08DE2           ADD      SP,SP,#+4
    520          		}
    521          		if(p1=strstrInQuote(p, STR_Y))
   \                     ??doItemJob_18:
   \   000003D4   0B10A0E1           MOV      R1,R11
   \   000003D8   0400A0E1           MOV      R0,R4
   \   000003DC   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000003E0   000050E3           CMP      R0,#+0
   \   000003E4   0900000A           BEQ      ??doItemJob_19
    522          		{
    523          			pp=gotoRealPos(p1);
   \   000003E8   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000003EC   0090A0E1           MOV      R9,R0
    524          			str2num_short(pp, &pos->y, 0xFFF, 0, 0);
   \   000003F0   0000A0E3           MOV      R0,#+0
   \   000003F4   01002DE9           PUSH     {R0}
   \   000003F8   0030A0E3           MOV      R3,#+0
   \   000003FC   0A20A0E1           MOV      R2,R10
   \   00000400   041086E2           ADD      R1,R6,#+4
   \   00000404   0900A0E1           MOV      R0,R9
   \   00000408   ........           _BLF     str2num_short,??str2num_short??rA
   \   0000040C   04D08DE2           ADD      SP,SP,#+4
    525          		}
    526          		if(p1=strstrInQuote(p, STR_WIDTH))
   \                     ??doItemJob_19:
   \   00000410   501C9FE5           LDR      R1,??doItemJob_8+0x14  ;; STR_WIDTH
   \   00000414   0400A0E1           MOV      R0,R4
   \   00000418   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000041C   000050E3           CMP      R0,#+0
   \   00000420   0900000A           BEQ      ??doItemJob_20
    527          		{
    528          			pp=gotoRealPos(p1);
   \   00000424   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000428   0090A0E1           MOV      R9,R0
    529          			str2num_short(pp, &pos->w, 0xFFF, 0, 0);
   \   0000042C   0000A0E3           MOV      R0,#+0
   \   00000430   01002DE9           PUSH     {R0}
   \   00000434   0030A0E3           MOV      R3,#+0
   \   00000438   0A20A0E1           MOV      R2,R10
   \   0000043C   061086E2           ADD      R1,R6,#+6
   \   00000440   0900A0E1           MOV      R0,R9
   \   00000444   ........           _BLF     str2num_short,??str2num_short??rA
   \   00000448   04D08DE2           ADD      SP,SP,#+4
    530          		}
    531          		if(p1=strstrInQuote(p, STR_HIGHT))
   \                     ??doItemJob_20:
   \   0000044C   181C9FE5           LDR      R1,??doItemJob_8+0x18  ;; STR_HIGHT
   \   00000450   0400A0E1           MOV      R0,R4
   \   00000454   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000458   0080B0E1           MOVS     R8,R0
   \   0000045C   0900000A           BEQ      ??doItemJob_21
    532          		{
    533          			pp=gotoRealPos(p1);
   \   00000460   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000464   0090A0E1           MOV      R9,R0
    534          			str2num_short(pp, &pos->h, 0xFFF, 0, 0);
   \   00000468   0000A0E3           MOV      R0,#+0
   \   0000046C   01002DE9           PUSH     {R0}
   \   00000470   0030A0E3           MOV      R3,#+0
   \   00000474   0A20A0E1           MOV      R2,R10
   \   00000478   081086E2           ADD      R1,R6,#+8
   \   0000047C   0900A0E1           MOV      R0,R9
   \   00000480   ........           _BLF     str2num_short,??str2num_short??rA
   \   00000484   04D08DE2           ADD      SP,SP,#+4
    535          		}
    536          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_21:
   \   00000488   010084E2           ADD      R0,R4,#+1
   \   0000048C   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000490   0040A0E1           MOV      R4,R0
    537          		str2num(pp, &bytePos, 0, 0, 0);
   \   00000494   0000A0E3           MOV      R0,#+0
   \   00000498   01002DE9           PUSH     {R0}
   \   0000049C   0030A0E3           MOV      R3,#+0
   \   000004A0   0020A0E1           MOV      R2,R0
   \   000004A4   04108DE2           ADD      R1,SP,#+4
   \   000004A8   0400A0E1           MOV      R0,R4
   \   000004AC   ........           _BLF     str2num,??str2num??rA
    538          		addItemToConfig(pos, subMenu, TYPE_POSB, bytePos+ptcfgtop->offset, temp);
   \   000004B0   A01B9FE5           LDR      R1,??doItemJob_8+0x4  ;; ptcfgtop
   \   000004B4   0C008DE2           ADD      R0,SP,#+12
   \   000004B8   01002DE9           PUSH     {R0}
   \   000004BC   08009DE5           LDR      R0,[SP, #+8]
   \   000004C0   001091E5           LDR      R1,[R1, #+0]
   \   000004C4   1420A0E3           MOV      R2,#+20
   \   000004C8   91FFFFEA           B        ??doItemJob_15
    539          		return;
    540          		}
    541          	}
    542          	if((p1=strstrInQuote(p, " b "))||(p1=strstrInQuote(p, " byte ")))
   \                     ??doItemJob_17:
   \   000004CC   DF1F8FE2           ADR      R1,??doItemJob_22  ;; " b "
   \   000004D0   0400A0E1           MOV      R0,R4
   \   000004D4   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000004D8   0080B0E1           MOVS     R8,R0
   \   000004DC   0400001A           BNE      ??doItemJob_23
   \   000004E0   A81E9FE5           LDR      R1,??doItemJob_24+0x4  ;; `?<Constant " byte ">`
   \   000004E4   0400A0E1           MOV      R0,R4
   \   000004E8   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000004EC   0080B0E1           MOVS     R8,R0
   \   000004F0   6500000A           BEQ      ??doItemJob_25
    543          	{
    544          		if(isCurrectItem(p1))
   \                     ??doItemJob_23:
   \   000004F4   0800A0E1           MOV      R0,R8
   \   000004F8   ........           BL       isCurrectItem
   \   000004FC   000050E3           CMP      R0,#+0
   \   00000500   6100000A           BEQ      ??doItemJob_25
    545          		{
    546          		DATA_BYTE *dbyte=malloc(sizeof(DATA_BYTE));
   \   00000504   0300A0E3           MOV      R0,#+3
   \   00000508   140000EF           SWI      +20
   \   0000050C   00A0A0E1           MOV      R10,R0
    547          		dbyte->initData=0;
   \   00000510   0290CAE5           STRB     R9,[R10, #+2]
    548          		dbyte->min=127;
    549          		dbyte->min=~(dbyte->min)+1;
   \   00000514   8100A0E3           MOV      R0,#+129
   \   00000518   0000CAE5           STRB     R0,[R10, #+0]
    550          	#ifdef	WINTEL_DEBUG
    551          		dbyte->max=127;
    552          	#else
    553          		dbyte->max=0xFF;
   \   0000051C   FF00A0E3           MOV      R0,#+255
   \   00000520   0100CAE5           STRB     R0,[R10, #+1]
    554          	#endif
    555          		pp=gotoRealPos(p1);
   \   00000524   0800A0E1           MOV      R0,R8
   \   00000528   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000052C   0080A0E1           MOV      R8,R0
    556          		p1=gotoMyStrStart(pp);
   \   00000530   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000534   00B0A0E1           MOV      R11,R0
    557          		p2=gotoMyStrEnd(pp);
   \   00000538   0800A0E1           MOV      R0,R8
   \   0000053C   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    558          		strnCopyWithEnd(temp, p1, p2-p1);
   \   00000540   0B2040E0           SUB      R2,R0,R11
   \   00000544   0B10A0E1           MOV      R1,R11
   \   00000548   08008DE2           ADD      R0,SP,#+8
   \   0000054C   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    559          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   00000550   0710A0E1           MOV      R1,R7
   \   00000554   0400A0E1           MOV      R0,R4
   \   00000558   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000055C   000050E3           CMP      R0,#+0
   \   00000560   0400001A           BNE      ??doItemJob_26
   \   00000564   0610A0E1           MOV      R1,R6
   \   00000568   0400A0E1           MOV      R0,R4
   \   0000056C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000570   000050E3           CMP      R0,#+0
   \   00000574   0900000A           BEQ      ??doItemJob_27
    560          		{
    561          			pp=gotoRealPos(p1);
   \                     ??doItemJob_26:
   \   00000578   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000057C   0080A0E1           MOV      R8,R0
    562          			str2num_char(pp, &dbyte->initData, dbyte->max, dbyte->min, 0);
   \   00000580   0000A0E3           MOV      R0,#+0
   \   00000584   01002DE9           PUSH     {R0}
   \   00000588   0030DAE5           LDRB     R3,[R10, #+0]
   \   0000058C   0120DAE5           LDRB     R2,[R10, #+1]
   \   00000590   02108AE2           ADD      R1,R10,#+2
   \   00000594   0800A0E1           MOV      R0,R8
   \   00000598   ........           _BLF     str2num_char,??str2num_char??rA
   \   0000059C   04D08DE2           ADD      SP,SP,#+4
    563          		}
    564          		if((p1=strstrInQuote(p, STR_RANGE1))||(p1=strstrInQuote(p, STR_RANGE2)))
   \                     ??doItemJob_27:
   \   000005A0   F01D9FE5           LDR      R1,??doItemJob_24+0xC  ;; STR_RANGE1
   \   000005A4   0400A0E1           MOV      R0,R4
   \   000005A8   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000005AC   0080B0E1           MOVS     R8,R0
   \   000005B0   0400001A           BNE      ??doItemJob_28
   \   000005B4   E01D9FE5           LDR      R1,??doItemJob_24+0x10  ;; STR_RANGE2
   \   000005B8   0400A0E1           MOV      R0,R4
   \   000005BC   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000005C0   0080B0E1           MOVS     R8,R0
   \   000005C4   1F00000A           BEQ      ??doItemJob_29
    565          		{
    566          			pp=gotoRealPos(p1);
   \                     ??doItemJob_28:
   \   000005C8   0800A0E1           MOV      R0,R8
   \   000005CC   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000005D0   0080A0E1           MOV      R8,R0
    567          			str2num_char(pp, &dbyte->min, dbyte->max, dbyte->min, 0);
   \   000005D4   0000A0E3           MOV      R0,#+0
   \   000005D8   01002DE9           PUSH     {R0}
   \   000005DC   0030DAE5           LDRB     R3,[R10, #+0]
   \   000005E0   0120DAE5           LDRB     R2,[R10, #+1]
   \   000005E4   0A10A0E1           MOV      R1,R10
   \   000005E8   0800A0E1           MOV      R0,R8
   \   000005EC   ........           _BLF     str2num_char,??str2num_char??rA
   \   000005F0   04D08DE2           ADD      SP,SP,#+4
   \   000005F4   000000EA           B        ??doItemJob_30
    568          			//while(*pp>='0'&&*pp<='9') //leave min
    569          			//	pp++;
    570          			while(*pp&&*pp!='.')
    571          				pp++;
   \                     ??doItemJob_31:
   \   000005F8   018088E2           ADD      R8,R8,#+1
   \                     ??doItemJob_30:
   \   000005FC   0000D8E5           LDRB     R0,[R8, #+0]
   \   00000600   000050E3           CMP      R0,#+0
   \   00000604   2E005013           CMPNE    R0,#+46
   \   00000608   FAFFFF1A           BNE      ??doItemJob_31
    572          			while(*pp<'0'||*pp>'9') //to max
   \                     ??doItemJob_32:
   \   0000060C   0000D8E5           LDRB     R0,[R8, #+0]
   \   00000610   300050E3           CMP      R0,#+48
   \   00000614   0100003A           BCC      ??doItemJob_33
   \   00000618   3A0050E3           CMP      R0,#+58
   \   0000061C   0100003A           BCC      ??doItemJob_34
    573          				pp++;
   \                     ??doItemJob_33:
   \   00000620   018088E2           ADD      R8,R8,#+1
   \   00000624   F8FFFFEA           B        ??doItemJob_32
    574          			str2num_char(pp, &dbyte->max, dbyte->max, dbyte->min, 0);
   \                     ??doItemJob_34:
   \   00000628   0000A0E3           MOV      R0,#+0
   \   0000062C   01002DE9           PUSH     {R0}
   \   00000630   0030DAE5           LDRB     R3,[R10, #+0]
   \   00000634   0120DAE5           LDRB     R2,[R10, #+1]
   \   00000638   01108AE2           ADD      R1,R10,#+1
   \   0000063C   0800A0E1           MOV      R0,R8
   \   00000640   ........           _BLF     str2num_char,??str2num_char??rA
   \   00000644   04D08DE2           ADD      SP,SP,#+4
    575          		}
    576          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_29:
   \   00000648   010084E2           ADD      R0,R4,#+1
   \   0000064C   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000650   0040A0E1           MOV      R4,R0
    577          		str2num(pp, &bytePos, 0, 0, 0);
   \   00000654   0000A0E3           MOV      R0,#+0
   \   00000658   01002DE9           PUSH     {R0}
   \   0000065C   0030A0E1           MOV      R3,R0
   \   00000660   0020A0E1           MOV      R2,R0
   \   00000664   04108DE2           ADD      R1,SP,#+4
   \   00000668   0400A0E1           MOV      R0,R4
   \   0000066C   ........           _BLF     str2num,??str2num??rA
    578          		addItemToConfig(dbyte, subMenu, TYPE_BYTE, bytePos+ptcfgtop->offset, temp);
   \   00000670   E0199FE5           LDR      R1,??doItemJob_8+0x4  ;; ptcfgtop
   \   00000674   0C008DE2           ADD      R0,SP,#+12
   \   00000678   01002DE9           PUSH     {R0}
   \   0000067C   08009DE5           LDR      R0,[SP, #+8]
   \   00000680   001091E5           LDR      R1,[R1, #+0]
   \   00000684   0420A0E3           MOV      R2,#+4
   \   00000688   C60500EA           B        ??doItemJob_35
    579          		return;
    580          		}
    581          	}
    582          	if((p1=strstrInQuote(p, " int "))||(p1=strstrInQuote(p, " i ")))
   \                     ??doItemJob_25:
   \   0000068C   101D9FE5           LDR      R1,??doItemJob_24+0x18  ;; `?<Constant " int ">`
   \   00000690   0400A0E1           MOV      R0,R4
   \   00000694   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000698   0080B0E1           MOVS     R8,R0
   \   0000069C   0400001A           BNE      ??doItemJob_36
   \   000006A0   6B1F8FE2           ADR      R1,??doItemJob_22+0x4  ;; " i "
   \   000006A4   0400A0E1           MOV      R0,R4
   \   000006A8   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000006AC   0080B0E1           MOVS     R8,R0
   \   000006B0   6800000A           BEQ      ??doItemJob_37
    583          	{
    584          		if(isCurrectItem(p1))
   \                     ??doItemJob_36:
   \   000006B4   0800A0E1           MOV      R0,R8
   \   000006B8   ........           BL       isCurrectItem
   \   000006BC   000050E3           CMP      R0,#+0
   \   000006C0   6400000A           BEQ      ??doItemJob_37
    585          		{
    586          		DATA_INT *dint=malloc(sizeof(DATA_INT));
   \   000006C4   0C00A0E3           MOV      R0,#+12
   \   000006C8   140000EF           SWI      +20
   \   000006CC   00A0A0E1           MOV      R10,R0
    587          		dint->initData=0;
   \   000006D0   08908AE5           STR      R9,[R10, #+8]
    588          		dint->max=0xFFFFFFF;
   \   000006D4   F004E0E3           MVN      R0,#-268435456
   \   000006D8   04008AE5           STR      R0,[R10, #+4]
    589          		dint->min=0xFFFFFFF;
    590          		dint->min=~(dint->min);
   \   000006DC   F004A0E3           MOV      R0,#-268435456
   \   000006E0   00008AE5           STR      R0,[R10, #+0]
    591          		pp=gotoRealPos(p1);
   \   000006E4   0800A0E1           MOV      R0,R8
   \   000006E8   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000006EC   0080A0E1           MOV      R8,R0
    592          		p1=gotoMyStrStart(pp);
   \   000006F0   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   000006F4   00B0A0E1           MOV      R11,R0
    593          		p2=gotoMyStrEnd(pp);
   \   000006F8   0800A0E1           MOV      R0,R8
   \   000006FC   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    594          		strnCopyWithEnd(temp, p1, p2-p1);
   \   00000700   0B2040E0           SUB      R2,R0,R11
   \   00000704   0B10A0E1           MOV      R1,R11
   \   00000708   08008DE2           ADD      R0,SP,#+8
   \   0000070C   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    595          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   00000710   0710A0E1           MOV      R1,R7
   \   00000714   0400A0E1           MOV      R0,R4
   \   00000718   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000071C   000050E3           CMP      R0,#+0
   \   00000720   0400001A           BNE      ??doItemJob_38
   \   00000724   0610A0E1           MOV      R1,R6
   \   00000728   0400A0E1           MOV      R0,R4
   \   0000072C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000730   000050E3           CMP      R0,#+0
   \   00000734   0900000A           BEQ      ??doItemJob_39
    596          		{
    597          			pp=gotoRealPos(p1);
   \                     ??doItemJob_38:
   \   00000738   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000073C   0080A0E1           MOV      R8,R0
    598          			str2num(pp, &dint->initData, dint->max, dint->min, 0);
   \   00000740   0000A0E3           MOV      R0,#+0
   \   00000744   01002DE9           PUSH     {R0}
   \   00000748   00309AE5           LDR      R3,[R10, #+0]
   \   0000074C   04209AE5           LDR      R2,[R10, #+4]
   \   00000750   08108AE2           ADD      R1,R10,#+8
   \   00000754   0800A0E1           MOV      R0,R8
   \   00000758   ........           _BLF     str2num,??str2num??rA
   \   0000075C   04D08DE2           ADD      SP,SP,#+4
    599          		}
    600          		if((p1=strstrInQuote(p, STR_RANGE1))||(p1=strstrInQuote(p, STR_RANGE2)))
   \                     ??doItemJob_39:
   \   00000760   301C9FE5           LDR      R1,??doItemJob_24+0xC  ;; STR_RANGE1
   \   00000764   0400A0E1           MOV      R0,R4
   \   00000768   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000076C   0080B0E1           MOVS     R8,R0
   \   00000770   0400001A           BNE      ??doItemJob_40
   \   00000774   201C9FE5           LDR      R1,??doItemJob_24+0x10  ;; STR_RANGE2
   \   00000778   0400A0E1           MOV      R0,R4
   \   0000077C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000780   0080B0E1           MOVS     R8,R0
   \   00000784   2000000A           BEQ      ??doItemJob_41
    601          		{
    602          			pp=gotoRealPos(p1);
   \                     ??doItemJob_40:
   \   00000788   0800A0E1           MOV      R0,R8
   \   0000078C   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000790   0080A0E1           MOV      R8,R0
    603          			str2num(pp, &dint->min, dint->max, dint->min, 0);
   \   00000794   0000A0E3           MOV      R0,#+0
   \   00000798   01002DE9           PUSH     {R0}
   \   0000079C   00309AE5           LDR      R3,[R10, #+0]
   \   000007A0   04209AE5           LDR      R2,[R10, #+4]
   \   000007A4   0A10A0E1           MOV      R1,R10
   \   000007A8   0800A0E1           MOV      R0,R8
   \   000007AC   ........           _BLF     str2num,??str2num??rA
   \   000007B0   04D08DE2           ADD      SP,SP,#+4
   \   000007B4   000000EA           B        ??doItemJob_42
    604          			while(*pp>='0'&&*pp<='9') //leave min
    605          				pp++;
   \                     ??doItemJob_43:
   \   000007B8   018088E2           ADD      R8,R8,#+1
   \                     ??doItemJob_42:
   \   000007BC   0000D8E5           LDRB     R0,[R8, #+0]
   \   000007C0   300050E3           CMP      R0,#+48
   \   000007C4   0100003A           BCC      ??doItemJob_44
   \   000007C8   3A0050E3           CMP      R0,#+58
   \   000007CC   F9FFFF3A           BCC      ??doItemJob_43
    606          			while(*pp<'0'||*pp>'9') //to max
   \                     ??doItemJob_44:
   \   000007D0   0000D8E5           LDRB     R0,[R8, #+0]
   \   000007D4   300050E3           CMP      R0,#+48
   \   000007D8   0100003A           BCC      ??doItemJob_45
   \   000007DC   3A0050E3           CMP      R0,#+58
   \   000007E0   0100003A           BCC      ??doItemJob_46
    607          				pp++;
   \                     ??doItemJob_45:
   \   000007E4   018088E2           ADD      R8,R8,#+1
   \   000007E8   F8FFFFEA           B        ??doItemJob_44
    608          			str2num(pp, &dint->max, dint->max, dint->min, 0);
   \                     ??doItemJob_46:
   \   000007EC   0000A0E3           MOV      R0,#+0
   \   000007F0   01002DE9           PUSH     {R0}
   \   000007F4   00309AE5           LDR      R3,[R10, #+0]
   \   000007F8   04209AE5           LDR      R2,[R10, #+4]
   \   000007FC   04108AE2           ADD      R1,R10,#+4
   \   00000800   0800A0E1           MOV      R0,R8
   \   00000804   ........           _BLF     str2num,??str2num??rA
   \   00000808   04D08DE2           ADD      SP,SP,#+4
    609          		}
    610          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_41:
   \   0000080C   010084E2           ADD      R0,R4,#+1
   \   00000810   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000814   0040A0E1           MOV      R4,R0
    611          		str2num(pp, &bytePos,0,0, 0);
   \   00000818   0000A0E3           MOV      R0,#+0
   \   0000081C   01002DE9           PUSH     {R0}
   \   00000820   0030A0E1           MOV      R3,R0
   \   00000824   0020A0E1           MOV      R2,R0
   \   00000828   04108DE2           ADD      R1,SP,#+4
   \   0000082C   0400A0E1           MOV      R0,R4
   \   00000830   ........           _BLF     str2num,??str2num??rA
    612          		addItemToConfig(dint, subMenu, TYPE_INT, bytePos+ptcfgtop->offset, temp);
   \   00000834   1C189FE5           LDR      R1,??doItemJob_8+0x4  ;; ptcfgtop
   \   00000838   0C008DE2           ADD      R0,SP,#+12
   \   0000083C   01002DE9           PUSH     {R0}
   \   00000840   08009DE5           LDR      R0,[SP, #+8]
   \   00000844   001091E5           LDR      R1,[R1, #+0]
   \   00000848   0520A0E3           MOV      R2,#+5
   \   0000084C   550500EA           B        ??doItemJob_35
   \                     ??doItemJob_22:
   \   00000850   20622000           DC8      " b "
   \   00000854   20692000           DC8      " i "
    613          		return;
    614          		}
    615          	}
    616          	if((p1=strstrInQuote(p, " o "))||(p1=strstrInQuote(p, " option ")))
   \                     ??doItemJob_37:
   \   00000858   D41F8FE2           ADR      R1,??doItemJob_0  ;; " o "
   \   0000085C   0400A0E1           MOV      R0,R4
   \   00000860   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000864   0080B0E1           MOVS     R8,R0
   \   00000868   0400001A           BNE      ??doItemJob_47
   \   0000086C   6C1E9FE5           LDR      R1,??doItemJob_48+0x4  ;; `?<Constant " option ">`
   \   00000870   0400A0E1           MOV      R0,R4
   \   00000874   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000878   0080B0E1           MOVS     R8,R0
   \   0000087C   4500000A           BEQ      ??doItemJob_49
    617          	{
    618          		if(isCurrectItem(p1))
   \                     ??doItemJob_47:
   \   00000880   0800A0E1           MOV      R0,R8
   \   00000884   ........           BL       isCurrectItem
   \   00000888   000050E3           CMP      R0,#+0
   \   0000088C   4100000A           BEQ      ??doItemJob_49
    619          		{
    620          		DATA_CBOX *cbox=malloc(sizeof(DATA_CBOX));
   \   00000890   0800A0E3           MOV      R0,#+8
   \   00000894   140000EF           SWI      +20
   \   00000898   00A0A0E1           MOV      R10,R0
    621          		cbox->cboxitem=0;
   \   0000089C   04908AE5           STR      R9,[R10, #+4]
    622          		cbox->initData=0;
   \   000008A0   0090CAE5           STRB     R9,[R10, #+0]
    623          		pp=gotoRealPos(p1);
   \   000008A4   0800A0E1           MOV      R0,R8
   \   000008A8   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000008AC   0080A0E1           MOV      R8,R0
    624          		p1=gotoMyStrStart(pp);
   \   000008B0   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   000008B4   00B0A0E1           MOV      R11,R0
    625          		p2=gotoMyStrEnd(pp);
   \   000008B8   0800A0E1           MOV      R0,R8
   \   000008BC   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
   \   000008C0   0090A0E1           MOV      R9,R0
    626          		strnCopyWithEnd(temp, p1, p2-p1);
   \   000008C4   0B2049E0           SUB      R2,R9,R11
   \   000008C8   0B10A0E1           MOV      R1,R11
   \   000008CC   08008DE2           ADD      R0,SP,#+8
   \   000008D0   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    627          		if(p1=strstrInQuote(p, STR_CHOICE)) //可能是IAR在中文系统的BUG，一个字符串被两次使用之后可能会报错
   \   000008D4   081E9FE5           LDR      R1,??doItemJob_48+0x8  ;; STR_CHOICE
   \   000008D8   0400A0E1           MOV      R0,R4
   \   000008DC   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000008E0   0010B0E1           MOVS     R1,R0
   \   000008E4   0200000A           BEQ      ??doItemJob_50
    628          		{
    629          			addPreDataToCBoxItem(cbox, p1);
   \   000008E8   0A00A0E1           MOV      R0,R10
   \   000008EC   ........           BL       addPreDataToCBoxItem
   \   000008F0   020000EA           B        ??doItemJob_51
    630          		}
    631          		else
    632          		{
    633          			cboxItemColon(p2, cbox);
   \                     ??doItemJob_50:
   \   000008F4   0A10A0E1           MOV      R1,R10
   \   000008F8   0900A0E1           MOV      R0,R9
   \   000008FC   ........           BL       cboxItemColon
    634          		}
    635          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \                     ??doItemJob_51:
   \   00000900   0710A0E1           MOV      R1,R7
   \   00000904   0400A0E1           MOV      R0,R4
   \   00000908   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000090C   0080B0E1           MOVS     R8,R0
   \   00000910   0400001A           BNE      ??doItemJob_52
   \   00000914   0610A0E1           MOV      R1,R6
   \   00000918   0400A0E1           MOV      R0,R4
   \   0000091C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000920   0080B0E1           MOVS     R8,R0
   \   00000924   0A00000A           BEQ      ??doItemJob_53
    636          		{
    637          			pp=gotoRealPos(p1);
   \                     ??doItemJob_52:
   \   00000928   0800A0E1           MOV      R0,R8
   \   0000092C   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000930   0080A0E1           MOV      R8,R0
    638          			str2num_char(pp, &cbox->initData,0xFF,0, 0);
   \   00000934   0000A0E3           MOV      R0,#+0
   \   00000938   01002DE9           PUSH     {R0}
   \   0000093C   0030A0E3           MOV      R3,#+0
   \   00000940   FF20A0E3           MOV      R2,#+255
   \   00000944   0A10A0E1           MOV      R1,R10
   \   00000948   0800A0E1           MOV      R0,R8
   \   0000094C   ........           _BLF     str2num_char,??str2num_char??rA
   \   00000950   04D08DE2           ADD      SP,SP,#+4
    639          		}
    640          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_53:
   \   00000954   010084E2           ADD      R0,R4,#+1
   \   00000958   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000095C   0040A0E1           MOV      R4,R0
    641          		str2num(pp, &bytePos,0,0, 0);
   \   00000960   0000A0E3           MOV      R0,#+0
   \   00000964   01002DE9           PUSH     {R0}
   \   00000968   0030A0E3           MOV      R3,#+0
   \   0000096C   0020A0E1           MOV      R2,R0
   \   00000970   04108DE2           ADD      R1,SP,#+4
   \   00000974   0400A0E1           MOV      R0,R4
   \   00000978   ........           _BLF     str2num,??str2num??rA
    642          		addItemToConfig(cbox, subMenu, TYPE_CBOX, bytePos+ptcfgtop->offset, temp);
   \   0000097C   D4169FE5           LDR      R1,??doItemJob_8+0x4  ;; ptcfgtop
   \   00000980   0C008DE2           ADD      R0,SP,#+12
   \   00000984   01002DE9           PUSH     {R0}
   \   00000988   08009DE5           LDR      R0,[SP, #+8]
   \   0000098C   001091E5           LDR      R1,[R1, #+0]
   \   00000990   0620A0E3           MOV      R2,#+6
   \   00000994   030500EA           B        ??doItemJob_35
    643          		return;
    644          		}
    645          	}
    646          	if((p1=strstrInQuote(p, " co "))||(p1=strstrInQuote(p, " color ")))
   \                     ??doItemJob_49:
   \   00000998   481D9FE5           LDR      R1,??doItemJob_48+0xC  ;; `?<Constant " co ">`
   \   0000099C   0400A0E1           MOV      R0,R4
   \   000009A0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000009A4   0080B0E1           MOVS     R8,R0
   \   000009A8   0400001A           BNE      ??doItemJob_54
   \   000009AC   381D9FE5           LDR      R1,??doItemJob_48+0x10  ;; `?<Constant " color ">`
   \   000009B0   0400A0E1           MOV      R0,R4
   \   000009B4   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000009B8   0080B0E1           MOVS     R8,R0
   \   000009BC   3800000A           BEQ      ??doItemJob_55
    647          	{
    648          		if(isCurrectItem(p1))
   \                     ??doItemJob_54:
   \   000009C0   0800A0E1           MOV      R0,R8
   \   000009C4   ........           BL       isCurrectItem
   \   000009C8   000050E3           CMP      R0,#+0
   \   000009CC   3400000A           BEQ      ??doItemJob_55
    649          		{
    650          		DATA_COLOR *color=malloc(sizeof(DATA_COLOR));
   \   000009D0   0400A0E3           MOV      R0,#+4
   \   000009D4   140000EF           SWI      +20
   \   000009D8   00A0A0E1           MOV      R10,R0
    651          		int *col=(int *)color->color;
    652          		*col=0;
   \   000009DC   00908AE5           STR      R9,[R10, #+0]
    653          		pp=gotoRealPos(p1);
   \   000009E0   0800A0E1           MOV      R0,R8
   \   000009E4   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000009E8   0080A0E1           MOV      R8,R0
    654          		p1=gotoMyStrStart(pp);
   \   000009EC   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   000009F0   00B0A0E1           MOV      R11,R0
    655          		p2=gotoMyStrEnd(pp);
   \   000009F4   0800A0E1           MOV      R0,R8
   \   000009F8   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    656          		strnCopyWithEnd(temp, p1, p2-p1);
   \   000009FC   0B2040E0           SUB      R2,R0,R11
   \   00000A00   0B10A0E1           MOV      R1,R11
   \   00000A04   08008DE2           ADD      R0,SP,#+8
   \   00000A08   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    657          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   00000A0C   0710A0E1           MOV      R1,R7
   \   00000A10   0400A0E1           MOV      R0,R4
   \   00000A14   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000A18   0080B0E1           MOVS     R8,R0
   \   00000A1C   0400001A           BNE      ??doItemJob_56
   \   00000A20   0610A0E1           MOV      R1,R6
   \   00000A24   0400A0E1           MOV      R0,R4
   \   00000A28   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000A2C   0080B0E1           MOVS     R8,R0
   \   00000A30   0A00000A           BEQ      ??doItemJob_57
    658          		{
    659          			pp=gotoRealPos(p1);
   \                     ??doItemJob_56:
   \   00000A34   0800A0E1           MOV      R0,R8
   \   00000A38   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000A3C   0080A0E1           MOV      R8,R0
    660          			str2num(pp, col,0,0, 0);
   \   00000A40   0000A0E3           MOV      R0,#+0
   \   00000A44   01002DE9           PUSH     {R0}
   \   00000A48   0030A0E1           MOV      R3,R0
   \   00000A4C   0020A0E1           MOV      R2,R0
   \   00000A50   0A10A0E1           MOV      R1,R10
   \   00000A54   0800A0E1           MOV      R0,R8
   \   00000A58   ........           _BLF     str2num,??str2num??rA
   \   00000A5C   04D08DE2           ADD      SP,SP,#+4
    661          		}
    662          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_57:
   \   00000A60   010084E2           ADD      R0,R4,#+1
   \   00000A64   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000A68   0040A0E1           MOV      R4,R0
    663          		str2num(pp, &bytePos,0,0, 0);
   \   00000A6C   0000A0E3           MOV      R0,#+0
   \   00000A70   01002DE9           PUSH     {R0}
   \   00000A74   0030A0E1           MOV      R3,R0
   \   00000A78   0020A0E1           MOV      R2,R0
   \   00000A7C   04108DE2           ADD      R1,SP,#+4
   \   00000A80   0400A0E1           MOV      R0,R4
   \   00000A84   ........           _BLF     str2num,??str2num??rA
    664          		addItemToConfig(color, subMenu, TYPE_COLOR, bytePos+ptcfgtop->offset, temp);
   \   00000A88   C8159FE5           LDR      R1,??doItemJob_8+0x4  ;; ptcfgtop
   \   00000A8C   0C008DE2           ADD      R0,SP,#+12
   \   00000A90   01002DE9           PUSH     {R0}
   \   00000A94   08009DE5           LDR      R0,[SP, #+8]
   \   00000A98   001091E5           LDR      R1,[R1, #+0]
   \   00000A9C   0720A0E3           MOV      R2,#+7
   \   00000AA0   C00400EA           B        ??doItemJob_35
    665          		return;
    666          		}
    667          	}
    668          	if((p1=strstrInQuote(p, " a "))||(p1=strstrInQuote(p, " address ")))
   \                     ??doItemJob_55:
   \   00000AA4   421F8FE2           ADR      R1,??doItemJob_0+0x4  ;; " a "
   \   00000AA8   0400A0E1           MOV      R0,R4
   \   00000AAC   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000AB0   0080B0E1           MOVS     R8,R0
   \   00000AB4   0400001A           BNE      ??doItemJob_58
   \   00000AB8   301C9FE5           LDR      R1,??doItemJob_48+0x14  ;; `?<Constant " address ">`
   \   00000ABC   0400A0E1           MOV      R0,R4
   \   00000AC0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000AC4   0080B0E1           MOVS     R8,R0
   \   00000AC8   3E00000A           BEQ      ??doItemJob_59
    669          	{
    670          		if(isCurrectItem(p1))
   \                     ??doItemJob_58:
   \   00000ACC   0800A0E1           MOV      R0,R8
   \   00000AD0   ........           BL       isCurrectItem
   \   00000AD4   000050E3           CMP      R0,#+0
   \   00000AD8   3A00000A           BEQ      ??doItemJob_59
    671          		{
    672          		DATA_ADDRESS *addr=malloc(sizeof(DATA_ADDRESS));
   \   00000ADC   0400A0E3           MOV      R0,#+4
   \   00000AE0   140000EF           SWI      +20
   \   00000AE4   00A0A0E1           MOV      R10,R0
    673          		addr->addr=0;
   \   00000AE8   00908AE5           STR      R9,[R10, #+0]
    674          		pp=gotoRealPos(p1);
   \   00000AEC   0800A0E1           MOV      R0,R8
   \   00000AF0   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000AF4   0080A0E1           MOV      R8,R0
    675          		p1=gotoMyStrStart(pp);
   \   00000AF8   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000AFC   00B0A0E1           MOV      R11,R0
    676          		p2=gotoMyStrEnd(pp);
   \   00000B00   0800A0E1           MOV      R0,R8
   \   00000B04   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    677          		strnCopyWithEnd(temp, p1, p2-p1);
   \   00000B08   0B2040E0           SUB      R2,R0,R11
   \   00000B0C   0B10A0E1           MOV      R1,R11
   \   00000B10   08008DE2           ADD      R0,SP,#+8
   \   00000B14   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    678          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   00000B18   0710A0E1           MOV      R1,R7
   \   00000B1C   0400A0E1           MOV      R0,R4
   \   00000B20   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000B24   0080B0E1           MOVS     R8,R0
   \   00000B28   0400001A           BNE      ??doItemJob_60
   \   00000B2C   0610A0E1           MOV      R1,R6
   \   00000B30   0400A0E1           MOV      R0,R4
   \   00000B34   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000B38   0080B0E1           MOVS     R8,R0
   \   00000B3C   0A00000A           BEQ      ??doItemJob_61
    679          		{
    680          			pp=gotoRealPos(p1);
   \                     ??doItemJob_60:
   \   00000B40   0800A0E1           MOV      R0,R8
   \   00000B44   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000B48   0080A0E1           MOV      R8,R0
    681          			str2num(pp, (int *)&addr->addr,0,0, 0);
   \   00000B4C   0000A0E3           MOV      R0,#+0
   \   00000B50   01002DE9           PUSH     {R0}
   \   00000B54   0030A0E1           MOV      R3,R0
   \   00000B58   0020A0E1           MOV      R2,R0
   \   00000B5C   0A10A0E1           MOV      R1,R10
   \   00000B60   0800A0E1           MOV      R0,R8
   \   00000B64   ........           _BLF     str2num,??str2num??rA
   \   00000B68   04D08DE2           ADD      SP,SP,#+4
    682          		}
    683          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_61:
   \   00000B6C   010084E2           ADD      R0,R4,#+1
   \   00000B70   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000B74   0040A0E1           MOV      R4,R0
    684          		str2num(pp, &bytePos,0,0, 0);
   \   00000B78   0000A0E3           MOV      R0,#+0
   \   00000B7C   01002DE9           PUSH     {R0}
   \   00000B80   0030A0E1           MOV      R3,R0
   \   00000B84   0020A0E1           MOV      R2,R0
   \   00000B88   04108DE2           ADD      R1,SP,#+4
   \   00000B8C   0400A0E1           MOV      R0,R4
   \   00000B90   ........           _BLF     str2num,??str2num??rA
    685          		addItemToConfig(addr, subMenu, TYPE_ADDRESS, bytePos+ptcfgtop->offset, temp);
   \   00000B94   BC149FE5           LDR      R1,??doItemJob_8+0x4  ;; ptcfgtop
   \   00000B98   0C008DE2           ADD      R0,SP,#+12
   \   00000B9C   01002DE9           PUSH     {R0}
   \   00000BA0   08009DE5           LDR      R0,[SP, #+8]
   \   00000BA4   001091E5           LDR      R1,[R1, #+0]
   \   00000BA8   0820A0E3           MOV      R2,#+8
   \   00000BAC   7D0400EA           B        ??doItemJob_35
   \                     ??doItemJob_0:
   \   00000BB0   206F2000           DC8      " o "
   \   00000BB4   20612000           DC8      " a "
   \   00000BB8   ........           DC32     STR_VL1
   \   00000BBC   ........           DC32     STR_VL
   \   00000BC0   ........           DC32     STR_CHKBOX1
   \   00000BC4   ........           DC32     STR_CHKBOX2
    686          		return;
    687          		}
    688          	}
    689          	if((p1=strstrInQuote(p, " sf "))||(p1=strstrInQuote(p, " selectfile ")))
   \                     ??doItemJob_59:
   \   00000BC8   241B9FE5           LDR      R1,??doItemJob_48+0x18  ;; `?<Constant " sf ">`
   \   00000BCC   0400A0E1           MOV      R0,R4
   \   00000BD0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000BD4   0080B0E1           MOVS     R8,R0
   \   00000BD8   0400001A           BNE      ??doItemJob_62
   \   00000BDC   141B9FE5           LDR      R1,??doItemJob_48+0x1C  ;; `?<Constant " selectfile ">`
   \   00000BE0   0400A0E1           MOV      R0,R4
   \   00000BE4   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000BE8   0080B0E1           MOVS     R8,R0
   \   00000BEC   6200000A           BEQ      ??doItemJob_63
    690          	{
    691          		if(isCurrectItem(p1))
   \                     ??doItemJob_62:
   \   00000BF0   0800A0E1           MOV      R0,R8
   \   00000BF4   ........           BL       isCurrectItem
   \   00000BF8   000050E3           CMP      R0,#+0
   \   00000BFC   5E00000A           BEQ      ??doItemJob_63
    692          		{
    693          		DATA_SF *fs=malloc(sizeof(DATA_SF));
   \   00000C00   A400A0E3           MOV      R0,#+164
   \   00000C04   140000EF           SWI      +20
   \   00000C08   00A0A0E1           MOV      R10,R0
    694          		int i=0;
   \   00000C0C   0000A0E3           MOV      R0,#+0
    695          		for(;i<128;i++)
    696          			fs->path[i]=0;
   \                     ??doItemJob_64:
   \   00000C10   0A90C0E7           STRB     R9,[R0, +R10]
   \   00000C14   010080E2           ADD      R0,R0,#+1
   \   00000C18   800050E3           CMP      R0,#+128
   \   00000C1C   FBFFFFBA           BLT      ??doItemJob_64
    697          		fs->mask[0]=0;
   \   00000C20   8090CAE5           STRB     R9,[R10, #+128]
    698          		fs->maxlen=0;
   \   00000C24   A0908AE5           STR      R9,[R10, #+160]
    699          		pp=gotoRealPos(p1);
   \   00000C28   0800A0E1           MOV      R0,R8
   \   00000C2C   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000C30   0080A0E1           MOV      R8,R0
    700          		p1=gotoMyStrStart(pp);
   \   00000C34   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000C38   00B0A0E1           MOV      R11,R0
    701          		p2=gotoMyStrEnd(pp);
   \   00000C3C   0800A0E1           MOV      R0,R8
   \   00000C40   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    702          		strnCopyWithEnd(temp, p1, p2-p1);
   \   00000C44   0B2040E0           SUB      R2,R0,R11
   \   00000C48   0B10A0E1           MOV      R1,R11
   \   00000C4C   08008DE2           ADD      R0,SP,#+8
   \   00000C50   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    703          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   00000C54   0710A0E1           MOV      R1,R7
   \   00000C58   0400A0E1           MOV      R0,R4
   \   00000C5C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000C60   0070B0E1           MOVS     R7,R0
   \   00000C64   0400001A           BNE      ??doItemJob_65
   \   00000C68   0610A0E1           MOV      R1,R6
   \   00000C6C   0400A0E1           MOV      R0,R4
   \   00000C70   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000C74   0070B0E1           MOVS     R7,R0
   \   00000C78   0A00000A           BEQ      ??doItemJob_66
    704          		{
    705          			pp=gotoRealPos(p1);
   \                     ??doItemJob_65:
   \   00000C7C   0700A0E1           MOV      R0,R7
   \   00000C80   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000C84   0080A0E1           MOV      R8,R0
    706          			p1=gotoMyStrStart(pp);
   \   00000C88   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000C8C   0070A0E1           MOV      R7,R0
    707          			p2=gotoMyStrEnd(pp);
   \   00000C90   0800A0E1           MOV      R0,R8
   \   00000C94   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    708          			strnCopyWithEnd(fs->path, p1, p2-p1);
   \   00000C98   072040E0           SUB      R2,R0,R7
   \   00000C9C   0710A0E1           MOV      R1,R7
   \   00000CA0   0A00A0E1           MOV      R0,R10
   \   00000CA4   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    709          		}
    710          		if(p1=strstrInQuote(p, "mask="))
   \                     ??doItemJob_66:
   \   00000CA8   4C1A9FE5           LDR      R1,??doItemJob_48+0x20  ;; `?<Constant "mask=">`
   \   00000CAC   0400A0E1           MOV      R0,R4
   \   00000CB0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000CB4   0060B0E1           MOVS     R6,R0
   \   00000CB8   0900000A           BEQ      ??doItemJob_67
    711          		{
    712          			pp=gotoRealPos(p1);
   \   00000CBC   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000CC0   0080A0E1           MOV      R8,R0
    713          			p1=gotoMyStrStart(pp);
   \   00000CC4   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000CC8   0060A0E1           MOV      R6,R0
    714          			p2=gotoMyStrEnd(pp);
   \   00000CCC   0800A0E1           MOV      R0,R8
   \   00000CD0   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    715          			strnCopyWithEnd(fs->mask, p1, p2-p1);
   \   00000CD4   062040E0           SUB      R2,R0,R6
   \   00000CD8   0610A0E1           MOV      R1,R6
   \   00000CDC   80008AE2           ADD      R0,R10,#+128
   \   00000CE0   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    716          		}
    717          		if((p1=strstrInQuote(p, "ml="))||(p1=strstrInQuote(p, "maxlen=")))
   \                     ??doItemJob_67:
   \   00000CE4   DA1F8FE2           ADR      R1,??doItemJob_8  ;; "ml="
   \   00000CE8   0400A0E1           MOV      R0,R4
   \   00000CEC   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000CF0   0080B0E1           MOVS     R8,R0
   \   00000CF4   0400001A           BNE      ??doItemJob_68
   \   00000CF8   001A9FE5           LDR      R1,??doItemJob_48+0x24  ;; `?<Constant "maxlen=">`
   \   00000CFC   0400A0E1           MOV      R0,R4
   \   00000D00   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000D04   0080B0E1           MOVS     R8,R0
   \   00000D08   0A00000A           BEQ      ??doItemJob_69
    718          		{
    719          			pp=gotoRealPos(p1);
   \                     ??doItemJob_68:
   \   00000D0C   0800A0E1           MOV      R0,R8
   \   00000D10   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000D14   0080A0E1           MOV      R8,R0
    720          			str2num(pp, &fs->maxlen,0,0, 0);
   \   00000D18   0000A0E3           MOV      R0,#+0
   \   00000D1C   01002DE9           PUSH     {R0}
   \   00000D20   0030A0E1           MOV      R3,R0
   \   00000D24   0020A0E1           MOV      R2,R0
   \   00000D28   A0108AE2           ADD      R1,R10,#+160
   \   00000D2C   0800A0E1           MOV      R0,R8
   \   00000D30   ........           _BLF     str2num,??str2num??rA
   \   00000D34   04D08DE2           ADD      SP,SP,#+4
    721          		}
    722          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_69:
   \   00000D38   010084E2           ADD      R0,R4,#+1
   \   00000D3C   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000D40   0040A0E1           MOV      R4,R0
    723          		str2num(pp, &bytePos,0,0, 0);
   \   00000D44   0000A0E3           MOV      R0,#+0
   \   00000D48   01002DE9           PUSH     {R0}
   \   00000D4C   0030A0E1           MOV      R3,R0
   \   00000D50   0020A0E1           MOV      R2,R0
   \   00000D54   04108DE2           ADD      R1,SP,#+4
   \   00000D58   0400A0E1           MOV      R0,R4
   \   00000D5C   ........           _BLF     str2num,??str2num??rA
    724          		addItemToConfig(fs, subMenu, TYPE_SF, bytePos+ptcfgtop->offset, temp);
   \   00000D60   F0129FE5           LDR      R1,??doItemJob_8+0x4  ;; ptcfgtop
   \   00000D64   0C008DE2           ADD      R0,SP,#+12
   \   00000D68   01002DE9           PUSH     {R0}
   \   00000D6C   08009DE5           LDR      R0,[SP, #+8]
   \   00000D70   001091E5           LDR      R1,[R1, #+0]
   \   00000D74   0D20A0E3           MOV      R2,#+13
   \   00000D78   0A0400EA           B        ??doItemJob_35
    725          		return;
    726          		}
    727          	}
    728          	if((p1=strstrInQuote(p, " sd "))||(p1=strstrInQuote(p, " selectdir ")))
   \                     ??doItemJob_63:
   \   00000D7C   80199FE5           LDR      R1,??doItemJob_48+0x28  ;; `?<Constant " sd ">`
   \   00000D80   0400A0E1           MOV      R0,R4
   \   00000D84   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000D88   0080B0E1           MOVS     R8,R0
   \   00000D8C   0400001A           BNE      ??doItemJob_70
   \   00000D90   70199FE5           LDR      R1,??doItemJob_48+0x2C  ;; `?<Constant " selectdir ">`
   \   00000D94   0400A0E1           MOV      R0,R4
   \   00000D98   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000D9C   0080B0E1           MOVS     R8,R0
   \   00000DA0   4E00000A           BEQ      ??doItemJob_71
    729          	{
    730          		if(isCurrectItem(p1))
   \                     ??doItemJob_70:
   \   00000DA4   0800A0E1           MOV      R0,R8
   \   00000DA8   ........           BL       isCurrectItem
   \   00000DAC   000050E3           CMP      R0,#+0
   \   00000DB0   4A00000A           BEQ      ??doItemJob_71
    731          		{
    732          		DATA_SD *sd=malloc(sizeof(DATA_SD));
   \   00000DB4   8400A0E3           MOV      R0,#+132
   \   00000DB8   140000EF           SWI      +20
   \   00000DBC   00A0A0E1           MOV      R10,R0
    733          		sd->path[0]=0;
   \   00000DC0   0090CAE5           STRB     R9,[R10, #+0]
    734          		sd->maxlen=0;
   \   00000DC4   80908AE5           STR      R9,[R10, #+128]
    735          		pp=gotoRealPos(p1);
   \   00000DC8   0800A0E1           MOV      R0,R8
   \   00000DCC   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000DD0   0080A0E1           MOV      R8,R0
    736          		p1=gotoMyStrStart(pp);
   \   00000DD4   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000DD8   00B0A0E1           MOV      R11,R0
    737          		p2=gotoMyStrEnd(pp);
   \   00000DDC   0800A0E1           MOV      R0,R8
   \   00000DE0   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    738          		strnCopyWithEnd(temp, p1, p2-p1);
   \   00000DE4   0B2040E0           SUB      R2,R0,R11
   \   00000DE8   0B10A0E1           MOV      R1,R11
   \   00000DEC   08008DE2           ADD      R0,SP,#+8
   \   00000DF0   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    739          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   00000DF4   0710A0E1           MOV      R1,R7
   \   00000DF8   0400A0E1           MOV      R0,R4
   \   00000DFC   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000E00   0070B0E1           MOVS     R7,R0
   \   00000E04   0400001A           BNE      ??doItemJob_72
   \   00000E08   0610A0E1           MOV      R1,R6
   \   00000E0C   0400A0E1           MOV      R0,R4
   \   00000E10   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000E14   0070B0E1           MOVS     R7,R0
   \   00000E18   0A00000A           BEQ      ??doItemJob_73
    740          		{
    741          			pp=gotoRealPos(p1);
   \                     ??doItemJob_72:
   \   00000E1C   0700A0E1           MOV      R0,R7
   \   00000E20   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000E24   0080A0E1           MOV      R8,R0
    742          			p1=gotoMyStrStart(pp);
   \   00000E28   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000E2C   0070A0E1           MOV      R7,R0
    743          			p2=gotoMyStrEnd(pp);
   \   00000E30   0800A0E1           MOV      R0,R8
   \   00000E34   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    744          			strnCopyWithEnd(sd->path, p1, p2-p1);
   \   00000E38   072040E0           SUB      R2,R0,R7
   \   00000E3C   0710A0E1           MOV      R1,R7
   \   00000E40   0A00A0E1           MOV      R0,R10
   \   00000E44   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    745          		}
    746          		if((p1=strstrInQuote(p, "ml="))||(p1=strstrInQuote(p, "maxlen=")))
   \                     ??doItemJob_73:
   \   00000E48   811F8FE2           ADR      R1,??doItemJob_8  ;; "ml="
   \   00000E4C   0400A0E1           MOV      R0,R4
   \   00000E50   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000E54   0080B0E1           MOVS     R8,R0
   \   00000E58   0400001A           BNE      ??doItemJob_74
   \   00000E5C   9C189FE5           LDR      R1,??doItemJob_48+0x24  ;; `?<Constant "maxlen=">`
   \   00000E60   0400A0E1           MOV      R0,R4
   \   00000E64   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000E68   0080B0E1           MOVS     R8,R0
   \   00000E6C   0A00000A           BEQ      ??doItemJob_75
    747          		{
    748          			pp=gotoRealPos(p1);
   \                     ??doItemJob_74:
   \   00000E70   0800A0E1           MOV      R0,R8
   \   00000E74   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000E78   0080A0E1           MOV      R8,R0
    749          			str2num(pp, &sd->maxlen,0,0, 0);
   \   00000E7C   0000A0E3           MOV      R0,#+0
   \   00000E80   01002DE9           PUSH     {R0}
   \   00000E84   0030A0E1           MOV      R3,R0
   \   00000E88   0020A0E1           MOV      R2,R0
   \   00000E8C   80108AE2           ADD      R1,R10,#+128
   \   00000E90   0800A0E1           MOV      R0,R8
   \   00000E94   ........           _BLF     str2num,??str2num??rA
   \   00000E98   04D08DE2           ADD      SP,SP,#+4
    750          		}
    751          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_75:
   \   00000E9C   010084E2           ADD      R0,R4,#+1
   \   00000EA0   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000EA4   0040A0E1           MOV      R4,R0
    752          		str2num(pp, &bytePos,0,0, 0);
   \   00000EA8   0000A0E3           MOV      R0,#+0
   \   00000EAC   01002DE9           PUSH     {R0}
   \   00000EB0   0030A0E1           MOV      R3,R0
   \   00000EB4   0020A0E1           MOV      R2,R0
   \   00000EB8   04108DE2           ADD      R1,SP,#+4
   \   00000EBC   0400A0E1           MOV      R0,R4
   \   00000EC0   ........           _BLF     str2num,??str2num??rA
    753          		addItemToConfig(sd, subMenu, TYPE_SD, bytePos+ptcfgtop->offset, temp);
   \   00000EC4   8C119FE5           LDR      R1,??doItemJob_8+0x4  ;; ptcfgtop
   \   00000EC8   0C008DE2           ADD      R0,SP,#+12
   \   00000ECC   01002DE9           PUSH     {R0}
   \   00000ED0   08009DE5           LDR      R0,[SP, #+8]
   \   00000ED4   001091E5           LDR      R1,[R1, #+0]
   \   00000ED8   0E20A0E3           MOV      R2,#+14
   \   00000EDC   B10300EA           B        ??doItemJob_35
    754          		return;
    755          		}
    756          	}
    757          	if((p1=strstrInQuote(p, " s "))||(p1=strstrInQuote(p, " string ")))
   \                     ??doItemJob_71:
   \   00000EE0   621F8FE2           ADR      R1,??doItemJob_8+0x1C  ;; " s "
   \   00000EE4   0400A0E1           MOV      R0,R4
   \   00000EE8   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000EEC   0080B0E1           MOVS     R8,R0
   \   00000EF0   0400001A           BNE      ??doItemJob_76
   \   00000EF4   CC1E9FE5           LDR      R1,??doItemJob_77  ;; `?<Constant " string ">`
   \   00000EF8   0400A0E1           MOV      R0,R4
   \   00000EFC   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000F00   0080B0E1           MOVS     R8,R0
   \   00000F04   5B00000A           BEQ      ??doItemJob_78
    758          	{
    759          		if(isCurrectItem(p1))
   \                     ??doItemJob_76:
   \   00000F08   0800A0E1           MOV      R0,R8
   \   00000F0C   ........           BL       isCurrectItem
   \   00000F10   000050E3           CMP      R0,#+0
   \   00000F14   5700000A           BEQ      ??doItemJob_78
    760          		{
    761          		DATA_STRING *string=malloc(sizeof(DATA_STRING));
   \   00000F18   8400A0E3           MOV      R0,#+132
   \   00000F1C   140000EF           SWI      +20
   \   00000F20   00A0A0E1           MOV      R10,R0
    762          		int i=0;
   \   00000F24   0000A0E3           MOV      R0,#+0
    763          		string->maxlen=0;
   \   00000F28   80908AE5           STR      R9,[R10, #+128]
    764          		for(;i<128;i++)
    765          			string->string[i]=0;
   \                     ??doItemJob_79:
   \   00000F2C   0A90C0E7           STRB     R9,[R0, +R10]
   \   00000F30   010080E2           ADD      R0,R0,#+1
   \   00000F34   800050E3           CMP      R0,#+128
   \   00000F38   FBFFFFBA           BLT      ??doItemJob_79
    766          		pp=gotoRealPos(p1);
   \   00000F3C   0800A0E1           MOV      R0,R8
   \   00000F40   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000F44   0080A0E1           MOV      R8,R0
    767          		p1=gotoMyStrStart(pp);
   \   00000F48   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000F4C   00B0A0E1           MOV      R11,R0
    768          		p2=gotoMyStrEnd(pp);
   \   00000F50   0800A0E1           MOV      R0,R8
   \   00000F54   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    769          		strnCopyWithEnd(temp, p1, p2-p1);
   \   00000F58   0B2040E0           SUB      R2,R0,R11
   \   00000F5C   0B10A0E1           MOV      R1,R11
   \   00000F60   08008DE2           ADD      R0,SP,#+8
   \   00000F64   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    770          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   00000F68   0710A0E1           MOV      R1,R7
   \   00000F6C   0400A0E1           MOV      R0,R4
   \   00000F70   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000F74   0070B0E1           MOVS     R7,R0
   \   00000F78   0400001A           BNE      ??doItemJob_80
   \   00000F7C   0610A0E1           MOV      R1,R6
   \   00000F80   0400A0E1           MOV      R0,R4
   \   00000F84   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000F88   0070B0E1           MOVS     R7,R0
   \   00000F8C   0A00000A           BEQ      ??doItemJob_81
    771          		{
    772          			pp=gotoRealPos(p1);
   \                     ??doItemJob_80:
   \   00000F90   0700A0E1           MOV      R0,R7
   \   00000F94   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000F98   0080A0E1           MOV      R8,R0
    773          			p1=gotoMyStrStart(pp);
   \   00000F9C   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000FA0   0070A0E1           MOV      R7,R0
    774          			p2=gotoMyStrEnd(pp);
   \   00000FA4   0800A0E1           MOV      R0,R8
   \   00000FA8   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    775          			strnCopyWithEnd(string->string, p1, p2-p1);
   \   00000FAC   072040E0           SUB      R2,R0,R7
   \   00000FB0   0710A0E1           MOV      R1,R7
   \   00000FB4   0A00A0E1           MOV      R0,R10
   \   00000FB8   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    776          		}
    777          		if((p1=strstrInQuote(p, "ml="))||(p1=strstrInQuote(p, "maxlen=")))
   \                     ??doItemJob_81:
   \   00000FBC   241F8FE2           ADR      R1,??doItemJob_8  ;; "ml="
   \   00000FC0   0400A0E1           MOV      R0,R4
   \   00000FC4   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000FC8   0080B0E1           MOVS     R8,R0
   \   00000FCC   0400001A           BNE      ??doItemJob_82
   \   00000FD0   28179FE5           LDR      R1,??doItemJob_48+0x24  ;; `?<Constant "maxlen=">`
   \   00000FD4   0400A0E1           MOV      R0,R4
   \   00000FD8   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000FDC   0080B0E1           MOVS     R8,R0
   \   00000FE0   0A00000A           BEQ      ??doItemJob_83
    778          		{
    779          			pp=gotoRealPos(p1);
   \                     ??doItemJob_82:
   \   00000FE4   0800A0E1           MOV      R0,R8
   \   00000FE8   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000FEC   0080A0E1           MOV      R8,R0
    780          			str2num(pp, &string->maxlen,0,0, 0);
   \   00000FF0   0000A0E3           MOV      R0,#+0
   \   00000FF4   01002DE9           PUSH     {R0}
   \   00000FF8   0030A0E1           MOV      R3,R0
   \   00000FFC   0020A0E1           MOV      R2,R0
   \   00001000   80108AE2           ADD      R1,R10,#+128
   \   00001004   0800A0E1           MOV      R0,R8
   \   00001008   ........           _BLF     str2num,??str2num??rA
   \   0000100C   04D08DE2           ADD      SP,SP,#+4
    781          		}
    782          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_83:
   \   00001010   010084E2           ADD      R0,R4,#+1
   \   00001014   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001018   0040A0E1           MOV      R4,R0
    783          		str2num(pp, &bytePos,0,0, 0);
   \   0000101C   0000A0E3           MOV      R0,#+0
   \   00001020   01002DE9           PUSH     {R0}
   \   00001024   0030A0E1           MOV      R3,R0
   \   00001028   0020A0E1           MOV      R2,R0
   \   0000102C   04108DE2           ADD      R1,SP,#+4
   \   00001030   0400A0E1           MOV      R0,R4
   \   00001034   ........           _BLF     str2num,??str2num??rA
    784          		addItemToConfig(string, subMenu, TYPE_STRING, bytePos+ptcfgtop->offset, temp);
   \   00001038   18109FE5           LDR      R1,??doItemJob_8+0x4  ;; ptcfgtop
   \   0000103C   0C008DE2           ADD      R0,SP,#+12
   \   00001040   01002DE9           PUSH     {R0}
   \   00001044   08009DE5           LDR      R0,[SP, #+8]
   \   00001048   001091E5           LDR      R1,[R1, #+0]
   \   0000104C   0920A0E3           MOV      R2,#+9
   \   00001050   540300EA           B        ??doItemJob_35
   \                     ??doItemJob_8:
   \   00001054   6D6C3D00           DC8      "ml="
   \   00001058   ........           DC32     ptcfgtop
   \   0000105C   ........           DC32     STR_XY2
   \   00001060   ........           DC32     STR_Y
   \   00001064   ........           DC32     STR_X
   \   00001068   ........           DC32     STR_WIDTH
   \   0000106C   ........           DC32     STR_HIGHT
   \   00001070   20732000           DC8      " s "
   \   00001074   ........           DC32     STR_XY1
    785          		return;
    786          		}
    787          	}
    788          	if((p1=strstrInQuote(p, " u "))||(p1=strstrInQuote(p, " ustring ")))
   \                     ??doItemJob_78:
   \   00001078   C31F8FE2           ADR      R1,??doItemJob_24  ;; " u "
   \   0000107C   0400A0E1           MOV      R0,R4
   \   00001080   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001084   0080B0E1           MOVS     R8,R0
   \   00001088   0400001A           BNE      ??doItemJob_84
   \   0000108C   381D9FE5           LDR      R1,??doItemJob_77+0x4  ;; `?<Constant " ustring ">`
   \   00001090   0400A0E1           MOV      R0,R4
   \   00001094   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001098   0080B0E1           MOVS     R8,R0
   \   0000109C   6200000A           BEQ      ??doItemJob_85
    789          	{
    790          		if(isCurrectItem(p1))
   \                     ??doItemJob_84:
   \   000010A0   0800A0E1           MOV      R0,R8
   \   000010A4   ........           BL       isCurrectItem
   \   000010A8   000050E3           CMP      R0,#+0
   \   000010AC   5E00000A           BEQ      ??doItemJob_85
    791          		{
    792          		DATA_UNICODE *uni=malloc(sizeof(DATA_UNICODE));
   \   000010B0   410FA0E3           MOV      R0,#+260
   \   000010B4   140000EF           SWI      +20
   \   000010B8   00A0A0E1           MOV      R10,R0
    793          		int j=0;
   \   000010BC   0000A0E3           MOV      R0,#+0
    794          		uni->maxlen=0;
   \   000010C0   00918AE5           STR      R9,[R10, #+256]
    795          		for(;j<128;j++)
    796          			uni->ustr[j]=0;
   \                     ??doItemJob_86:
   \   000010C4   80108AE0           ADD      R1,R10,R0, LSL #+1
   \   000010C8   B090C1E1           STRH     R9,[R1, #+0]
   \   000010CC   010080E2           ADD      R0,R0,#+1
   \   000010D0   800050E3           CMP      R0,#+128
   \   000010D4   FAFFFFBA           BLT      ??doItemJob_86
    797          		pp=gotoRealPos(p1);
   \   000010D8   0800A0E1           MOV      R0,R8
   \   000010DC   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000010E0   0080A0E1           MOV      R8,R0
    798          		p1=gotoMyStrStart(pp);
   \   000010E4   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   000010E8   00B0A0E1           MOV      R11,R0
    799          		p2=gotoMyStrEnd(pp);
   \   000010EC   0800A0E1           MOV      R0,R8
   \   000010F0   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    800          		strnCopyWithEnd(temp, p1, p2-p1);
   \   000010F4   0B2040E0           SUB      R2,R0,R11
   \   000010F8   0B10A0E1           MOV      R1,R11
   \   000010FC   08008DE2           ADD      R0,SP,#+8
   \   00001100   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    801          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))//添加UNICODE字符
   \   00001104   0710A0E1           MOV      R1,R7
   \   00001108   0400A0E1           MOV      R0,R4
   \   0000110C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001110   0070B0E1           MOVS     R7,R0
   \   00001114   0400001A           BNE      ??doItemJob_87
   \   00001118   0610A0E1           MOV      R1,R6
   \   0000111C   0400A0E1           MOV      R0,R4
   \   00001120   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001124   0070B0E1           MOVS     R7,R0
   \   00001128   1900000A           BEQ      ??doItemJob_88
    802          		{
    803          			int i=0;
   \                     ??doItemJob_87:
   \   0000112C   0060A0E3           MOV      R6,#+0
    804          			unsigned short c, c1;
    805          			pp=gotoRealPos(p1);
   \   00001130   0700A0E1           MOV      R0,R7
   \   00001134   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001138   0080A0E1           MOV      R8,R0
    806          			p1=gotoMyStrStart(pp);
   \   0000113C   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00001140   0070A0E1           MOV      R7,R0
    807          			p2=gotoMyStrEnd(pp);
   \   00001144   0800A0E1           MOV      R0,R8
   \   00001148   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
   \   0000114C   0090A0E1           MOV      R9,R0
   \   00001150   000000EA           B        ??doItemJob_89
    808          			while((p1<p2)&&(c=*p1++)&&i<127) //max
    809          			{
    810          				if(c<=127)
    811          					uni->ustr[i++]=c;
   \                     ??doItemJob_90:
   \   00001154   B010C0E1           STRH     R1,[R0, #+0]
   \                     ??doItemJob_89:
   \   00001158   090057E1           CMP      R7,R9
   \   0000115C   0C00002A           BCS      ??doItemJob_88
   \   00001160   ........           LDRB     R0,[R7], #+1
   \   00001164   0010B0E1           MOVS     R1,R0
   \   00001168   0900000A           BEQ      ??doItemJob_88
   \   0000116C   7F0056E3           CMP      R6,#+127
   \   00001170   070000AA           BGE      ??doItemJob_88
   \   00001174   800051E3           CMP      R1,#+128
    812          				else
    813          				{
    814          					c1=*p1++;
   \   00001178   ........           LDRBCS   R1,[R7], #+1
   \   0000117C   86008AE0           ADD      R0,R10,R6, LSL #+1
   \   00001180   016086E2           ADD      R6,R6,#+1
    815          					if(c1<=127)
   \   00001184   80005123           CMPCS    R1,#+128
   \   00001188   F1FFFF3A           BCC      ??doItemJob_90
    816          						uni->ustr[i++]=c1;
    817          					else
    818          						uni->ustr[i++]=c1*0x10+c1;
   \   0000118C   011281E0           ADD      R1,R1,R1, LSL #+4
   \   00001190   EFFFFFEA           B        ??doItemJob_90
    819          				}
    820          			}
    821          		}
    822          		if((p1=strstrInQuote(p, "ml="))||(p1=strstrInQuote(p, "maxlen=")))
   \                     ??doItemJob_88:
   \   00001194   7E1F8FE2           ADR      R1,??doItemJob_24+0x8  ;; "ml="
   \   00001198   0400A0E1           MOV      R0,R4
   \   0000119C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000011A0   0080B0E1           MOVS     R8,R0
   \   000011A4   0400001A           BNE      ??doItemJob_91
   \   000011A8   50159FE5           LDR      R1,??doItemJob_48+0x24  ;; `?<Constant "maxlen=">`
   \   000011AC   0400A0E1           MOV      R0,R4
   \   000011B0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000011B4   0080B0E1           MOVS     R8,R0
   \   000011B8   0A00000A           BEQ      ??doItemJob_92
    823          		{
    824          			pp=gotoRealPos(p1);
   \                     ??doItemJob_91:
   \   000011BC   0800A0E1           MOV      R0,R8
   \   000011C0   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000011C4   0080A0E1           MOV      R8,R0
    825          			str2num(pp, &uni->maxlen,0,0, 0);
   \   000011C8   0000A0E3           MOV      R0,#+0
   \   000011CC   01002DE9           PUSH     {R0}
   \   000011D0   0030A0E3           MOV      R3,#+0
   \   000011D4   0020A0E1           MOV      R2,R0
   \   000011D8   401F8AE2           ADD      R1,R10,#+256
   \   000011DC   0800A0E1           MOV      R0,R8
   \   000011E0   ........           _BLF     str2num,??str2num??rA
   \   000011E4   04D08DE2           ADD      SP,SP,#+4
    826          		}
    827          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_92:
   \   000011E8   010084E2           ADD      R0,R4,#+1
   \   000011EC   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000011F0   0040A0E1           MOV      R4,R0
    828          		str2num(pp, &bytePos,0,0, 0);
   \   000011F4   0000A0E3           MOV      R0,#+0
   \   000011F8   01002DE9           PUSH     {R0}
   \   000011FC   0030A0E3           MOV      R3,#+0
   \   00001200   0020A0E1           MOV      R2,R0
   \   00001204   04108DE2           ADD      R1,SP,#+4
   \   00001208   0400A0E1           MOV      R0,R4
   \   0000120C   ........           _BLF     str2num,??str2num??rA
    829          		addItemToConfig(uni, subMenu, TYPE_UNICODE, bytePos+ptcfgtop->offset, temp);
   \   00001210   ........           LDR      R1,??DataTable16  ;; ptcfgtop
   \   00001214   0C008DE2           ADD      R0,SP,#+12
   \   00001218   01002DE9           PUSH     {R0}
   \   0000121C   08009DE5           LDR      R0,[SP, #+8]
   \   00001220   001091E5           LDR      R1,[R1, #+0]
   \   00001224   0A20A0E3           MOV      R2,#+10
   \   00001228   DE0200EA           B        ??doItemJob_35
    830          		return;
    831          		}
    832          	}
    833          	if((p1=strstrInQuote(p, " h "))||(p1=strstrInQuote(p, " hex ")))
   \                     ??doItemJob_85:
   \   0000122C   5B1F8FE2           ADR      R1,??doItemJob_24+0x14  ;; " h "
   \   00001230   0400A0E1           MOV      R0,R4
   \   00001234   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001238   00B0B0E1           MOVS     R11,R0
   \   0000123C   0400001A           BNE      ??doItemJob_93
   \   00001240   881B9FE5           LDR      R1,??doItemJob_77+0x8  ;; `?<Constant " hex ">`
   \   00001244   0400A0E1           MOV      R0,R4
   \   00001248   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000124C   00B0B0E1           MOVS     R11,R0
   \   00001250   7E00000A           BEQ      ??doItemJob_94
    834          	{
    835          		if(isCurrectItem(p1))
   \                     ??doItemJob_93:
   \   00001254   0B00A0E1           MOV      R0,R11
   \   00001258   ........           BL       isCurrectItem
   \   0000125C   000050E3           CMP      R0,#+0
   \   00001260   7A00000A           BEQ      ??doItemJob_94
    836          		{
    837          		DATA_HEX *hex=malloc(sizeof(DATA_HEX));
   \   00001264   8400A0E3           MOV      R0,#+132
   \   00001268   140000EF           SWI      +20
   \   0000126C   00A0A0E1           MOV      R10,R0
    838          		int i=0;
   \   00001270   0080A0E3           MOV      R8,#+0
    839          		for(;i<128;i++)
    840          			hex->hex[i]=0;
   \                     ??doItemJob_95:
   \   00001274   0A90C8E7           STRB     R9,[R8, +R10]
   \   00001278   018088E2           ADD      R8,R8,#+1
   \   0000127C   800058E3           CMP      R8,#+128
   \   00001280   FBFFFFBA           BLT      ??doItemJob_95
    841          		hex->maxlen=0;
   \   00001284   80908AE5           STR      R9,[R10, #+128]
    842          		pp=gotoRealPos(p1);
   \   00001288   0B00A0E1           MOV      R0,R11
   \   0000128C   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001290   0090A0E1           MOV      R9,R0
    843          		p1=gotoMyStrStart(pp);
   \   00001294   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00001298   0080A0E1           MOV      R8,R0
    844          		p2=gotoMyStrEnd(pp);
   \   0000129C   0900A0E1           MOV      R0,R9
   \   000012A0   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    845          		strnCopyWithEnd(temp, p1, p2-p1);
   \   000012A4   082040E0           SUB      R2,R0,R8
   \   000012A8   0810A0E1           MOV      R1,R8
   \   000012AC   08008DE2           ADD      R0,SP,#+8
   \   000012B0   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    846          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   000012B4   0710A0E1           MOV      R1,R7
   \   000012B8   0400A0E1           MOV      R0,R4
   \   000012BC   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000012C0   0070B0E1           MOVS     R7,R0
   \   000012C4   0400001A           BNE      ??doItemJob_96
   \   000012C8   0610A0E1           MOV      R1,R6
   \   000012CC   0400A0E1           MOV      R0,R4
   \   000012D0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000012D4   0070B0E1           MOVS     R7,R0
   \   000012D8   3600000A           BEQ      ??doItemJob_97
    847          		{
    848          			unsigned char c, c1;
    849          			i=0;
   \                     ??doItemJob_96:
   \   000012DC   0080A0E3           MOV      R8,#+0
    850          			pp=gotoRealPos(p1);
   \   000012E0   0700A0E1           MOV      R0,R7
   \   000012E4   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000012E8   0090A0E1           MOV      R9,R0
    851          			p1=gotoMyStrStart(pp);
   \   000012EC   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   000012F0   0070A0E1           MOV      R7,R0
    852          			p2=gotoMyStrEnd(pp);
   \   000012F4   0900A0E1           MOV      R0,R9
   \   000012F8   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
   \   000012FC   0090A0E1           MOV      R9,R0
   \   00001300   130000EA           B        ??doItemJob_98
    853          			while((c=*p1++)&& p1<p2)
    854          			{
    855          				if((c>='0'&&c<='9')||(c>='a'&&c<='f')||(c>='A'&&c<='F'))
   \                     ??doItemJob_99:
   \   00001304   410051E3           CMP      R1,#+65
   \   00001308   2A00003A           BCC      ??doItemJob_97
   \   0000130C   470051E3           CMP      R1,#+71
   \   00001310   2800002A           BCS      ??doItemJob_97
    856          				{
    857          					c1=*p1++;
   \                     ??doItemJob_100:
   \   00001314   ........           LDRB     R6,[R7], #+1
    858          					if((c1>='0'&&c1<='9')||(c1>='a'&&c1<='f')||(c1>='A'&&c1<='F'))
   \   00001318   300056E3           CMP      R6,#+48
   \   0000131C   0100003A           BCC      ??doItemJob_101
   \   00001320   3A0056E3           CMP      R6,#+58
   \   00001324   0300003A           BCC      ??doItemJob_102
   \                     ??doItemJob_101:
   \   00001328   610056E3           CMP      R6,#+97
   \   0000132C   1D00003A           BCC      ??doItemJob_103
   \   00001330   670056E3           CMP      R6,#+103
   \   00001334   1F00002A           BCS      ??doItemJob_97
    859          						hex->hex[i++]=chr2num(c)*0x10+chr2num(c1);
   \                     ??doItemJob_102:
   \   00001338   ........           _BLF     chr2num,??chr2num??rA
   \   0000133C   00B0A0E1           MOV      R11,R0
   \   00001340   0600A0E1           MOV      R0,R6
   \   00001344   ........           _BLF     chr2num,??chr2num??rA
   \   00001348   0B0280E0           ADD      R0,R0,R11, LSL #+4
   \   0000134C   0A00C8E7           STRB     R0,[R8, +R10]
   \   00001350   018088E2           ADD      R8,R8,#+1
   \                     ??doItemJob_98:
   \   00001354   ........           LDRB     R1,[R7], #+1
   \   00001358   0100B0E1           MOVS     R0,R1
   \   0000135C   1500000A           BEQ      ??doItemJob_97
   \   00001360   090057E1           CMP      R7,R9
   \   00001364   1300002A           BCS      ??doItemJob_97
   \   00001368   300051E3           CMP      R1,#+48
   \   0000136C   0100003A           BCC      ??doItemJob_104
   \   00001370   3A0051E3           CMP      R1,#+58
   \   00001374   E6FFFF3A           BCC      ??doItemJob_100
   \                     ??doItemJob_104:
   \   00001378   610051E3           CMP      R1,#+97
   \   0000137C   E0FFFF3A           BCC      ??doItemJob_99
   \   00001380   670051E3           CMP      R1,#+103
   \   00001384   E2FFFF3A           BCC      ??doItemJob_100
   \   00001388   0A0000EA           B        ??doItemJob_97
   \                     ??doItemJob_24:
   \   0000138C   20752000           DC8      " u "
   \   00001390   ........           DC32     `?<Constant " byte ">`
   \   00001394   6D6C3D00           DC8      "ml="
   \   00001398   ........           DC32     STR_RANGE1
   \   0000139C   ........           DC32     STR_RANGE2
   \   000013A0   20682000           DC8      " h "
   \   000013A4   ........           DC32     `?<Constant " int ">`
   \                     ??doItemJob_103:
   \   000013A8   410056E3           CMP      R6,#+65
   \   000013AC   0100003A           BCC      ??doItemJob_97
   \   000013B0   470056E3           CMP      R6,#+71
   \   000013B4   DFFFFF3A           BCC      ??doItemJob_102
    860          					else
    861          						break;
    862          				}
    863          				else
    864          					break;
    865          			}
    866          		}
    867          		if((p1=strstrInQuote(p, "ml="))||(p1=strstrInQuote(p, "maxlen=")))
   \                     ??doItemJob_97:
   \   000013B8   C71F8FE2           ADR      R1,??doItemJob_48  ;; "ml="
   \   000013BC   0400A0E1           MOV      R0,R4
   \   000013C0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000013C4   0080B0E1           MOVS     R8,R0
   \   000013C8   0400001A           BNE      ??doItemJob_105
   \   000013CC   2C139FE5           LDR      R1,??doItemJob_48+0x24  ;; `?<Constant "maxlen=">`
   \   000013D0   0400A0E1           MOV      R0,R4
   \   000013D4   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000013D8   0080B0E1           MOVS     R8,R0
   \   000013DC   0A00000A           BEQ      ??doItemJob_106
    868          		{
    869          			pp=gotoRealPos(p1);
   \                     ??doItemJob_105:
   \   000013E0   0800A0E1           MOV      R0,R8
   \   000013E4   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000013E8   0090A0E1           MOV      R9,R0
    870          			str2num(pp, &hex->maxlen,0,0, 0);
   \   000013EC   0000A0E3           MOV      R0,#+0
   \   000013F0   01002DE9           PUSH     {R0}
   \   000013F4   0030A0E3           MOV      R3,#+0
   \   000013F8   0020A0E1           MOV      R2,R0
   \   000013FC   80108AE2           ADD      R1,R10,#+128
   \   00001400   0900A0E1           MOV      R0,R9
   \   00001404   ........           _BLF     str2num,??str2num??rA
   \   00001408   04D08DE2           ADD      SP,SP,#+4
    871          		}
    872          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_106:
   \   0000140C   010084E2           ADD      R0,R4,#+1
   \   00001410   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001414   0040A0E1           MOV      R4,R0
    873          		str2num(pp, &bytePos,0,0, 0);
   \   00001418   0000A0E3           MOV      R0,#+0
   \   0000141C   01002DE9           PUSH     {R0}
   \   00001420   0030A0E3           MOV      R3,#+0
   \   00001424   0020A0E1           MOV      R2,R0
   \   00001428   04108DE2           ADD      R1,SP,#+4
   \   0000142C   0400A0E1           MOV      R0,R4
   \   00001430   ........           _BLF     str2num,??str2num??rA
    874          		addItemToConfig(hex, subMenu, TYPE_HEX, bytePos+ptcfgtop->offset, temp);
   \   00001434   ........           LDR      R1,??DataTable16  ;; ptcfgtop
   \   00001438   0C008DE2           ADD      R0,SP,#+12
   \   0000143C   01002DE9           PUSH     {R0}
   \   00001440   08009DE5           LDR      R0,[SP, #+8]
   \   00001444   001091E5           LDR      R1,[R1, #+0]
   \   00001448   0C20A0E3           MOV      R2,#+12
   \   0000144C   550200EA           B        ??doItemJob_35
    875          		return;
    876          		}
    877          	}
    878          	if((p1=strstrInQuote(p, STR_SLIDER2))||(p1=strstrInQuote(p, STR_SLIDER1)))
   \                     ??doItemJob_94:
   \   00001450   7C199FE5           LDR      R1,??doItemJob_77+0xC  ;; STR_SLIDER2
   \   00001454   0400A0E1           MOV      R0,R4
   \   00001458   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000145C   0080B0E1           MOVS     R8,R0
   \   00001460   0400001A           BNE      ??doItemJob_107
   \   00001464   6C199FE5           LDR      R1,??doItemJob_77+0x10  ;; STR_SLIDER1
   \   00001468   0400A0E1           MOV      R0,R4
   \   0000146C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001470   0080B0E1           MOVS     R8,R0
   \   00001474   6400000A           BEQ      ??doItemJob_108
    879          	{
    880          		if(isCurrectItem(p1))
   \                     ??doItemJob_107:
   \   00001478   0800A0E1           MOV      R0,R8
   \   0000147C   ........           BL       isCurrectItem
   \   00001480   000050E3           CMP      R0,#+0
   \   00001484   6000000A           BEQ      ??doItemJob_108
    881          		{
    882          		DATA_SL *sl=malloc(sizeof(DATA_SL));
   \   00001488   0300A0E3           MOV      R0,#+3
   \   0000148C   140000EF           SWI      +20
   \   00001490   00A0A0E1           MOV      R10,R0
    883          		sl->initData=0;
   \   00001494   0290CAE5           STRB     R9,[R10, #+2]
    884          		sl->max=0;
   \   00001498   0190CAE5           STRB     R9,[R10, #+1]
    885          		sl->min=0;
   \   0000149C   0090CAE5           STRB     R9,[R10, #+0]
    886          		pp=gotoRealPos(p1);
   \   000014A0   0800A0E1           MOV      R0,R8
   \   000014A4   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000014A8   0080A0E1           MOV      R8,R0
    887          		p1=gotoMyStrStart(pp);
   \   000014AC   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   000014B0   00B0A0E1           MOV      R11,R0
    888          		p2=gotoMyStrEnd(pp);
   \   000014B4   0800A0E1           MOV      R0,R8
   \   000014B8   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    889          		strnCopyWithEnd(temp, p1, p2-p1);
   \   000014BC   0B2040E0           SUB      R2,R0,R11
   \   000014C0   0B10A0E1           MOV      R1,R11
   \   000014C4   08008DE2           ADD      R0,SP,#+8
   \   000014C8   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    890          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   000014CC   0710A0E1           MOV      R1,R7
   \   000014D0   0400A0E1           MOV      R0,R4
   \   000014D4   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000014D8   000050E3           CMP      R0,#+0
   \   000014DC   0400001A           BNE      ??doItemJob_109
   \   000014E0   0610A0E1           MOV      R1,R6
   \   000014E4   0400A0E1           MOV      R0,R4
   \   000014E8   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000014EC   000050E3           CMP      R0,#+0
   \   000014F0   0900000A           BEQ      ??doItemJob_110
    891          		{
    892          			pp=gotoRealPos(p1);
   \                     ??doItemJob_109:
   \   000014F4   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000014F8   0080A0E1           MOV      R8,R0
    893          			str2num_char(pp, &sl->initData, 0, 0, 0);
   \   000014FC   0000A0E3           MOV      R0,#+0
   \   00001500   01002DE9           PUSH     {R0}
   \   00001504   0030A0E1           MOV      R3,R0
   \   00001508   0020A0E1           MOV      R2,R0
   \   0000150C   02108AE2           ADD      R1,R10,#+2
   \   00001510   0800A0E1           MOV      R0,R8
   \   00001514   ........           _BLF     str2num_char,??str2num_char??rA
   \   00001518   04D08DE2           ADD      SP,SP,#+4
    894          		}
    895          		if((p1=strstrInQuote(p, STR_RANGE1))||(p1=strstrInQuote(p, STR_RANGE2)))
   \                     ??doItemJob_110:
   \   0000151C   B8189FE5           LDR      R1,??doItemJob_77+0x14  ;; STR_RANGE1
   \   00001520   0400A0E1           MOV      R0,R4
   \   00001524   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001528   0080B0E1           MOVS     R8,R0
   \   0000152C   0400001A           BNE      ??doItemJob_111
   \   00001530   A8189FE5           LDR      R1,??doItemJob_77+0x18  ;; STR_RANGE2
   \   00001534   0400A0E1           MOV      R0,R4
   \   00001538   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000153C   0080B0E1           MOVS     R8,R0
   \   00001540   2000000A           BEQ      ??doItemJob_112
    896          		{
    897          			pp=gotoRealPos(p1);
   \                     ??doItemJob_111:
   \   00001544   0800A0E1           MOV      R0,R8
   \   00001548   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000154C   0080A0E1           MOV      R8,R0
    898          			str2num_char(pp, &sl->min,0,0, 0);
   \   00001550   0000A0E3           MOV      R0,#+0
   \   00001554   01002DE9           PUSH     {R0}
   \   00001558   0030A0E1           MOV      R3,R0
   \   0000155C   0020A0E1           MOV      R2,R0
   \   00001560   0A10A0E1           MOV      R1,R10
   \   00001564   0800A0E1           MOV      R0,R8
   \   00001568   ........           _BLF     str2num_char,??str2num_char??rA
   \   0000156C   04D08DE2           ADD      SP,SP,#+4
   \   00001570   000000EA           B        ??doItemJob_113
    899          			while(*pp>='0'&&*pp<='9') //leave min
    900          				pp++;
   \                     ??doItemJob_114:
   \   00001574   018088E2           ADD      R8,R8,#+1
   \                     ??doItemJob_113:
   \   00001578   0000D8E5           LDRB     R0,[R8, #+0]
   \   0000157C   300050E3           CMP      R0,#+48
   \   00001580   0100003A           BCC      ??doItemJob_115
   \   00001584   3A0050E3           CMP      R0,#+58
   \   00001588   F9FFFF3A           BCC      ??doItemJob_114
    901          			while(*pp<'0'||*pp>'9') //to max
   \                     ??doItemJob_115:
   \   0000158C   0000D8E5           LDRB     R0,[R8, #+0]
   \   00001590   300050E3           CMP      R0,#+48
   \   00001594   0100003A           BCC      ??doItemJob_116
   \   00001598   3A0050E3           CMP      R0,#+58
   \   0000159C   0100003A           BCC      ??doItemJob_117
    902          				pp++;
   \                     ??doItemJob_116:
   \   000015A0   018088E2           ADD      R8,R8,#+1
   \   000015A4   F8FFFFEA           B        ??doItemJob_115
    903          			str2num_char(pp, &sl->max,0,0, 0);
   \                     ??doItemJob_117:
   \   000015A8   0000A0E3           MOV      R0,#+0
   \   000015AC   01002DE9           PUSH     {R0}
   \   000015B0   0030A0E1           MOV      R3,R0
   \   000015B4   0020A0E1           MOV      R2,R0
   \   000015B8   01108AE2           ADD      R1,R10,#+1
   \   000015BC   0800A0E1           MOV      R0,R8
   \   000015C0   ........           _BLF     str2num_char,??str2num_char??rA
   \   000015C4   04D08DE2           ADD      SP,SP,#+4
    904          		}
    905          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_112:
   \   000015C8   010084E2           ADD      R0,R4,#+1
   \   000015CC   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000015D0   0040A0E1           MOV      R4,R0
    906          		str2num(pp, &bytePos,0,0, 0);
   \   000015D4   0000A0E3           MOV      R0,#+0
   \   000015D8   01002DE9           PUSH     {R0}
   \   000015DC   0030A0E1           MOV      R3,R0
   \   000015E0   0020A0E1           MOV      R2,R0
   \   000015E4   04108DE2           ADD      R1,SP,#+4
   \   000015E8   0400A0E1           MOV      R0,R4
   \   000015EC   ........           _BLF     str2num,??str2num??rA
    907          		addItemToConfig(sl, subMenu, TYPE_SL, bytePos+ptcfgtop->offset, temp);
   \   000015F0   ........           LDR      R1,??DataTable16  ;; ptcfgtop
   \   000015F4   0C008DE2           ADD      R0,SP,#+12
   \   000015F8   01002DE9           PUSH     {R0}
   \   000015FC   08009DE5           LDR      R0,[SP, #+8]
   \   00001600   001091E5           LDR      R1,[R1, #+0]
   \   00001604   1120A0E3           MOV      R2,#+17
   \   00001608   E60100EA           B        ??doItemJob_35
    908          		return;
    909          		}
    910          	}
    911          	if((p1=strstrInQuote(p, STR_USETEMPLATE1))||(p1=strstrInQuote(p, STR_USRTEMPLATE2)))
   \                     ??doItemJob_108:
   \   0000160C   D0179FE5           LDR      R1,??doItemJob_77+0x1C  ;; STR_USETEMPLATE1
   \   00001610   0400A0E1           MOV      R0,R4
   \   00001614   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001618   0080B0E1           MOVS     R8,R0
   \   0000161C   0400001A           BNE      ??doItemJob_118
   \   00001620   C0179FE5           LDR      R1,??doItemJob_77+0x20  ;; STR_USRTEMPLATE2
   \   00001624   0400A0E1           MOV      R0,R4
   \   00001628   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000162C   0080B0E1           MOVS     R8,R0
   \   00001630   3500000A           BEQ      ??doItemJob_119
    912          	{
    913          		if(isCurrectItem(p1))
   \                     ??doItemJob_118:
   \   00001634   0800A0E1           MOV      R0,R8
   \   00001638   ........           BL       isCurrectItem
   \   0000163C   000050E3           CMP      R0,#+0
   \   00001640   3100000A           BEQ      ??doItemJob_119
    914          		{
    915          		//DATA_USETP *usetp=malloc(sizeof(DATA_USETP));
    916          		//usetp->tpName[0]=0;
    917          		PATCH_TP *tpl;
    918          		pp=gotoRealPos(p1);
   \   00001644   0800A0E1           MOV      R0,R8
   \   00001648   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000164C   0060A0E1           MOV      R6,R0
    919          		p1=gotoMyStrStart(pp);
   \   00001650   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00001654   0080A0E1           MOV      R8,R0
    920          		p2=gotoMyStrEnd(pp);
   \   00001658   0600A0E1           MOV      R0,R6
   \   0000165C   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    921          		strnCopyWithEnd(temp, p1, p2-p1);
   \   00001660   082040E0           SUB      R2,R0,R8
   \   00001664   0810A0E1           MOV      R1,R8
   \   00001668   08008DE2           ADD      R0,SP,#+8
   \   0000166C   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    922          		pp=gotoRealPos(p+1);
   \   00001670   010084E2           ADD      R0,R4,#+1
   \   00001674   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001678   0040A0E1           MOV      R4,R0
    923          		str2num(pp, &bytePos,0,0, 0);
   \   0000167C   0000A0E3           MOV      R0,#+0
   \   00001680   01002DE9           PUSH     {R0}
   \   00001684   0030A0E1           MOV      R3,R0
   \   00001688   0020A0E1           MOV      R2,R0
   \   0000168C   04108DE2           ADD      R1,SP,#+4
   \   00001690   0400A0E1           MOV      R0,R4
   \   00001694   ........           _BLF     str2num,??str2num??rA
    924          		if(tpl=findTemplate(ptcfgtop, temp))
   \   00001698   ........           LDR      R0,??DataTable16  ;; ptcfgtop
   \   0000169C   0C108DE2           ADD      R1,SP,#+12
   \   000016A0   000090E5           LDR      R0,[R0, #+0]
   \   000016A4   ........           BL       findTemplate
   \   000016A8   000050E3           CMP      R0,#+0
   \   000016AC   04D08DE2           ADD      SP,SP,#+4
   \   000016B0   C201000A           BEQ      ??doItemJob_120
    925          			subMenuCopy(subMenu, (PATCH_SUBMENU *)tpl, bytePos+ptcfgtop->offset);
   \   000016B4   ........           LDR      R2,??DataTable16  ;; ptcfgtop
   \   000016B8   00109DE5           LDR      R1,[SP, #+0]
   \   000016BC   002092E5           LDR      R2,[R2, #+0]
   \   000016C0   182092E5           LDR      R2,[R2, #+24]
   \   000016C4   012082E0           ADD      R2,R2,R1
   \   000016C8   0010A0E1           MOV      R1,R0
   \   000016CC   0500A0E1           MOV      R0,R5
   \   000016D0   ........           BL       subMenuCopy
   \                     ??doItemJob_9:
   \   000016D4   88D08DE2           ADD      SP,SP,#+136
   \   000016D8   F08FBDE8           POP      {R4-R11,PC}
   \                     ??doItemJob_48:
   \   000016DC   6D6C3D00           DC8      "ml="
   \   000016E0   ........           DC32     `?<Constant " option ">`
   \   000016E4   ........           DC32     STR_CHOICE
   \   000016E8   ........           DC32     `?<Constant " co ">`
   \   000016EC   ........           DC32     `?<Constant " color ">`
   \   000016F0   ........           DC32     `?<Constant " address ">`
   \   000016F4   ........           DC32     `?<Constant " sf ">`
   \   000016F8   ........           DC32     `?<Constant " selectfile ">`
   \   000016FC   ........           DC32     `?<Constant "mask=">`
   \   00001700   ........           DC32     `?<Constant "maxlen=">`
   \   00001704   ........           DC32     `?<Constant " sd ">`
   \   00001708   ........           DC32     `?<Constant " selectdir ">`
    926          		return;
    927          		}
    928          	}
    929          	if((p1=strstrInQuote(p, STR_MS1))||(p1=strstrInQuote(p, STR_MS2)))
   \                     ??doItemJob_119:
   \   0000170C   D8169FE5           LDR      R1,??doItemJob_77+0x24  ;; STR_MS1
   \   00001710   0400A0E1           MOV      R0,R4
   \   00001714   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001718   0080B0E1           MOVS     R8,R0
   \   0000171C   0400001A           BNE      ??doItemJob_121
   \   00001720   C8169FE5           LDR      R1,??doItemJob_77+0x28  ;; STR_MS2
   \   00001724   0400A0E1           MOV      R0,R4
   \   00001728   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000172C   0080B0E1           MOVS     R8,R0
   \   00001730   3800000A           BEQ      ??doItemJob_122
    930          	{
    931          		if(isCurrectItem(p1))
   \                     ??doItemJob_121:
   \   00001734   0800A0E1           MOV      R0,R8
   \   00001738   ........           BL       isCurrectItem
   \   0000173C   000050E3           CMP      R0,#+0
   \   00001740   3400000A           BEQ      ??doItemJob_122
    932          		{
    933          		DATA_MS *ms=malloc(sizeof(DATA_MS));
   \   00001744   0400A0E3           MOV      R0,#+4
   \   00001748   140000EF           SWI      +20
   \   0000174C   00A0A0E1           MOV      R10,R0
    934          		ms->ms=0;
   \   00001750   00908AE5           STR      R9,[R10, #+0]
    935          		pp=gotoRealPos(p1);
   \   00001754   0800A0E1           MOV      R0,R8
   \   00001758   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000175C   0080A0E1           MOV      R8,R0
    936          		p1=gotoMyStrStart(pp);
   \   00001760   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00001764   00B0A0E1           MOV      R11,R0
    937          		p2=gotoMyStrEnd(pp);
   \   00001768   0800A0E1           MOV      R0,R8
   \   0000176C   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    938          		strnCopyWithEnd(temp, p1, p2-p1);
   \   00001770   0B2040E0           SUB      R2,R0,R11
   \   00001774   0B10A0E1           MOV      R1,R11
   \   00001778   08008DE2           ADD      R0,SP,#+8
   \   0000177C   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    939          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   00001780   0710A0E1           MOV      R1,R7
   \   00001784   0400A0E1           MOV      R0,R4
   \   00001788   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000178C   0080B0E1           MOVS     R8,R0
   \   00001790   0400001A           BNE      ??doItemJob_123
   \   00001794   0610A0E1           MOV      R1,R6
   \   00001798   0400A0E1           MOV      R0,R4
   \   0000179C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000017A0   0080B0E1           MOVS     R8,R0
   \   000017A4   0A00000A           BEQ      ??doItemJob_124
    940          		{
    941          			pp=gotoRealPos(p1);
   \                     ??doItemJob_123:
   \   000017A8   0800A0E1           MOV      R0,R8
   \   000017AC   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000017B0   0080A0E1           MOV      R8,R0
    942          			str2num(pp, (int *)&ms->ms, 0, 0, 0);
   \   000017B4   0000A0E3           MOV      R0,#+0
   \   000017B8   01002DE9           PUSH     {R0}
   \   000017BC   0030A0E1           MOV      R3,R0
   \   000017C0   0020A0E1           MOV      R2,R0
   \   000017C4   0A10A0E1           MOV      R1,R10
   \   000017C8   0800A0E1           MOV      R0,R8
   \   000017CC   ........           _BLF     str2num,??str2num??rA
   \   000017D0   04D08DE2           ADD      SP,SP,#+4
    943          		}
    944          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_124:
   \   000017D4   010084E2           ADD      R0,R4,#+1
   \   000017D8   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000017DC   0040A0E1           MOV      R4,R0
    945          		str2num(pp, &bytePos,0,0, 0);
   \   000017E0   0000A0E3           MOV      R0,#+0
   \   000017E4   01002DE9           PUSH     {R0}
   \   000017E8   0030A0E1           MOV      R3,R0
   \   000017EC   0020A0E1           MOV      R2,R0
   \   000017F0   04108DE2           ADD      R1,SP,#+4
   \   000017F4   0400A0E1           MOV      R0,R4
   \   000017F8   ........           _BLF     str2num,??str2num??rA
    946          		addItemToConfig(ms, subMenu, TYPE_MS, bytePos+ptcfgtop->offset, temp);
   \   000017FC   ........           LDR      R1,??DataTable16  ;; ptcfgtop
   \   00001800   0C008DE2           ADD      R0,SP,#+12
   \   00001804   01002DE9           PUSH     {R0}
   \   00001808   08009DE5           LDR      R0,[SP, #+8]
   \   0000180C   001091E5           LDR      R1,[R1, #+0]
   \   00001810   0F20A0E3           MOV      R2,#+15
   \   00001814   630100EA           B        ??doItemJob_35
    947          		return;
    948          		}
    949          	}
    950          	if((p1=strstrInQuote(p, STR_BYTES1))||(p1=strstrInQuote(p, STR_BYTES2)))
   \                     ??doItemJob_122:
   \   00001818   D4159FE5           LDR      R1,??doItemJob_77+0x2C  ;; STR_BYTES1
   \   0000181C   0400A0E1           MOV      R0,R4
   \   00001820   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001824   0080B0E1           MOVS     R8,R0
   \   00001828   0400001A           BNE      ??doItemJob_125
   \   0000182C   C4159FE5           LDR      R1,??doItemJob_77+0x30  ;; STR_BYTES2
   \   00001830   0400A0E1           MOV      R0,R4
   \   00001834   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001838   0080B0E1           MOVS     R8,R0
   \   0000183C   7F00000A           BEQ      ??doItemJob_126
    951          	{
    952          		char *p3=p1;
   \                     ??doItemJob_125:
   \   00001840   04808DE5           STR      R8,[SP, #+4]
   \   00001844   040000EA           B        ??doItemJob_127
    953          		while(*p3)
    954          		{
    955          			if(*p3==')')
    956          				break;
    957          			if(*p3=='}')
   \                     ??doItemJob_128:
   \   00001848   04109DE5           LDR      R1,[SP, #+4]
   \   0000184C   ........           LDRB     R2,[R1], #+1
   \   00001850   04108DE5           STR      R1,[SP, #+4]
   \   00001854   7D0052E3           CMP      R2,#+125
   \   00001858   5801000A           BEQ      ??doItemJob_120
   \                     ??doItemJob_127:
   \   0000185C   04009DE5           LDR      R0,[SP, #+4]
   \   00001860   0000D0E5           LDRB     R0,[R0, #+0]
   \   00001864   000050E3           CMP      R0,#+0
   \   00001868   29005013           CMPNE    R0,#+41
   \   0000186C   F5FFFF1A           BNE      ??doItemJob_128
    958          				return;
    959          			p3++;
    960          		}
    961          		p3++;
    962          		if(isCurrectItem(p3))
   \   00001870   04009DE5           LDR      R0,[SP, #+4]
   \   00001874   010080E2           ADD      R0,R0,#+1
   \   00001878   04008DE5           STR      R0,[SP, #+4]
   \   0000187C   ........           BL       isCurrectItem
   \   00001880   000050E3           CMP      R0,#+0
   \   00001884   6D00000A           BEQ      ??doItemJob_126
    963          		{
    964          		int i=0;
   \   00001888   00B0A0E3           MOV      R11,#+0
    965          		//char c;
    966          		DATA_BYTES *dbytes=malloc(sizeof(DATA_BYTES));
   \   0000188C   8800A0E3           MOV      R0,#+136
   \   00001890   140000EF           SWI      +20
   \   00001894   00A0A0E1           MOV      R10,R0
    967          		dbytes->min=0;
   \   00001898   0090CAE5           STRB     R9,[R10, #+0]
    968          		dbytes->max=127;
   \   0000189C   7F00A0E3           MOV      R0,#+127
   \   000018A0   0100CAE5           STRB     R0,[R10, #+1]
    969          		dbytes->len=0;
   \   000018A4   04908AE5           STR      R9,[R10, #+4]
    970          		for(;i<128;i++)
    971          			dbytes->bytes[i]=0;
   \                     ??doItemJob_129:
   \   000018A8   0A008BE0           ADD      R0,R11,R10
   \   000018AC   0890C0E5           STRB     R9,[R0, #+8]
   \   000018B0   01B08BE2           ADD      R11,R11,#+1
   \   000018B4   80005BE3           CMP      R11,#+128
   \   000018B8   FAFFFFBA           BLT      ??doItemJob_129
    972          		pp=gotoRealPos(p1);
   \   000018BC   0800A0E1           MOV      R0,R8
   \   000018C0   ........           _BLF     gotoRealPos,??gotoRealPos??rA
    973          		str2num(pp, &dbytes->len, 0, 0, 0);
   \   000018C4   0010A0E3           MOV      R1,#+0
   \   000018C8   02002DE9           PUSH     {R1}
   \   000018CC   0130A0E1           MOV      R3,R1
   \   000018D0   0120A0E1           MOV      R2,R1
   \   000018D4   04108AE2           ADD      R1,R10,#+4
   \   000018D8   ........           _BLF     str2num,??str2num??rA
    974          		if((dbytes->len)>128)
   \   000018DC   04009AE5           LDR      R0,[R10, #+4]
   \   000018E0   04D08DE2           ADD      SP,SP,#+4
   \   000018E4   810050E3           CMP      R0,#+129
    975          			dbytes->len=128;
   \   000018E8   8000A0A3           MOVGE    R0,#+128
   \   000018EC   04008AA5           STRGE    R0,[R10, #+4]
    976          		pp=gotoRealPos(p3);
   \   000018F0   04009DE5           LDR      R0,[SP, #+4]
   \   000018F4   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   000018F8   0080A0E1           MOV      R8,R0
    977          		p1=gotoMyStrStart(pp);
   \   000018FC   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00001900   00B0A0E1           MOV      R11,R0
    978          		p2=gotoMyStrEnd(pp);
   \   00001904   0800A0E1           MOV      R0,R8
   \   00001908   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
    979          		strnCopyWithEnd(temp, p1, p2-p1);
   \   0000190C   0B2040E0           SUB      R2,R0,R11
   \   00001910   0B10A0E1           MOV      R1,R11
   \   00001914   08008DE2           ADD      R0,SP,#+8
   \   00001918   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
    980          		if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   0000191C   0710A0E1           MOV      R1,R7
   \   00001920   0400A0E1           MOV      R0,R4
   \   00001924   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001928   000050E3           CMP      R0,#+0
   \   0000192C   0400001A           BNE      ??doItemJob_130
   \   00001930   0610A0E1           MOV      R1,R6
   \   00001934   0400A0E1           MOV      R0,R4
   \   00001938   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000193C   000050E3           CMP      R0,#+0
   \   00001940   0300000A           BEQ      ??doItemJob_131
    981          		{
    982          			//pp=gotoRealPos(p1);
    983          			str2bytes(dbytes->bytes, p1, dbytes->len);
   \                     ??doItemJob_130:
   \   00001944   04209AE5           LDR      R2,[R10, #+4]
   \   00001948   0010A0E1           MOV      R1,R0
   \   0000194C   08008AE2           ADD      R0,R10,#+8
   \   00001950   ........           _BLF     str2bytes,??str2bytes??rA
    984          		}
    985          		if((p1=strstrInQuote(p, STR_RANGE1))||(p1=strstrInQuote(p, STR_RANGE2)))
   \                     ??doItemJob_131:
   \   00001954   80149FE5           LDR      R1,??doItemJob_77+0x14  ;; STR_RANGE1
   \   00001958   0400A0E1           MOV      R0,R4
   \   0000195C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001960   0080B0E1           MOVS     R8,R0
   \   00001964   0400001A           BNE      ??doItemJob_132
   \   00001968   70149FE5           LDR      R1,??doItemJob_77+0x18  ;; STR_RANGE2
   \   0000196C   0400A0E1           MOV      R0,R4
   \   00001970   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001974   0080B0E1           MOVS     R8,R0
   \   00001978   1F00000A           BEQ      ??doItemJob_133
    986          		{
    987          			pp=gotoRealPos(p1);
   \                     ??doItemJob_132:
   \   0000197C   0800A0E1           MOV      R0,R8
   \   00001980   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001984   0080A0E1           MOV      R8,R0
    988          			str2num_char(pp, &dbytes->min, 0xFF, 0, 0);
   \   00001988   0000A0E3           MOV      R0,#+0
   \   0000198C   01002DE9           PUSH     {R0}
   \   00001990   0030A0E1           MOV      R3,R0
   \   00001994   FF20A0E3           MOV      R2,#+255
   \   00001998   0A10A0E1           MOV      R1,R10
   \   0000199C   0800A0E1           MOV      R0,R8
   \   000019A0   ........           _BLF     str2num_char,??str2num_char??rA
   \   000019A4   04D08DE2           ADD      SP,SP,#+4
   \   000019A8   000000EA           B        ??doItemJob_134
    989          			//while(*pp>='0'&&*pp<='9') //leave min
    990          			//	pp++;
    991          			while(*pp&&*pp!='.')
    992          				pp++;
   \                     ??doItemJob_135:
   \   000019AC   018088E2           ADD      R8,R8,#+1
   \                     ??doItemJob_134:
   \   000019B0   0000D8E5           LDRB     R0,[R8, #+0]
   \   000019B4   000050E3           CMP      R0,#+0
   \   000019B8   2E005013           CMPNE    R0,#+46
   \   000019BC   FAFFFF1A           BNE      ??doItemJob_135
    993          			while(*pp<'0'||*pp>'9') //to max
   \                     ??doItemJob_136:
   \   000019C0   0000D8E5           LDRB     R0,[R8, #+0]
   \   000019C4   300050E3           CMP      R0,#+48
   \   000019C8   0100003A           BCC      ??doItemJob_137
   \   000019CC   3A0050E3           CMP      R0,#+58
   \   000019D0   0100003A           BCC      ??doItemJob_138
    994          				pp++;
   \                     ??doItemJob_137:
   \   000019D4   018088E2           ADD      R8,R8,#+1
   \   000019D8   F8FFFFEA           B        ??doItemJob_136
    995          			str2num_char(pp, &dbytes->max, 0xFF, 0, 0);
   \                     ??doItemJob_138:
   \   000019DC   0000A0E3           MOV      R0,#+0
   \   000019E0   01002DE9           PUSH     {R0}
   \   000019E4   0030A0E1           MOV      R3,R0
   \   000019E8   FF20A0E3           MOV      R2,#+255
   \   000019EC   01108AE2           ADD      R1,R10,#+1
   \   000019F0   0800A0E1           MOV      R0,R8
   \   000019F4   ........           _BLF     str2num_char,??str2num_char??rA
   \   000019F8   04D08DE2           ADD      SP,SP,#+4
    996          		}
    997          		pp=gotoRealPos(p+1);
   \                     ??doItemJob_133:
   \   000019FC   010084E2           ADD      R0,R4,#+1
   \   00001A00   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001A04   0040A0E1           MOV      R4,R0
    998          		str2num(pp, &bytePos, 0, 0, 0);
   \   00001A08   0000A0E3           MOV      R0,#+0
   \   00001A0C   01002DE9           PUSH     {R0}
   \   00001A10   0030A0E1           MOV      R3,R0
   \   00001A14   0020A0E1           MOV      R2,R0
   \   00001A18   04108DE2           ADD      R1,SP,#+4
   \   00001A1C   0400A0E1           MOV      R0,R4
   \   00001A20   ........           _BLF     str2num,??str2num??rA
    999          		addItemToConfig(dbytes, subMenu, TYPE_BYTES, bytePos+ptcfgtop->offset, temp);
   \   00001A24   ........           LDR      R1,??DataTable16  ;; ptcfgtop
   \   00001A28   0C008DE2           ADD      R0,SP,#+12
   \   00001A2C   01002DE9           PUSH     {R0}
   \   00001A30   08009DE5           LDR      R0,[SP, #+8]
   \   00001A34   001091E5           LDR      R1,[R1, #+0]
   \   00001A38   1020A0E3           MOV      R2,#+16
   \   00001A3C   D90000EA           B        ??doItemJob_35
   1000          		return;
   1001          		}
   1002          	}
   1003          	if((p1=strstrInQuote(p, STR_INTS1))||(p1=strstrInQuote(p, STR_INTS2)))
   \                     ??doItemJob_126:
   \   00001A40   B4139FE5           LDR      R1,??doItemJob_77+0x34  ;; STR_INTS1
   \   00001A44   0400A0E1           MOV      R0,R4
   \   00001A48   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001A4C   0080B0E1           MOVS     R8,R0
   \   00001A50   0400001A           BNE      ??doItemJob_139
   \   00001A54   A4139FE5           LDR      R1,??doItemJob_77+0x38  ;; STR_INTS2
   \   00001A58   0400A0E1           MOV      R0,R4
   \   00001A5C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001A60   0080B0E1           MOVS     R8,R0
   \   00001A64   7F00000A           BEQ      ??doItemJob_140
   1004          	{
   1005          		char *p3=p1;
   \                     ??doItemJob_139:
   \   00001A68   04808DE5           STR      R8,[SP, #+4]
   \   00001A6C   040000EA           B        ??doItemJob_141
   1006          		while(*p3)
   1007          		{
   1008          			if(*p3==')')
   1009          				break;
   1010          			if(*p3=='}')
   \                     ??doItemJob_142:
   \   00001A70   04109DE5           LDR      R1,[SP, #+4]
   \   00001A74   ........           LDRB     R2,[R1], #+1
   \   00001A78   04108DE5           STR      R1,[SP, #+4]
   \   00001A7C   7D0052E3           CMP      R2,#+125
   \   00001A80   CE00000A           BEQ      ??doItemJob_120
   \                     ??doItemJob_141:
   \   00001A84   04009DE5           LDR      R0,[SP, #+4]
   \   00001A88   0000D0E5           LDRB     R0,[R0, #+0]
   \   00001A8C   000050E3           CMP      R0,#+0
   \   00001A90   29005013           CMPNE    R0,#+41
   \   00001A94   F5FFFF1A           BNE      ??doItemJob_142
   1011          				return;
   1012          			p3++;
   1013          		}
   1014          		p3++;
   1015          		if(isCurrectItem(p3))
   \   00001A98   04009DE5           LDR      R0,[SP, #+4]
   \   00001A9C   010080E2           ADD      R0,R0,#+1
   \   00001AA0   04008DE5           STR      R0,[SP, #+4]
   \   00001AA4   ........           BL       isCurrectItem
   \   00001AA8   000050E3           CMP      R0,#+0
   \   00001AAC   6D00000A           BEQ      ??doItemJob_140
   1016          		{
   1017          			int i=0;
   \   00001AB0   00B0A0E3           MOV      R11,#+0
   1018          			//char c;
   1019          			DATA_INTS *dints=malloc(sizeof(DATA_INTS));
   \   00001AB4   830FA0E3           MOV      R0,#+524
   \   00001AB8   140000EF           SWI      +20
   \   00001ABC   00A0A0E1           MOV      R10,R0
   1020          			dints->min=0;
   \   00001AC0   00908AE5           STR      R9,[R10, #+0]
   1021          			dints->max=127;
   \   00001AC4   7F00A0E3           MOV      R0,#+127
   \   00001AC8   04008AE5           STR      R0,[R10, #+4]
   1022          			dints->len=0;
   \   00001ACC   08908AE5           STR      R9,[R10, #+8]
   1023          			for(;i<128;i++)
   1024          				dints->ints[i]=0;
   \                     ??doItemJob_143:
   \   00001AD0   0B018AE0           ADD      R0,R10,R11, LSL #+2
   \   00001AD4   0C9080E5           STR      R9,[R0, #+12]
   \   00001AD8   01B08BE2           ADD      R11,R11,#+1
   \   00001ADC   80005BE3           CMP      R11,#+128
   \   00001AE0   FAFFFFBA           BLT      ??doItemJob_143
   1025          			pp=gotoRealPos(p1);
   \   00001AE4   0800A0E1           MOV      R0,R8
   \   00001AE8   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   1026          			str2num(pp, &dints->len, 0, 0, 0);
   \   00001AEC   0010A0E3           MOV      R1,#+0
   \   00001AF0   02002DE9           PUSH     {R1}
   \   00001AF4   0130A0E1           MOV      R3,R1
   \   00001AF8   0120A0E1           MOV      R2,R1
   \   00001AFC   08108AE2           ADD      R1,R10,#+8
   \   00001B00   ........           _BLF     str2num,??str2num??rA
   1027          			if((dints->len)>128)
   \   00001B04   08009AE5           LDR      R0,[R10, #+8]
   \   00001B08   04D08DE2           ADD      SP,SP,#+4
   \   00001B0C   810050E3           CMP      R0,#+129
   1028          				dints->len=128;
   \   00001B10   8000A0A3           MOVGE    R0,#+128
   \   00001B14   08008AA5           STRGE    R0,[R10, #+8]
   1029          			pp=gotoRealPos(p3);
   \   00001B18   04009DE5           LDR      R0,[SP, #+4]
   \   00001B1C   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001B20   0080A0E1           MOV      R8,R0
   1030          			p1=gotoMyStrStart(pp);
   \   00001B24   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00001B28   00B0A0E1           MOV      R11,R0
   1031          			p2=gotoMyStrEnd(pp);
   \   00001B2C   0800A0E1           MOV      R0,R8
   \   00001B30   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
   1032          			strnCopyWithEnd(temp, p1, p2-p1);
   \   00001B34   0B2040E0           SUB      R2,R0,R11
   \   00001B38   0B10A0E1           MOV      R1,R11
   \   00001B3C   08008DE2           ADD      R0,SP,#+8
   \   00001B40   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
   1033          			if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   00001B44   0710A0E1           MOV      R1,R7
   \   00001B48   0400A0E1           MOV      R0,R4
   \   00001B4C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001B50   000050E3           CMP      R0,#+0
   \   00001B54   0400001A           BNE      ??doItemJob_144
   \   00001B58   0610A0E1           MOV      R1,R6
   \   00001B5C   0400A0E1           MOV      R0,R4
   \   00001B60   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001B64   000050E3           CMP      R0,#+0
   \   00001B68   0300000A           BEQ      ??doItemJob_145
   1034          			{
   1035          				str2ints(dints->ints, p1, dints->len);
   \                     ??doItemJob_144:
   \   00001B6C   08209AE5           LDR      R2,[R10, #+8]
   \   00001B70   0010A0E1           MOV      R1,R0
   \   00001B74   0C008AE2           ADD      R0,R10,#+12
   \   00001B78   ........           _BLF     str2ints,??str2ints??rA
   1036          			}
   1037          			if((p1=strstrInQuote(p, STR_RANGE1))||(p1=strstrInQuote(p, STR_RANGE2)))
   \                     ??doItemJob_145:
   \   00001B7C   58129FE5           LDR      R1,??doItemJob_77+0x14  ;; STR_RANGE1
   \   00001B80   0400A0E1           MOV      R0,R4
   \   00001B84   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001B88   0080B0E1           MOVS     R8,R0
   \   00001B8C   0400001A           BNE      ??doItemJob_146
   \   00001B90   48129FE5           LDR      R1,??doItemJob_77+0x18  ;; STR_RANGE2
   \   00001B94   0400A0E1           MOV      R0,R4
   \   00001B98   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001B9C   0080B0E1           MOVS     R8,R0
   \   00001BA0   1F00000A           BEQ      ??doItemJob_147
   1038          			{
   1039          				pp=gotoRealPos(p1);
   \                     ??doItemJob_146:
   \   00001BA4   0800A0E1           MOV      R0,R8
   \   00001BA8   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001BAC   0080A0E1           MOV      R8,R0
   1040          				str2num(pp, &dints->min, 0xFF, 0, 0);
   \   00001BB0   0000A0E3           MOV      R0,#+0
   \   00001BB4   01002DE9           PUSH     {R0}
   \   00001BB8   0030A0E1           MOV      R3,R0
   \   00001BBC   FF20A0E3           MOV      R2,#+255
   \   00001BC0   0A10A0E1           MOV      R1,R10
   \   00001BC4   0800A0E1           MOV      R0,R8
   \   00001BC8   ........           _BLF     str2num,??str2num??rA
   \   00001BCC   04D08DE2           ADD      SP,SP,#+4
   \   00001BD0   000000EA           B        ??doItemJob_148
   1041          				while(*pp&&*pp!='.')
   1042          					pp++;
   \                     ??doItemJob_149:
   \   00001BD4   018088E2           ADD      R8,R8,#+1
   \                     ??doItemJob_148:
   \   00001BD8   0000D8E5           LDRB     R0,[R8, #+0]
   \   00001BDC   000050E3           CMP      R0,#+0
   \   00001BE0   2E005013           CMPNE    R0,#+46
   \   00001BE4   FAFFFF1A           BNE      ??doItemJob_149
   1043          				while(*pp<'0'||*pp>'9') //to max
   \                     ??doItemJob_150:
   \   00001BE8   0000D8E5           LDRB     R0,[R8, #+0]
   \   00001BEC   300050E3           CMP      R0,#+48
   \   00001BF0   0100003A           BCC      ??doItemJob_151
   \   00001BF4   3A0050E3           CMP      R0,#+58
   \   00001BF8   0100003A           BCC      ??doItemJob_152
   1044          					pp++;
   \                     ??doItemJob_151:
   \   00001BFC   018088E2           ADD      R8,R8,#+1
   \   00001C00   F8FFFFEA           B        ??doItemJob_150
   1045          				str2num(pp, &dints->max, 0xFF, 0, 0);
   \                     ??doItemJob_152:
   \   00001C04   0000A0E3           MOV      R0,#+0
   \   00001C08   01002DE9           PUSH     {R0}
   \   00001C0C   0030A0E1           MOV      R3,R0
   \   00001C10   FF20A0E3           MOV      R2,#+255
   \   00001C14   04108AE2           ADD      R1,R10,#+4
   \   00001C18   0800A0E1           MOV      R0,R8
   \   00001C1C   ........           _BLF     str2num,??str2num??rA
   \   00001C20   04D08DE2           ADD      SP,SP,#+4
   1046          			}
   1047          			pp=gotoRealPos(p+1);
   \                     ??doItemJob_147:
   \   00001C24   010084E2           ADD      R0,R4,#+1
   \   00001C28   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001C2C   0040A0E1           MOV      R4,R0
   1048          			str2num(pp, &bytePos, 0, 0, 0);
   \   00001C30   0000A0E3           MOV      R0,#+0
   \   00001C34   01002DE9           PUSH     {R0}
   \   00001C38   0030A0E1           MOV      R3,R0
   \   00001C3C   0020A0E1           MOV      R2,R0
   \   00001C40   04108DE2           ADD      R1,SP,#+4
   \   00001C44   0400A0E1           MOV      R0,R4
   \   00001C48   ........           _BLF     str2num,??str2num??rA
   1049          			addItemToConfig(dints, subMenu, TYPE_INTS, bytePos+ptcfgtop->offset, temp);
   \   00001C4C   ........           LDR      R1,??DataTable16  ;; ptcfgtop
   \   00001C50   0C008DE2           ADD      R0,SP,#+12
   \   00001C54   01002DE9           PUSH     {R0}
   \   00001C58   08009DE5           LDR      R0,[SP, #+8]
   \   00001C5C   001091E5           LDR      R1,[R1, #+0]
   \   00001C60   1220A0E3           MOV      R2,#+18
   \   00001C64   4F0000EA           B        ??doItemJob_35
   1050          			return;
   1051          		}
   1052          	}
   1053          	if(p1=strstrInQuote(p, STR_CONST))
   \                     ??doItemJob_140:
   \   00001C68   94119FE5           LDR      R1,??doItemJob_77+0x3C  ;; STR_CONST
   \   00001C6C   0400A0E1           MOV      R0,R4
   \   00001C70   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001C74   0080B0E1           MOVS     R8,R0
   \   00001C78   5000000A           BEQ      ??doItemJob_120
   1054          	{
   1055          		if(isCurrectItem(p1))
   \   00001C7C   ........           BL       isCurrectItem
   \   00001C80   000050E3           CMP      R0,#+0
   \   00001C84   4D00000A           BEQ      ??doItemJob_120
   1056          		{
   1057          			DATA_CONST *dconst=malloc(sizeof(DATA_CONST));
   \   00001C88   0800A0E3           MOV      R0,#+8
   \   00001C8C   140000EF           SWI      +20
   \   00001C90   00A0A0E1           MOV      R10,R0
   1058          			dconst->data=0;
   \   00001C94   00908AE5           STR      R9,[R10, #+0]
   1059          			dconst->len=1;
   \   00001C98   0100A0E3           MOV      R0,#+1
   \   00001C9C   04008AE5           STR      R0,[R10, #+4]
   1060          			pp=gotoRealPos(p1);
   \   00001CA0   0800A0E1           MOV      R0,R8
   \   00001CA4   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001CA8   0080A0E1           MOV      R8,R0
   1061          			p1=gotoMyStrStart(pp);
   \   00001CAC   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00001CB0   00B0A0E1           MOV      R11,R0
   1062          			p2=gotoMyStrEnd(pp);
   \   00001CB4   0800A0E1           MOV      R0,R8
   \   00001CB8   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
   1063          			strnCopyWithEnd(temp, p1, p2-p1);
   \   00001CBC   0B2040E0           SUB      R2,R0,R11
   \   00001CC0   0B10A0E1           MOV      R1,R11
   \   00001CC4   08008DE2           ADD      R0,SP,#+8
   \   00001CC8   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
   1064          			if((p1=strstrInQuote(p, STR_VL))||(p1=strstrInQuote(p, STR_VL1)))
   \   00001CCC   0710A0E1           MOV      R1,R7
   \   00001CD0   0400A0E1           MOV      R0,R4
   \   00001CD4   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001CD8   000050E3           CMP      R0,#+0
   \   00001CDC   0400001A           BNE      ??doItemJob_153
   \   00001CE0   0610A0E1           MOV      R1,R6
   \   00001CE4   0400A0E1           MOV      R0,R4
   \   00001CE8   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001CEC   000050E3           CMP      R0,#+0
   \   00001CF0   0900000A           BEQ      ??doItemJob_154
   1065          			{
   1066          				pp=gotoRealPos(p1);
   \                     ??doItemJob_153:
   \   00001CF4   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001CF8   0080A0E1           MOV      R8,R0
   1067          				str2num(pp, &dconst->data, 0, 0, 0);
   \   00001CFC   0000A0E3           MOV      R0,#+0
   \   00001D00   01002DE9           PUSH     {R0}
   \   00001D04   0030A0E1           MOV      R3,R0
   \   00001D08   0020A0E1           MOV      R2,R0
   \   00001D0C   0A10A0E1           MOV      R1,R10
   \   00001D10   0800A0E1           MOV      R0,R8
   \   00001D14   ........           _BLF     str2num,??str2num??rA
   \   00001D18   04D08DE2           ADD      SP,SP,#+4
   1068          			}
   1069          			if(p1=strstrInQuote(p, " size="))
   \                     ??doItemJob_154:
   \   00001D1C   E4109FE5           LDR      R1,??doItemJob_77+0x40  ;; `?<Constant " size=">`
   \   00001D20   0400A0E1           MOV      R0,R4
   \   00001D24   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00001D28   0080B0E1           MOVS     R8,R0
   \   00001D2C   0D00000A           BEQ      ??doItemJob_155
   1070          			{
   1071          				pp=gotoRealPos(p1);
   \   00001D30   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001D34   0080A0E1           MOV      R8,R0
   1072          				str2num(pp, &dconst->len, 0, 0, 0);
   \   00001D38   0000A0E3           MOV      R0,#+0
   \   00001D3C   01002DE9           PUSH     {R0}
   \   00001D40   0030A0E1           MOV      R3,R0
   \   00001D44   0020A0E1           MOV      R2,R0
   \   00001D48   04108AE2           ADD      R1,R10,#+4
   \   00001D4C   0800A0E1           MOV      R0,R8
   \   00001D50   ........           _BLF     str2num,??str2num??rA
   1073          				if(dconst->len>4)
   \   00001D54   04009AE5           LDR      R0,[R10, #+4]
   \   00001D58   04D08DE2           ADD      SP,SP,#+4
   \   00001D5C   050050E3           CMP      R0,#+5
   1074          					dconst->len=4;
   \   00001D60   0400A0A3           MOVGE    R0,#+4
   \   00001D64   04008AA5           STRGE    R0,[R10, #+4]
   1075          			}
   1076          			pp=gotoRealPos(p+1);
   \                     ??doItemJob_155:
   \   00001D68   010084E2           ADD      R0,R4,#+1
   \   00001D6C   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00001D70   0040A0E1           MOV      R4,R0
   1077          			str2num(pp, &bytePos,0,0, 0);
   \   00001D74   0000A0E3           MOV      R0,#+0
   \   00001D78   01002DE9           PUSH     {R0}
   \   00001D7C   0030A0E1           MOV      R3,R0
   \   00001D80   0020A0E1           MOV      R2,R0
   \   00001D84   04108DE2           ADD      R1,SP,#+4
   \   00001D88   0400A0E1           MOV      R0,R4
   \   00001D8C   ........           _BLF     str2num,??str2num??rA
   1078          			addItemToConfig(dconst, subMenu, TYPE_CONST, bytePos+ptcfgtop->offset, temp);
   \   00001D90   ........           LDR      R1,??DataTable16  ;; ptcfgtop
   \   00001D94   0C008DE2           ADD      R0,SP,#+12
   \   00001D98   01002DE9           PUSH     {R0}
   \   00001D9C   08009DE5           LDR      R0,[SP, #+8]
   \   00001DA0   001091E5           LDR      R1,[R1, #+0]
   \   00001DA4   1520A0E3           MOV      R2,#+21
   \                     ??doItemJob_35:
   \   00001DA8   181091E5           LDR      R1,[R1, #+24]
   \   00001DAC   003081E0           ADD      R3,R1,R0
   \   00001DB0   0510A0E1           MOV      R1,R5
   \   00001DB4   0A00A0E1           MOV      R0,R10
   \                     ??doItemJob_16:
   \   00001DB8   ........           BL       addItemToConfig
   1079          			return;
   \   00001DBC   08D08DE2           ADD      SP,SP,#+8
   \                     ??doItemJob_120:
   \   00001DC0   88D08DE2           ADD      SP,SP,#+136      ;; stack cleaning
   \   00001DC4   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??doItemJob_77:
   \   00001DC8   ........           DC32     `?<Constant " string ">`
   \   00001DCC   ........           DC32     `?<Constant " ustring ">`
   \   00001DD0   ........           DC32     `?<Constant " hex ">`
   \   00001DD4   ........           DC32     STR_SLIDER2
   \   00001DD8   ........           DC32     STR_SLIDER1
   \   00001DDC   ........           DC32     STR_RANGE1
   \   00001DE0   ........           DC32     STR_RANGE2
   \   00001DE4   ........           DC32     STR_USETEMPLATE1
   \   00001DE8   ........           DC32     STR_USRTEMPLATE2
   \   00001DEC   ........           DC32     STR_MS1
   \   00001DF0   ........           DC32     STR_MS2
   \   00001DF4   ........           DC32     STR_BYTES1
   \   00001DF8   ........           DC32     STR_BYTES2
   \   00001DFC   ........           DC32     STR_INTS1
   \   00001E00   ........           DC32     STR_INTS2
   \   00001E04   ........           DC32     STR_CONST
   \   00001E08   ........           DC32     `?<Constant " size=">`
   1080          		}
   1081          	}
   1082          }
   1083          
   1084          //解析SUBMENU，子菜单

   \                                 In segment CODE, align 4, keep-with-next
   1085          char *doSubMenuJob(PATCH_SUBMENU *motherMenu, char *pdata)
   1086          {
   \                     doSubMenuJob:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   1087          	char *p=pdata;
   1088          	char *pp;
   1089          	char *p1;
   1090          	char *p2;
   1091          	PATCH_SUBMENU *subMenu=malloc(sizeof(PATCH_SUBMENU));
   \   0000000C   8400A0E3           MOV      R0,#+132
   \   00000010   140000EF           SWI      +20
   \   00000014   0050A0E1           MOV      R5,R0
   1092          	subMenu->item=0;
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   800085E5           STR      R0,[R5, #+128]
   1093          	subMenu->smName[0]=0;
   \   00000020   0000C5E5           STRB     R0,[R5, #+0]
   1094          	p=gotoRealPos(p);
   \   00000024   0600A0E1           MOV      R0,R6
   \   00000028   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000002C   0060A0E1           MOV      R6,R0
   1095          	p1=gotoMyStrStart(p);
   \   00000030   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000034   0070A0E1           MOV      R7,R0
   1096          	p2=gotoMyStrEnd(p);
   \   00000038   0600A0E1           MOV      R0,R6
   \   0000003C   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
   1097          	strnCopyWithEnd(subMenu->smName, p1, p2-p1);
   \   00000040   072040E0           SUB      R2,R0,R7
   \   00000044   0710A0E1           MOV      R1,R7
   \   00000048   0500A0E1           MOV      R0,R5
   \   0000004C   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
   1098          	pp=gotoQuoteEnd(p);
   \   00000050   0600A0E1           MOV      R0,R6
   \   00000054   ........           _BLF     gotoQuoteEnd,??gotoQuoteEnd??rA
   1099          	if(!pp)
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   6D00000A           BEQ      ??doSubMenuJob_0
   1100          		goto END;
   1101          	p=++pp;
   \   00000060   016080E2           ADD      R6,R0,#+1
   \   00000064   000000EA           B        ??doSubMenuJob_1
   1102          	while(*p)
   1103          	{
   1104          		if(*p=='{') //sirect string
   1105          			break;
   1106          		if(*p<0xA) //
   1107          			break;
   1108          		if((*p>X_CHAR)&&(*p!=',')) //判断是这直接显示的字符
   1109          		{
   1110          			DATA_DRSTR *drstr=malloc(sizeof(DATA_DRSTR));
   1111          			char *p1=p;
   1112          			char *p2=gotoQuoteStart(p)-1;
   1113          			while(*p2)
   1114          			{
   1115          				if(*p2>X_CHAR)
   1116          					break;
   1117          				p2--;
   1118          			}
   1119          			p2++;
   1120          			strnCopyWithEnd(drstr->str, p1, p2-p1);
   1121          			addItemToConfig(drstr, subMenu, TYPE_DRSTR, 0, NULL);
   1122          			break;
   1123          		}
   1124          		p++;
   \                     ??doSubMenuJob_2:
   \   00000068   016086E2           ADD      R6,R6,#+1
   \                     ??doSubMenuJob_1:
   \   0000006C   0000D6E5           LDRB     R0,[R6, #+0]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   7B005013           CMPNE    R0,#+123
   \   00000078   2200000A           BEQ      ??doSubMenuJob_3
   \   0000007C   0A0050E3           CMP      R0,#+10
   \   00000080   2000003A           BCC      ??doSubMenuJob_3
   \   00000084   210050E3           CMP      R0,#+33
   \   00000088   F6FFFF3A           BCC      ??doSubMenuJob_2
   \   0000008C   2C0050E3           CMP      R0,#+44
   \   00000090   F4FFFF0A           BEQ      ??doSubMenuJob_2
   \   00000094   8000A0E3           MOV      R0,#+128
   \   00000098   140000EF           SWI      +20
   \   0000009C   0070A0E1           MOV      R7,R0
   \   000000A0   0600A0E1           MOV      R0,R6
   \   000000A4   ........           _BLF     gotoQuoteStart,??gotoQuoteStart??rA
   \                     ??doSubMenuJob_4:
   \   000000A8   011070E5           LDRB     R1,[R0, #-1]!
   \   000000AC   000051E3           CMP      R1,#+0
   \   000000B0   0700000A           BEQ      ??doSubMenuJob_5
   \   000000B4   210051E3           CMP      R1,#+33
   \   000000B8   FAFFFF3A           BCC      ??doSubMenuJob_4
   \   000000BC   040000EA           B        ??doSubMenuJob_5
   1125          	}
   1126          	pp=gotoQuoteStart(p);
   1127          	if(!pp)
   1128          		goto END;
   1129          	p=pp;
   1130          	if(!*p)
   1131          		goto END;
   1132          	while(!(strstrInQuote(p, STR_ENDSUBMENU2))&&!(strstrInQuote(p, STR_ENDSUBMENU1)))//判断结尾
   1133          	{
   1134          		if((p2=strstrInQuote(p, STR_SUBMENU1)))
   1135          		{
   1136          			p=doSubMenuJob(subMenu, p2);
   1137          		}
   1138          		else if((p2=strstrInQuote(p, STR_SUBMENU2))&&(isThatItem(p2-3)))
   1139          		{
   1140          			//if(isThatItem(p2-3))
   1141          			{
   1142          				if(*p2=='=')
   1143          					p2++;
   1144          				p=doSubMenuJob(subMenu, p2);
   1145          			}
   1146          		}
   1147          		else
   1148          			doItemJob(p, subMenu);
   1149          		pp=gotoQuoteEnd(p);
   1150          		if(!pp)
   1151          			break;
   1152          		p=++pp;
   1153          		while(*p)
   1154          		{
   1155          			if(*p=='{') //sirect string
   1156          				break;
   1157          			if(*p<0xA) //
   1158          				break;
   1159          			if((*p>X_CHAR)&&(*p!=',')) //判断是这直接显示的字符
   1160          			{
   1161          				DATA_DRSTR *drstr=malloc(sizeof(DATA_DRSTR));
   1162          				char *p1=p;
   1163          				char *p2=gotoQuoteStart(p)-1;
   1164          				while(*p2)
   1165          				{
   1166          					if(*p2>X_CHAR)
   1167          						break;
   1168          					p2--;
   \                     ??doSubMenuJob_6:
   \   000000C0   011070E5           LDRB     R1,[R0, #-1]!
   \   000000C4   000051E3           CMP      R1,#+0
   \   000000C8   0100000A           BEQ      ??doSubMenuJob_5
   \   000000CC   210051E3           CMP      R1,#+33
   \   000000D0   FAFFFF3A           BCC      ??doSubMenuJob_6
   1169          				}
   1170          				p2++;
   1171          				strnCopyWithEnd(drstr->str, p1, p2-p1);
   \                     ??doSubMenuJob_5:
   \   000000D4   010080E2           ADD      R0,R0,#+1
   \   000000D8   062040E0           SUB      R2,R0,R6
   \   000000DC   0610A0E1           MOV      R1,R6
   \   000000E0   0700A0E1           MOV      R0,R7
   \   000000E4   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
   1172          				addItemToConfig(drstr, subMenu, TYPE_DRSTR, 0, NULL);
   \   000000E8   0000A0E3           MOV      R0,#+0
   \   000000EC   01002DE9           PUSH     {R0}
   \   000000F0   0030A0E3           MOV      R3,#+0
   \   000000F4   0120A0E3           MOV      R2,#+1
   \   000000F8   0510A0E1           MOV      R1,R5
   \   000000FC   0700A0E1           MOV      R0,R7
   \   00000100   ........           BL       addItemToConfig
   1173          				break;
   \   00000104   04D08DE2           ADD      SP,SP,#+4
   \                     ??doSubMenuJob_3:
   \   00000108   0600A0E1           MOV      R0,R6
   \   0000010C   ........           _BLF     gotoQuoteStart,??gotoQuoteStart??rA
   \   00000110   000050E3           CMP      R0,#+0
   \   00000114   3F00000A           BEQ      ??doSubMenuJob_0
   \   00000118   0060A0E1           MOV      R6,R0
   \   0000011C   0000D6E5           LDRB     R0,[R6, #+0]
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   3B00000A           BEQ      ??doSubMenuJob_0
   \   00000128   08119FE5           LDR      R1,??doSubMenuJob_7  ;; STR_ENDSUBMENU2
   \   0000012C   0600A0E1           MOV      R0,R6
   \   00000130   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000134   000050E3           CMP      R0,#+0
   \   00000138   3600001A           BNE      ??doSubMenuJob_0
   \   0000013C   F8109FE5           LDR      R1,??doSubMenuJob_7+0x4  ;; STR_ENDSUBMENU1
   \   00000140   0600A0E1           MOV      R0,R6
   \   00000144   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   3100001A           BNE      ??doSubMenuJob_0
   \   00000150   ........           LDR      R1,??DataTable24  ;; STR_SUBMENU1
   \   00000154   0600A0E1           MOV      R0,R6
   \   00000158   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000015C   0080B0E1           MOVS     R8,R0
   \   00000160   0400000A           BEQ      ??doSubMenuJob_8
   \                     ??doSubMenuJob_9:
   \   00000164   0810A0E1           MOV      R1,R8
   \   00000168   0500A0E1           MOV      R0,R5
   \   0000016C   A3FFFFEB           BL       doSubMenuJob
   \   00000170   0060A0E1           MOV      R6,R0
   \   00000174   100000EA           B        ??doSubMenuJob_10
   \                     ??doSubMenuJob_8:
   \   00000178   ........           LDR      R1,??DataTable23  ;; STR_SUBMENU2
   \   0000017C   0600A0E1           MOV      R0,R6
   \   00000180   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000184   0080B0E1           MOVS     R8,R0
   \   00000188   0800000A           BEQ      ??doSubMenuJob_11
   \   0000018C   030048E2           SUB      R0,R8,#+3
   \   00000190   ........           BL       isThatItem
   \   00000194   000050E3           CMP      R0,#+0
   \   00000198   0400000A           BEQ      ??doSubMenuJob_11
   \   0000019C   0000D8E5           LDRB     R0,[R8, #+0]
   \   000001A0   3D0050E3           CMP      R0,#+61
   \   000001A4   EEFFFF1A           BNE      ??doSubMenuJob_9
   \   000001A8   018088E2           ADD      R8,R8,#+1
   \   000001AC   ECFFFFEA           B        ??doSubMenuJob_9
   \                     ??doSubMenuJob_11:
   \   000001B0   0510A0E1           MOV      R1,R5
   \   000001B4   0600A0E1           MOV      R0,R6
   \   000001B8   ........           BL       doItemJob
   \                     ??doSubMenuJob_10:
   \   000001BC   0600A0E1           MOV      R0,R6
   \   000001C0   ........           _BLF     gotoQuoteEnd,??gotoQuoteEnd??rA
   \   000001C4   000050E3           CMP      R0,#+0
   \   000001C8   1200000A           BEQ      ??doSubMenuJob_0
   \   000001CC   016080E2           ADD      R6,R0,#+1
   \   000001D0   000000EA           B        ??doSubMenuJob_12
   1174          			}
   1175          			p++;
   \                     ??doSubMenuJob_13:
   \   000001D4   016086E2           ADD      R6,R6,#+1
   \                     ??doSubMenuJob_12:
   \   000001D8   0000D6E5           LDRB     R0,[R6, #+0]
   \   000001DC   000050E3           CMP      R0,#+0
   \   000001E0   7B005013           CMPNE    R0,#+123
   \   000001E4   C7FFFF0A           BEQ      ??doSubMenuJob_3
   \   000001E8   0A0050E3           CMP      R0,#+10
   \   000001EC   C5FFFF3A           BCC      ??doSubMenuJob_3
   \   000001F0   210050E3           CMP      R0,#+33
   \   000001F4   F6FFFF3A           BCC      ??doSubMenuJob_13
   \   000001F8   2C0050E3           CMP      R0,#+44
   \   000001FC   F4FFFF0A           BEQ      ??doSubMenuJob_13
   \   00000200   8000A0E3           MOV      R0,#+128
   \   00000204   140000EF           SWI      +20
   \   00000208   0070A0E1           MOV      R7,R0
   \   0000020C   0600A0E1           MOV      R0,R6
   \   00000210   ........           _BLF     gotoQuoteStart,??gotoQuoteStart??rA
   \   00000214   A9FFFFEA           B        ??doSubMenuJob_6
   1176          		}
   1177          		pp=gotoQuoteStart(p);
   1178          		if(!pp)
   1179          			break;
   1180          		p=pp;
   1181          		if(!*p)
   1182          			break;
   1183          	}
   1184          END:
   1185          	addItemToConfig(subMenu, motherMenu, TYPE_SUBMENU, 0, subMenu->smName);
   \                     ??doSubMenuJob_0:
   \   00000218   0500A0E1           MOV      R0,R5
   \   0000021C   01002DE9           PUSH     {R0}
   \   00000220   0030A0E3           MOV      R3,#+0
   \   00000224   0B20A0E3           MOV      R2,#+11
   \   00000228   0410A0E1           MOV      R1,R4
   \   0000022C   ........           BL       addItemToConfig
   1186          	return (p);
   \   00000230   0600A0E1           MOV      R0,R6
   \   00000234   F281BDE8           POP      {R1,R4-R8,PC}    ;; return
   \                     ??doSubMenuJob_7:
   \   00000238   ........           DC32     STR_ENDSUBMENU2
   \   0000023C   ........           DC32     STR_ENDSUBMENU1
   1187          }
   1188          
   1189          //添加补丁信息，特征字符: info

   \                                 In segment CODE, align 4, keep-with-next
   1190          void addInfoToPatchInfo(char *pdata)
   1191          {
   \                     addInfoToPatchInfo:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1192          	char *p=pdata;
   1193          	char *pp;
   1194          	char *p1;
   1195          	char *p2;
   1196          	char *info=malloc(256);
   \   00000008   400FA0E3           MOV      R0,#+256
   \   0000000C   140000EF           SWI      +20
   \   00000010   0050A0E1           MOV      R5,R0
   1197          	pp=gotoRealPos(p);
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000001C   0040A0E1           MOV      R4,R0
   1198          	p1=gotoMyStrStart(pp);
   \   00000020   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000024   0060A0E1           MOV      R6,R0
   1199          	p2=gotoMyStrEnd(pp);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
   1200          	strnCopyWithEnd(info, p1, p2-p1);
   \   00000030   062040E0           SUB      R2,R0,R6
   \   00000034   0610A0E1           MOV      R1,R6
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
   1201          	ptcfgtop->patchInfo->info=info;
   \   00000040   ........           LDR      R0,??DataTable16  ;; ptcfgtop
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   1C0090E5           LDR      R0,[R0, #+28]
   \   0000004C   B85080E5           STR      R5,[R0, #+184]
   1202          }
   \   00000050   7080BDE8           POP      {R4-R6,PC}       ;; return
   1203          //判断是否是预置的选择项

   \                                 In segment CODE, align 4, keep-with-next
   1204          int isPrepareItem(char *p)
   1205          {
   1206          	char c=*p--;
   \                     isPrepareItem:
   \   00000000   ........           LDRB     R1,[R0], #-1
   1207          	if(!c)
   \   00000004   000051E3           CMP      R1,#+0
   1208          		return 0;
   1209          	c=*p--;
   \   00000008   ........           LDRBNE   R1,[R0], #-1
   1210          	if(!c)
   \   0000000C   00005113           CMPNE    R1,#+0
   \   00000010   0000001A           BNE      ??isPrepareItem_0
   1211          		return 0;
   \                     ??isPrepareItem_1:
   \   00000014   020000EA           B        ??isPrepareItem_2
   1212          	c=*p--;
   \                     ??isPrepareItem_0:
   \   00000018   ........           LDRB     R1,[R0], #-1
   1213          	if(!c)
   \   0000001C   000051E3           CMP      R1,#+0
   \   00000020   0200001A           BNE      ??isPrepareItem_3
   1214          		return 0;
   \                     ??isPrepareItem_2:
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   1EFF2FE1           BX       LR
   1215          	//p-=3; //go back
   1216          	while(*p)
   1217          	{
   1218          		if(*p>=X_CHAR)
   1219          		{
   1220          			if(*p=='{')
   1221          				return 1;
   1222          			else 
   1223          				return 0;
   1224          		}
   1225          		p--;
   \                     ??isPrepareItem_4:
   \   0000002C   010040E2           SUB      R0,R0,#+1
   \                     ??isPrepareItem_3:
   \   00000030   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000034   000051E3           CMP      R1,#+0
   \   00000038   F9FFFF0A           BEQ      ??isPrepareItem_2
   \   0000003C   200051E3           CMP      R1,#+32
   \   00000040   F9FFFF3A           BCC      ??isPrepareItem_4
   \   00000044   7B0051E3           CMP      R1,#+123
   \   00000048   F5FFFF1A           BNE      ??isPrepareItem_2
   \   0000004C   0100A0E3           MOV      R0,#+1
   \   00000050   1EFF2FE1           BX       LR
   1226          	}
   1227          	return 0;
   1228          }

   \                                 In segment CODE, align 4, keep-with-next
   1229          char *doTemplateWork(char *pdata)
   1230          {
   \                     doTemplateWork:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   1231          	PATCH_TP *tpl=malloc(sizeof(PATCH_TP));
   \   00000008   8400A0E3           MOV      R0,#+132
   \   0000000C   140000EF           SWI      +20
   \   00000010   0040A0E1           MOV      R4,R0
   1232          	char *p=pdata;
   1233          	char *pp;
   1234          	char *p1;
   1235          	char *p2;
   1236          	tpl->item=0;
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   800084E5           STR      R0,[R4, #+128]
   1237          	tpl->useAs[0]=0;
   \   0000001C   0000C4E5           STRB     R0,[R4, #+0]
   1238          	pp=gotoRealPos(p);
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000028   0060A0E1           MOV      R6,R0
   1239          	p1=gotoMyStrStart(pp);
   \   0000002C   ........           _BLF     gotoMyStrStart,??gotoMyStrStart??rA
   \   00000030   0070A0E1           MOV      R7,R0
   1240          	p2=gotoMyStrEnd(pp);
   \   00000034   0600A0E1           MOV      R0,R6
   \   00000038   ........           _BLF     gotoMyStrEnd,??gotoMyStrEnd??rA
   1241          	strnCopyWithEnd(tpl->useAs, p1, p2-p1);
   \   0000003C   072040E0           SUB      R2,R0,R7
   \   00000040   0710A0E1           MOV      R1,R7
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
   1242          	pp=gotoQuoteEnd(p);
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   ........           _BLF     gotoQuoteEnd,??gotoQuoteEnd??rA
   1243          	if(!pp)
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   6D00000A           BEQ      ??doTemplateWork_0
   1244          		goto END;
   1245          	p=++pp;
   \   0000005C   015080E2           ADD      R5,R0,#+1
   \   00000060   000000EA           B        ??doTemplateWork_1
   1246          	while(*p)
   1247          	{
   1248          		if(*p=='{') //sirect string
   1249          			break;
   1250          		if(*p<0xA) //
   1251          			break;
   1252          		if((*p>X_CHAR)&&(*p!=',')) //判断是这直接显示的字符
   1253          		{
   1254          			DATA_DRSTR *drstr=malloc(sizeof(DATA_DRSTR));
   1255          			char *p1=p;
   1256          			char *p2=gotoQuoteStart(p)-1;
   1257          			while(*p2)
   1258          			{
   1259          				if(*p2>X_CHAR)
   1260          					break;
   1261          				p2--;
   1262          			}
   1263          			p2++;
   1264          			strnCopyWithEnd(drstr->str, p1, p2-p1);
   1265          			addItemToConfig(drstr, (PATCH_SUBMENU *)tpl, TYPE_DRSTR, 0, NULL);
   1266          			break;
   1267          		}
   1268          		p++;
   \                     ??doTemplateWork_2:
   \   00000064   015085E2           ADD      R5,R5,#+1
   \                     ??doTemplateWork_1:
   \   00000068   0000D5E5           LDRB     R0,[R5, #+0]
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   7B005013           CMPNE    R0,#+123
   \   00000074   2200000A           BEQ      ??doTemplateWork_3
   \   00000078   0A0050E3           CMP      R0,#+10
   \   0000007C   2000003A           BCC      ??doTemplateWork_3
   \   00000080   210050E3           CMP      R0,#+33
   \   00000084   F6FFFF3A           BCC      ??doTemplateWork_2
   \   00000088   2C0050E3           CMP      R0,#+44
   \   0000008C   F4FFFF0A           BEQ      ??doTemplateWork_2
   \   00000090   8000A0E3           MOV      R0,#+128
   \   00000094   140000EF           SWI      +20
   \   00000098   0060A0E1           MOV      R6,R0
   \   0000009C   0500A0E1           MOV      R0,R5
   \   000000A0   ........           _BLF     gotoQuoteStart,??gotoQuoteStart??rA
   \                     ??doTemplateWork_4:
   \   000000A4   011070E5           LDRB     R1,[R0, #-1]!
   \   000000A8   000051E3           CMP      R1,#+0
   \   000000AC   0700000A           BEQ      ??doTemplateWork_5
   \   000000B0   210051E3           CMP      R1,#+33
   \   000000B4   FAFFFF3A           BCC      ??doTemplateWork_4
   \   000000B8   040000EA           B        ??doTemplateWork_5
   1269          	}
   1270          	pp=gotoQuoteStart(p);
   1271          	if(!pp)
   1272          		goto END;
   1273          	p=pp;
   1274          	if(!*p)
   1275          		goto END;
   1276          	while(!(strstrInQuote(p, STR_ENDTEMPLATE1))&&!(strstrInQuote(p, STR_ENDTEMPLATE2)))
   1277          	{
   1278          		if((p2=strstrInQuote(p, STR_SUBMENU1)))
   1279          		{
   1280          			p=doSubMenuJob((PATCH_SUBMENU *)tpl, p2);
   1281          		}
   1282          		else if((p2=strstrInQuote(p, STR_SUBMENU2))&&(isThatItem(p2-3)))
   1283          		{
   1284          			//if(isThatItem(p2-3))
   1285          			{
   1286          				if(*p2=='=')
   1287          					p2++;
   1288          				p=doSubMenuJob((PATCH_SUBMENU *)tpl, p2);
   1289          			}
   1290          		}
   1291          		else
   1292          			doItemJob(p, (PATCH_SUBMENU *)tpl);
   1293          		pp=gotoQuoteEnd(p);
   1294          		if(!pp)
   1295          			break;
   1296          		p=++pp;
   1297          		while(*p)
   1298          		{
   1299          			if(*p=='{') //sirect string
   1300          				break;
   1301          			if(*p<0xA) //
   1302          				break;
   1303          			if((*p>X_CHAR)&&(*p!=',')) //判断是这直接显示的字符
   1304          			{
   1305          				DATA_DRSTR *drstr=malloc(sizeof(DATA_DRSTR));
   1306          				char *p1=p;
   1307          				char *p2=gotoQuoteStart(p)-1;
   1308          				while(*p2)
   1309          				{
   1310          					if(*p2>X_CHAR)
   1311          						break;
   1312          					p2--;
   \                     ??doTemplateWork_6:
   \   000000BC   011070E5           LDRB     R1,[R0, #-1]!
   \   000000C0   000051E3           CMP      R1,#+0
   \   000000C4   0100000A           BEQ      ??doTemplateWork_5
   \   000000C8   210051E3           CMP      R1,#+33
   \   000000CC   FAFFFF3A           BCC      ??doTemplateWork_6
   1313          				}
   1314          				p2++;
   1315          				strnCopyWithEnd(drstr->str, p1, p2-p1);
   \                     ??doTemplateWork_5:
   \   000000D0   010080E2           ADD      R0,R0,#+1
   \   000000D4   052040E0           SUB      R2,R0,R5
   \   000000D8   0510A0E1           MOV      R1,R5
   \   000000DC   0600A0E1           MOV      R0,R6
   \   000000E0   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
   1316          				addItemToConfig(drstr, (PATCH_SUBMENU *)tpl, TYPE_DRSTR, 0, NULL);
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   01002DE9           PUSH     {R0}
   \   000000EC   0030A0E3           MOV      R3,#+0
   \   000000F0   0120A0E3           MOV      R2,#+1
   \   000000F4   0410A0E1           MOV      R1,R4
   \   000000F8   0600A0E1           MOV      R0,R6
   \   000000FC   ........           BL       addItemToConfig
   1317          				break;
   \   00000100   04D08DE2           ADD      SP,SP,#+4
   \                     ??doTemplateWork_3:
   \   00000104   0500A0E1           MOV      R0,R5
   \   00000108   ........           _BLF     gotoQuoteStart,??gotoQuoteStart??rA
   \   0000010C   000050E3           CMP      R0,#+0
   \   00000110   3F00000A           BEQ      ??doTemplateWork_0
   \   00000114   0050A0E1           MOV      R5,R0
   \   00000118   0000D5E5           LDRB     R0,[R5, #+0]
   \   0000011C   000050E3           CMP      R0,#+0
   \   00000120   3B00000A           BEQ      ??doTemplateWork_0
   \   00000124   14119FE5           LDR      R1,??doTemplateWork_7  ;; STR_ENDTEMPLATE1
   \   00000128   0500A0E1           MOV      R0,R5
   \   0000012C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000130   000050E3           CMP      R0,#+0
   \   00000134   3600001A           BNE      ??doTemplateWork_0
   \   00000138   04119FE5           LDR      R1,??doTemplateWork_7+0x4  ;; STR_ENDTEMPLATE2
   \   0000013C   0500A0E1           MOV      R0,R5
   \   00000140   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000144   000050E3           CMP      R0,#+0
   \   00000148   3100001A           BNE      ??doTemplateWork_0
   \   0000014C   ........           LDR      R1,??DataTable24  ;; STR_SUBMENU1
   \   00000150   0500A0E1           MOV      R0,R5
   \   00000154   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000158   0060B0E1           MOVS     R6,R0
   \   0000015C   0400000A           BEQ      ??doTemplateWork_8
   \                     ??doTemplateWork_9:
   \   00000160   0610A0E1           MOV      R1,R6
   \   00000164   0400A0E1           MOV      R0,R4
   \   00000168   ........           BL       doSubMenuJob
   \   0000016C   0050A0E1           MOV      R5,R0
   \   00000170   100000EA           B        ??doTemplateWork_10
   \                     ??doTemplateWork_8:
   \   00000174   ........           LDR      R1,??DataTable23  ;; STR_SUBMENU2
   \   00000178   0500A0E1           MOV      R0,R5
   \   0000017C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000180   0060B0E1           MOVS     R6,R0
   \   00000184   0800000A           BEQ      ??doTemplateWork_11
   \   00000188   030046E2           SUB      R0,R6,#+3
   \   0000018C   ........           BL       isThatItem
   \   00000190   000050E3           CMP      R0,#+0
   \   00000194   0400000A           BEQ      ??doTemplateWork_11
   \   00000198   0000D6E5           LDRB     R0,[R6, #+0]
   \   0000019C   3D0050E3           CMP      R0,#+61
   \   000001A0   EEFFFF1A           BNE      ??doTemplateWork_9
   \   000001A4   016086E2           ADD      R6,R6,#+1
   \   000001A8   ECFFFFEA           B        ??doTemplateWork_9
   \                     ??doTemplateWork_11:
   \   000001AC   0410A0E1           MOV      R1,R4
   \   000001B0   0500A0E1           MOV      R0,R5
   \   000001B4   ........           BL       doItemJob
   \                     ??doTemplateWork_10:
   \   000001B8   0500A0E1           MOV      R0,R5
   \   000001BC   ........           _BLF     gotoQuoteEnd,??gotoQuoteEnd??rA
   \   000001C0   000050E3           CMP      R0,#+0
   \   000001C4   1200000A           BEQ      ??doTemplateWork_0
   \   000001C8   015080E2           ADD      R5,R0,#+1
   \   000001CC   000000EA           B        ??doTemplateWork_12
   1318          			}
   1319          			p++;
   \                     ??doTemplateWork_13:
   \   000001D0   015085E2           ADD      R5,R5,#+1
   \                     ??doTemplateWork_12:
   \   000001D4   0000D5E5           LDRB     R0,[R5, #+0]
   \   000001D8   000050E3           CMP      R0,#+0
   \   000001DC   7B005013           CMPNE    R0,#+123
   \   000001E0   C7FFFF0A           BEQ      ??doTemplateWork_3
   \   000001E4   0A0050E3           CMP      R0,#+10
   \   000001E8   C5FFFF3A           BCC      ??doTemplateWork_3
   \   000001EC   210050E3           CMP      R0,#+33
   \   000001F0   F6FFFF3A           BCC      ??doTemplateWork_13
   \   000001F4   2C0050E3           CMP      R0,#+44
   \   000001F8   F4FFFF0A           BEQ      ??doTemplateWork_13
   \   000001FC   8000A0E3           MOV      R0,#+128
   \   00000200   140000EF           SWI      +20
   \   00000204   0060A0E1           MOV      R6,R0
   \   00000208   0500A0E1           MOV      R0,R5
   \   0000020C   ........           _BLF     gotoQuoteStart,??gotoQuoteStart??rA
   \   00000210   A9FFFFEA           B        ??doTemplateWork_6
   1320          		}
   1321          		pp=gotoQuoteStart(p);
   1322          		if(!pp)
   1323          			break;
   1324          		p=pp;
   1325          		if(!*p)
   1326          			break;
   1327          	}
   1328          END:
   1329          	addItemToConfig(tpl, &ptcfgtop->mainitem, TYPE_TP, 0, tpl->useAs);
   \                     ??doTemplateWork_0:
   \   00000214   0400A0E1           MOV      R0,R4
   \   00000218   01002DE9           PUSH     {R0}
   \   0000021C   ........           LDR      R0,??DataTable31  ;; ptcfgtop
   \   00000220   0030A0E3           MOV      R3,#+0
   \   00000224   000090E5           LDR      R0,[R0, #+0]
   \   00000228   1320A0E3           MOV      R2,#+19
   \   0000022C   201080E2           ADD      R1,R0,#+32
   \   00000230   0400A0E1           MOV      R0,R4
   \   00000234   ........           BL       addItemToConfig
   1330          	return (p);
   \   00000238   0500A0E1           MOV      R0,R5
   \   0000023C   F280BDE8           POP      {R1,R4-R7,PC}    ;; return
   \                     ??doTemplateWork_7:
   \   00000240   ........           DC32     STR_ENDTEMPLATE1
   \   00000244   ........           DC32     STR_ENDTEMPLATE2
   1331          }
   1332          

   \                                 In segment CODE, align 4, keep-with-next
   1333          void subMenuCopy(PATCH_SUBMENU *sbmdst, PATCH_SUBMENU *sbmsrc, int byteBase)
   1334          {
   \                     subMenuCopy:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   1335          	PATCH_ITEM *pitem;
   1336          	int bytePos;
   1337          	if(!sbmsrc)
   \   00000004   000051E3           CMP      R1,#+0
   1338          		return;
   1339          	pitem=sbmsrc->item;
   \   00000008   80609115           LDRNE    R6,[R1, #+128]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0250A0E1           MOV      R5,R2
   \   00000014   00005613           CMPNE    R6,#+0
   \   00000018   F08FBD08           POPEQ    {R4-R11,PC}
   1340          	while(pitem)
   1341          	{
   1342          		bytePos=pitem->bytePos;
   1343          		switch(pitem->itemType)
   \                     ??subMenuCopy_1:
   \   0000001C   8C0096E5           LDR      R0,[R6, #+140]
   \   00000020   087096E5           LDR      R7,[R6, #+8]
   \   00000024   908096E5           LDR      R8,[R6, #+144]
   \   00000028   0090A0E3           MOV      R9,#+0
   \   0000002C   010040E2           SUB      R0,R0,#+1
   \   00000030   140050E3           CMP      R0,#+20
   \   00000034   2901008A           BHI      ??subMenuCopy_2
   \   00000038   021F8FE2           ADR      R1,??subMenuCopy_0
   \   0000003C   8000A0E1           MOV      R0,R0, LSL #+1
   \   00000040   B01091E1           LDRH     R1,[R1, R0]
   \   00000044   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??subMenuCopy_0:
   \   00000048   0A0016001F00       DC16     +10,+22,+31,+46
   \              2E00        
   \   00000050   390044006E00       DC16     +57,+68,+110,+123
   \              7B00        
   \   00000058   84009100A100       DC16     +132,+145,+161,+176
   \              B000        
   \   00000060   BE00CE00E800       DC16     +190,+206,+232,+258
   \              0201        
   \   00000068   DB000D012501       DC16     +219,+269,+293,+241
   \              F100        
   \   00000070   18010000           DC16     +280,+0
   1344          		{
   1345          		case TYPE_DRSTR:
   1346          			{
   1347          				DATA_DRSTR *dstr1=(DATA_DRSTR *)pitem->itemData;
   1348          				DATA_DRSTR *dstr=malloc(sizeof(DATA_DRSTR));
   \                     ??subMenuCopy_3:
   \   00000074   8000A0E3           MOV      R0,#+128
   \   00000078   140000EF           SWI      +20
   \   0000007C   0070A0E1           MOV      R7,R0
   1349          				strcpy(dstr->str, dstr1->str);
   \   00000080   0810A0E1           MOV      R1,R8
   \   00000084   1A0000EF           SWI      +26
   1350          				addItemToConfig(dstr, sbmdst, TYPE_DRSTR, 0, NULL);
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   01002DE9           PUSH     {R0}
   \   00000090   0030A0E1           MOV      R3,R0
   \   00000094   0120A0E3           MOV      R2,#+1
   \   00000098   0410A0E1           MOV      R1,R4
   \   0000009C   0700A0E1           MOV      R0,R7
   \   000000A0   0C0100EA           B        ??subMenuCopy_4
   1351          				break;
   1352          			}
   1353          		case TYPE_CHECKBOX:
   1354          			{
   1355          				DATA_CHECKBOX *chkbox1=(DATA_CHECKBOX *)pitem->itemData;
   1356          				DATA_CHECKBOX *chkbox=malloc(sizeof(DATA_CHECKBOX));
   \                     ??subMenuCopy_5:
   \   000000A4   0800A0E3           MOV      R0,#+8
   \   000000A8   140000EF           SWI      +20
   1357          				chkbox->bitPos=chkbox1->bitPos;
   \   000000AC   001098E5           LDR      R1,[R8, #+0]
   1358          				chkbox->onoff=chkbox1->onoff;
   1359          				addItemToConfig(chkbox, sbmdst, TYPE_CHECKBOX, bytePos+byteBase, pitem->itemName);
   \   000000B0   073085E0           ADD      R3,R5,R7
   \   000000B4   001080E5           STR      R1,[R0, #+0]
   \   000000B8   0410D8E5           LDRB     R1,[R8, #+4]
   \   000000BC   0220A0E3           MOV      R2,#+2
   \   000000C0   0410C0E5           STRB     R1,[R0, #+4]
   \   000000C4   000100EA           B        ??subMenuCopy_6
   1360          				break;
   1361          			}
   1362          		case TYPE_POS:
   1363          			{
   1364          				DATA_POS *pos1=(DATA_POS *)pitem->itemData;
   1365          				DATA_POS *pos=malloc(sizeof(DATA_POS));
   \                     ??subMenuCopy_7:
   \   000000C8   0A00A0E3           MOV      R0,#+10
   \   000000CC   140000EF           SWI      +20
   1366          				pos->x=pos1->x;
   \   000000D0   F010D8E1           LDRSH    R1,[R8, #+0]
   1367          				pos->off=pos1->off;
   1368          				pos->y=pos1->y;
   1369          				pos->w=pos1->w;
   1370          				pos->h=pos1->h;
   1371          				addItemToConfig(pos, sbmdst, TYPE_POS, bytePos+byteBase, pitem->itemName);
   \   000000D4   073085E0           ADD      R3,R5,R7
   \   000000D8   0320A0E3           MOV      R2,#+3
   \   000000DC   B010C0E1           STRH     R1,[R0, #+0]
   \   000000E0   0210D8E5           LDRB     R1,[R8, #+2]
   \   000000E4   0210C0E5           STRB     R1,[R0, #+2]
   \   000000E8   F410D8E1           LDRSH    R1,[R8, #+4]
   \   000000EC   B410C0E1           STRH     R1,[R0, #+4]
   \   000000F0   F610D8E1           LDRSH    R1,[R8, #+6]
   \   000000F4   B610C0E1           STRH     R1,[R0, #+6]
   \   000000F8   F810D8E1           LDRSH    R1,[R8, #+8]
   \   000000FC   B810C0E1           STRH     R1,[R0, #+8]
   \   00000100   F10000EA           B        ??subMenuCopy_6
   1372          				break;
   1373          			}
   1374          		case TYPE_BYTE:
   1375          			{
   1376          				DATA_BYTE *dbyte1=(DATA_BYTE *)pitem->itemData;
   1377          				DATA_BYTE *dbyte=malloc(sizeof(DATA_BYTE));
   \                     ??subMenuCopy_8:
   \   00000104   0300A0E3           MOV      R0,#+3
   \   00000108   140000EF           SWI      +20
   1378          				dbyte->initData=dbyte1->initData;
   \   0000010C   0210D8E5           LDRB     R1,[R8, #+2]
   1379          				dbyte->max=dbyte1->max;
   1380          				dbyte->min=dbyte1->min;
   1381          				addItemToConfig(dbyte, sbmdst, TYPE_BYTE, bytePos+byteBase, pitem->itemName);
   \   00000110   073085E0           ADD      R3,R5,R7
   \   00000114   0420A0E3           MOV      R2,#+4
   \   00000118   0210C0E5           STRB     R1,[R0, #+2]
   \   0000011C   0110D8E5           LDRB     R1,[R8, #+1]
   \   00000120   0110C0E5           STRB     R1,[R0, #+1]
   \   00000124   0010D8E5           LDRB     R1,[R8, #+0]
   \   00000128   0010C0E5           STRB     R1,[R0, #+0]
   \   0000012C   E60000EA           B        ??subMenuCopy_6
   1382          				break;
   1383          			}
   1384          		case TYPE_INT:
   1385          			{
   1386          				DATA_INT *dint1=(DATA_INT *)pitem->itemData;
   1387          				DATA_INT *dint=malloc(sizeof(DATA_INT));
   \                     ??subMenuCopy_9:
   \   00000130   0C00A0E3           MOV      R0,#+12
   \   00000134   140000EF           SWI      +20
   1388          				dint->initData=dint1->initData;
   \   00000138   081098E5           LDR      R1,[R8, #+8]
   1389          				dint->max=dint1->max;
   1390          				dint->min=dint1->min;
   1391          				addItemToConfig(dint, sbmdst, TYPE_INT, bytePos+byteBase, pitem->itemName);
   \   0000013C   073085E0           ADD      R3,R5,R7
   \   00000140   081080E5           STR      R1,[R0, #+8]
   \   00000144   041098E5           LDR      R1,[R8, #+4]
   \   00000148   0520A0E3           MOV      R2,#+5
   \   0000014C   041080E5           STR      R1,[R0, #+4]
   \   00000150   001098E5           LDR      R1,[R8, #+0]
   \   00000154   001080E5           STR      R1,[R0, #+0]
   \   00000158   DB0000EA           B        ??subMenuCopy_6
   1392          				break;
   1393          			}
   1394          		case TYPE_CBOX:
   1395          			{
   1396          				DATA_CBOX *cbox1=(DATA_CBOX *)pitem->itemData;
   1397          				DATA_CBOX *cbox=malloc(sizeof(DATA_CBOX));
   \                     ??subMenuCopy_10:
   \   0000015C   0800A0E3           MOV      R0,#+8
   \   00000160   140000EF           SWI      +20
   1398          				CBOX_ITEM *cbitem=cbox1->cboxitem;
   \   00000164   04B098E5           LDR      R11,[R8, #+4]
   \   00000168   00A0A0E1           MOV      R10,R0
   1399          				CBOX_ITEM *ct;
   1400          				CBOX_ITEM *ct2;
   1401          				cbox->cboxitem=0;
   \   0000016C   04908AE5           STR      R9,[R10, #+4]
   1402          				cbox->initData=cbox1->initData;
   \   00000170   0000D8E5           LDRB     R0,[R8, #+0]
   \   00000174   00005BE3           CMP      R11,#+0
   \   00000178   0000CAE5           STRB     R0,[R10, #+0]
   \   0000017C   1900000A           BEQ      ??subMenuCopy_11
   1403          				while(cbitem)
   1404          				{
   1405          					ct=malloc(sizeof(CBOX_ITEM));
   \                     ??subMenuCopy_12:
   \   00000180   8C00A0E3           MOV      R0,#+140
   \   00000184   140000EF           SWI      +20
   \   00000188   0080A0E1           MOV      R8,R0
   1406          					ct->data=cbitem->data;
   \   0000018C   8800DBE5           LDRB     R0,[R11, #+136]
   1407          					ct->next=0;
   1408          					ct->prev=0;
   1409          					strcpy(ct->name, cbitem->name);
   \   00000190   08108BE2           ADD      R1,R11,#+8
   \   00000194   8800C8E5           STRB     R0,[R8, #+136]
   \   00000198   049088E5           STR      R9,[R8, #+4]
   \   0000019C   009088E5           STR      R9,[R8, #+0]
   \   000001A0   080088E2           ADD      R0,R8,#+8
   \   000001A4   1A0000EF           SWI      +26
   1410          					if(!cbox->cboxitem)
   \   000001A8   04009AE5           LDR      R0,[R10, #+4]
   \   000001AC   000050E3           CMP      R0,#+0
   1411          						cbox->cboxitem=ct;
   \   000001B0   04808A05           STREQ    R8,[R10, #+4]
   \   000001B4   0800000A           BEQ      ??subMenuCopy_13
   1412          					else
   1413          					{
   1414          						ct2=cbox->cboxitem;
   \   000001B8   041090E5           LDR      R1,[R0, #+4]
   \   000001BC   000051E3           CMP      R1,#+0
   \   000001C0   0300000A           BEQ      ??subMenuCopy_14
   1415          						while(ct2->next) //goto last
   1416          						{
   1417          							ct2=ct2->next;
   \                     ??subMenuCopy_15:
   \   000001C4   040090E5           LDR      R0,[R0, #+4]
   1418          						}
   \   000001C8   041090E5           LDR      R1,[R0, #+4]
   \   000001CC   000051E3           CMP      R1,#+0
   \   000001D0   FBFFFF1A           BNE      ??subMenuCopy_15
   1419          						ct2->next=ct;
   \                     ??subMenuCopy_14:
   \   000001D4   048080E5           STR      R8,[R0, #+4]
   1420          						ct->prev=ct2;
   \   000001D8   000088E5           STR      R0,[R8, #+0]
   1421          					}
   1422          					cbitem=cbitem->next;
   \                     ??subMenuCopy_13:
   \   000001DC   04B09BE5           LDR      R11,[R11, #+4]
   1423          				}
   \   000001E0   00005BE3           CMP      R11,#+0
   \   000001E4   E5FFFF1A           BNE      ??subMenuCopy_12
   1424          				addItemToConfig(cbox, sbmdst, TYPE_CBOX, bytePos+byteBase, pitem->itemName);
   \                     ??subMenuCopy_11:
   \   000001E8   0C0086E2           ADD      R0,R6,#+12
   \   000001EC   01002DE9           PUSH     {R0}
   \   000001F0   073085E0           ADD      R3,R5,R7
   \   000001F4   0620A0E3           MOV      R2,#+6
   \                     ??subMenuCopy_16:
   \   000001F8   0410A0E1           MOV      R1,R4
   \   000001FC   0A00A0E1           MOV      R0,R10
   \   00000200   B40000EA           B        ??subMenuCopy_4
   1425          				break;
   1426          			}
   1427          		case TYPE_COLOR:
   1428          			{
   1429          				DATA_COLOR *color1=(DATA_COLOR *)pitem->itemData;
   1430          				DATA_COLOR *color=malloc(sizeof(DATA_COLOR));
   \                     ??subMenuCopy_17:
   \   00000204   0400A0E3           MOV      R0,#+4
   \   00000208   140000EF           SWI      +20
   \   0000020C   0090A0E1           MOV      R9,R0
   1431          				memcpy(color, color1, sizeof(DATA_COLOR));
   \   00000210   0420A0E3           MOV      R2,#+4
   \   00000214   0810A0E1           MOV      R1,R8
   \   00000218   1E0100EF           SWI      +286
   1432          				addItemToConfig(color, sbmdst, TYPE_COLOR, bytePos+byteBase, pitem->itemName);
   \   0000021C   0C0086E2           ADD      R0,R6,#+12
   \   00000220   01002DE9           PUSH     {R0}
   \   00000224   073085E0           ADD      R3,R5,R7
   \   00000228   0720A0E3           MOV      R2,#+7
   \                     ??subMenuCopy_18:
   \   0000022C   0410A0E1           MOV      R1,R4
   \   00000230   0900A0E1           MOV      R0,R9
   \   00000234   A70000EA           B        ??subMenuCopy_4
   1433          				break;
   1434          			}
   1435          		case TYPE_ADDRESS:
   1436          			{
   1437          				DATA_ADDRESS *addr1=(DATA_ADDRESS *)pitem->itemData;
   1438          				DATA_ADDRESS *addr=malloc(sizeof(DATA_ADDRESS));
   \                     ??subMenuCopy_19:
   \   00000238   0400A0E3           MOV      R0,#+4
   \   0000023C   140000EF           SWI      +20
   1439          				addr->addr=addr1->addr;
   \   00000240   001098E5           LDR      R1,[R8, #+0]
   1440          				addItemToConfig(addr, sbmdst, TYPE_ADDRESS, bytePos+byteBase, pitem->itemName);
   \   00000244   073085E0           ADD      R3,R5,R7
   \   00000248   001080E5           STR      R1,[R0, #+0]
   \   0000024C   0C1086E2           ADD      R1,R6,#+12
   \   00000250   02002DE9           PUSH     {R1}
   \   00000254   0820A0E3           MOV      R2,#+8
   \   00000258   9D0000EA           B        ??subMenuCopy_20
   1441          				break;
   1442          			}
   1443          		case TYPE_STRING:
   1444          			{
   1445          				DATA_STRING *str1=(DATA_STRING *)pitem->itemData;
   1446          				DATA_STRING *str=malloc(sizeof(DATA_STRING));
   \                     ??subMenuCopy_21:
   \   0000025C   8400A0E3           MOV      R0,#+132
   \   00000260   140000EF           SWI      +20
   \   00000264   0090A0E1           MOV      R9,R0
   1447          				str->maxlen=str1->maxlen;
   \   00000268   800098E5           LDR      R0,[R8, #+128]
   1448          				strcpy(str->string, str1->string);
   \   0000026C   0810A0E1           MOV      R1,R8
   \   00000270   800089E5           STR      R0,[R9, #+128]
   \   00000274   0900A0E1           MOV      R0,R9
   \   00000278   1A0000EF           SWI      +26
   1449          				addItemToConfig(str, sbmdst, TYPE_STRING, bytePos+byteBase, pitem->itemName);
   \   0000027C   0C0086E2           ADD      R0,R6,#+12
   \   00000280   01002DE9           PUSH     {R0}
   \   00000284   073085E0           ADD      R3,R5,R7
   \   00000288   0920A0E3           MOV      R2,#+9
   \   0000028C   E6FFFFEA           B        ??subMenuCopy_18
   1450          				break;
   1451          			}
   1452          		case TYPE_UNICODE:
   1453          			{
   1454          				DATA_UNICODE *uni1=(DATA_UNICODE *)pitem->itemData;
   1455          				DATA_UNICODE *uni=malloc(sizeof(DATA_UNICODE));
   \                     ??subMenuCopy_22:
   \   00000290   410FA0E3           MOV      R0,#+260
   \   00000294   140000EF           SWI      +20
   \   00000298   0090A0E1           MOV      R9,R0
   1456          				uni->maxlen=uni1->maxlen;
   \   0000029C   000198E5           LDR      R0,[R8, #+256]
   1457          				memcpy(uni->ustr, uni1->ustr, sizeof(short)*128);
   \   000002A0   402FA0E3           MOV      R2,#+256
   \   000002A4   000189E5           STR      R0,[R9, #+256]
   \   000002A8   0810A0E1           MOV      R1,R8
   \   000002AC   0900A0E1           MOV      R0,R9
   \   000002B0   1E0100EF           SWI      +286
   1458          				addItemToConfig(uni, sbmdst, TYPE_UNICODE, bytePos+byteBase, pitem->itemName);
   \   000002B4   0C0086E2           ADD      R0,R6,#+12
   \   000002B8   01002DE9           PUSH     {R0}
   \   000002BC   073085E0           ADD      R3,R5,R7
   \   000002C0   0A20A0E3           MOV      R2,#+10
   \                     ??subMenuCopy_23:
   \   000002C4   0410A0E1           MOV      R1,R4
   \   000002C8   0900A0E1           MOV      R0,R9
   \   000002CC   810000EA           B        ??subMenuCopy_4
   1459          				break;
   1460          			}
   1461          		case TYPE_SUBMENU:
   1462          			{
   1463          				PATCH_SUBMENU *submenu1=(PATCH_SUBMENU *)pitem->itemData;
   1464          				PATCH_SUBMENU *submenu=malloc(sizeof(PATCH_SUBMENU));
   \                     ??subMenuCopy_24:
   \   000002D0   8400A0E3           MOV      R0,#+132
   \   000002D4   140000EF           SWI      +20
   \   000002D8   00A0A0E1           MOV      R10,R0
   1465          				submenu->item=0;
   \   000002DC   80908AE5           STR      R9,[R10, #+128]
   1466          				strcpy(submenu->smName, submenu1->smName);
   \   000002E0   0810A0E1           MOV      R1,R8
   \   000002E4   1A0000EF           SWI      +26
   1467          				subMenuCopy(submenu, submenu1, byteBase);
   \   000002E8   0520A0E1           MOV      R2,R5
   \   000002EC   0810A0E1           MOV      R1,R8
   \   000002F0   0A00A0E1           MOV      R0,R10
   \   000002F4   41FFFFEB           BL       subMenuCopy
   1468          				addItemToConfig(submenu, sbmdst, TYPE_SUBMENU, bytePos+byteBase, pitem->itemName);
   \   000002F8   0C0086E2           ADD      R0,R6,#+12
   \   000002FC   01002DE9           PUSH     {R0}
   \   00000300   073085E0           ADD      R3,R5,R7
   \   00000304   0B20A0E3           MOV      R2,#+11
   \   00000308   BAFFFFEA           B        ??subMenuCopy_16
   1469          				break;
   1470          			}
   1471          		case TYPE_HEX:
   1472          			{
   1473          				DATA_HEX *hex1=(DATA_HEX *)pitem->itemData;
   1474          				DATA_HEX *hex=malloc(sizeof(DATA_HEX));
   \                     ??subMenuCopy_25:
   \   0000030C   8400A0E3           MOV      R0,#+132
   \   00000310   140000EF           SWI      +20
   \   00000314   0090A0E1           MOV      R9,R0
   1475          				hex->maxlen=hex1->maxlen;
   \   00000318   800098E5           LDR      R0,[R8, #+128]
   1476          				memcpy(hex->hex, hex1->hex, 128);
   \   0000031C   8020A0E3           MOV      R2,#+128
   \   00000320   800089E5           STR      R0,[R9, #+128]
   \   00000324   0810A0E1           MOV      R1,R8
   \   00000328   0900A0E1           MOV      R0,R9
   \   0000032C   1E0100EF           SWI      +286
   1477          				addItemToConfig(hex, sbmdst, TYPE_HEX, bytePos+byteBase, pitem->itemName);
   \   00000330   0C0086E2           ADD      R0,R6,#+12
   \   00000334   01002DE9           PUSH     {R0}
   \   00000338   073085E0           ADD      R3,R5,R7
   \   0000033C   0C20A0E3           MOV      R2,#+12
   \   00000340   B9FFFFEA           B        ??subMenuCopy_18
   1478          				break;
   1479          			}
   1480          		case TYPE_SF:
   1481          			{
   1482          				DATA_SF *sf1=(DATA_SF *)pitem->itemData;
   1483          				DATA_SF *sf=malloc(sizeof(DATA_SF));
   \                     ??subMenuCopy_26:
   \   00000344   A400A0E3           MOV      R0,#+164
   \   00000348   140000EF           SWI      +20
   \   0000034C   0090A0E1           MOV      R9,R0
   1484          				sf->maxlen=sf1->maxlen;
   \   00000350   A00098E5           LDR      R0,[R8, #+160]
   1485          				strcpy(sf->mask, sf1->mask);
   \   00000354   801088E2           ADD      R1,R8,#+128
   \   00000358   A00089E5           STR      R0,[R9, #+160]
   \   0000035C   800089E2           ADD      R0,R9,#+128
   \   00000360   1A0000EF           SWI      +26
   1486          				strcpy(sf->path, sf1->path);
   \   00000364   0810A0E1           MOV      R1,R8
   \   00000368   0900A0E1           MOV      R0,R9
   \   0000036C   1A0000EF           SWI      +26
   1487          				addItemToConfig(sf, sbmdst, TYPE_SF, bytePos+byteBase, pitem->itemName);
   \   00000370   0C0086E2           ADD      R0,R6,#+12
   \   00000374   01002DE9           PUSH     {R0}
   \   00000378   073085E0           ADD      R3,R5,R7
   \   0000037C   0D20A0E3           MOV      R2,#+13
   \   00000380   CFFFFFEA           B        ??subMenuCopy_23
   1488          				break;
   1489          			}
   1490          		case TYPE_SD:
   1491          			{
   1492          				DATA_SD *sd1=(DATA_SD *)pitem->itemData;
   1493          				DATA_SD *sd=malloc(sizeof(DATA_SD));
   \                     ??subMenuCopy_27:
   \   00000384   8400A0E3           MOV      R0,#+132
   \   00000388   140000EF           SWI      +20
   \   0000038C   0090A0E1           MOV      R9,R0
   1494          				sd->maxlen=sd1->maxlen;
   \   00000390   800098E5           LDR      R0,[R8, #+128]
   1495          				strcpy(sd->path,sd1->path);
   \   00000394   0810A0E1           MOV      R1,R8
   \   00000398   800089E5           STR      R0,[R9, #+128]
   \   0000039C   0900A0E1           MOV      R0,R9
   \   000003A0   1A0000EF           SWI      +26
   1496          				addItemToConfig(sd, sbmdst, TYPE_SD, bytePos+byteBase, pitem->itemName);
   \   000003A4   0C0086E2           ADD      R0,R6,#+12
   \   000003A8   01002DE9           PUSH     {R0}
   \   000003AC   073085E0           ADD      R3,R5,R7
   \   000003B0   0E20A0E3           MOV      R2,#+14
   \   000003B4   9CFFFFEA           B        ??subMenuCopy_18
   1497          				break;
   1498          			}
   1499          		case TYPE_SL:
   1500          			{
   1501          				DATA_SL *sl1=(DATA_SL *)pitem->itemData;
   1502          				DATA_SL *sl=malloc(sizeof(DATA_SL));
   \                     ??subMenuCopy_28:
   \   000003B8   0300A0E3           MOV      R0,#+3
   \   000003BC   140000EF           SWI      +20
   1503          				sl->initData=sl1->initData;
   \   000003C0   0210D8E5           LDRB     R1,[R8, #+2]
   1504          				sl->max=sl1->max;
   1505          				sl->min=sl1->min;
   1506          				addItemToConfig(sl, sbmdst, TYPE_SL, bytePos+byteBase, pitem->itemName);
   \   000003C4   073085E0           ADD      R3,R5,R7
   \   000003C8   1120A0E3           MOV      R2,#+17
   \   000003CC   0210C0E5           STRB     R1,[R0, #+2]
   \   000003D0   0110D8E5           LDRB     R1,[R8, #+1]
   \   000003D4   0110C0E5           STRB     R1,[R0, #+1]
   \   000003D8   0010D8E5           LDRB     R1,[R8, #+0]
   \   000003DC   0010C0E5           STRB     R1,[R0, #+0]
   \   000003E0   0C1086E2           ADD      R1,R6,#+12
   \   000003E4   02002DE9           PUSH     {R1}
   \   000003E8   390000EA           B        ??subMenuCopy_20
   1507          				break;
   1508          			}
   1509          		case TYPE_MS:
   1510          			{
   1511          				DATA_MS *ms1=(DATA_MS *)pitem->itemData;
   1512          				DATA_MS *ms=malloc(sizeof(DATA_MS));
   \                     ??subMenuCopy_29:
   \   000003EC   0400A0E3           MOV      R0,#+4
   \   000003F0   140000EF           SWI      +20
   1513          				ms->ms=ms1->ms;
   \   000003F4   001098E5           LDR      R1,[R8, #+0]
   1514          				addItemToConfig(ms, sbmdst, TYPE_MS, bytePos+byteBase, pitem->itemName);
   \   000003F8   073085E0           ADD      R3,R5,R7
   \   000003FC   001080E5           STR      R1,[R0, #+0]
   \   00000400   0C1086E2           ADD      R1,R6,#+12
   \   00000404   02002DE9           PUSH     {R1}
   \   00000408   0F20A0E3           MOV      R2,#+15
   \   0000040C   300000EA           B        ??subMenuCopy_20
   1515          				break;
   1516          			}
   1517          		case TYPE_POSB:
   1518          			{
   1519          				DATA_POS *pos1=(DATA_POS *)pitem->itemData;
   1520          				DATA_POS *pos=malloc(sizeof(DATA_POS));
   \                     ??subMenuCopy_30:
   \   00000410   0A00A0E3           MOV      R0,#+10
   \   00000414   140000EF           SWI      +20
   1521          				pos->x=pos1->x;
   \   00000418   F010D8E1           LDRSH    R1,[R8, #+0]
   1522          				pos->off=pos1->off;
   1523          				pos->y=pos1->y;
   1524          				pos->w=pos1->w;
   1525          				pos->h=pos1->h;
   1526          				addItemToConfig(pos, sbmdst, TYPE_POSB, bytePos+byteBase, pitem->itemName);
   \   0000041C   073085E0           ADD      R3,R5,R7
   \   00000420   1420A0E3           MOV      R2,#+20
   \   00000424   B010C0E1           STRH     R1,[R0, #+0]
   \   00000428   0210D8E5           LDRB     R1,[R8, #+2]
   \   0000042C   0210C0E5           STRB     R1,[R0, #+2]
   \   00000430   F410D8E1           LDRSH    R1,[R8, #+4]
   \   00000434   B410C0E1           STRH     R1,[R0, #+4]
   \   00000438   F610D8E1           LDRSH    R1,[R8, #+6]
   \   0000043C   B610C0E1           STRH     R1,[R0, #+6]
   \   00000440   F810D8E1           LDRSH    R1,[R8, #+8]
   \   00000444   B810C0E1           STRH     R1,[R0, #+8]
   \   00000448   0C1086E2           ADD      R1,R6,#+12
   \   0000044C   02002DE9           PUSH     {R1}
   \   00000450   1F0000EA           B        ??subMenuCopy_20
   1527          				break;
   1528          			}
   1529          		case TYPE_BYTES:
   1530          			{
   1531          				DATA_BYTES *dbytes1=(DATA_BYTES *)pitem->itemData;
   1532          				DATA_BYTES *dbytes=malloc(sizeof(DATA_BYTES));
   \                     ??subMenuCopy_31:
   \   00000454   8800A0E3           MOV      R0,#+136
   \   00000458   140000EF           SWI      +20
   \   0000045C   0090A0E1           MOV      R9,R0
   1533          				memcpy(dbytes, dbytes1, sizeof(DATA_BYTES));
   \   00000460   8820A0E3           MOV      R2,#+136
   \   00000464   0810A0E1           MOV      R1,R8
   \   00000468   1E0100EF           SWI      +286
   1534          				addItemToConfig(dbytes, sbmdst, TYPE_BYTES, bytePos+byteBase, pitem->itemName);
   \   0000046C   0C0086E2           ADD      R0,R6,#+12
   \   00000470   01002DE9           PUSH     {R0}
   \   00000474   073085E0           ADD      R3,R5,R7
   \   00000478   1020A0E3           MOV      R2,#+16
   \   0000047C   6AFFFFEA           B        ??subMenuCopy_18
   1535          				break;
   1536          			}
   1537          		case TYPE_INTS:
   1538          			{
   1539          				DATA_INTS *dints1=(DATA_INTS *)pitem->itemData;
   1540          				DATA_INTS *dints=malloc(sizeof(DATA_INTS));
   \                     ??subMenuCopy_32:
   \   00000480   830FA0E3           MOV      R0,#+524
   \   00000484   140000EF           SWI      +20
   \   00000488   0090A0E1           MOV      R9,R0
   1541          				memcpy(dints, dints1, sizeof(DATA_INTS));
   \   0000048C   832FA0E3           MOV      R2,#+524
   \   00000490   0810A0E1           MOV      R1,R8
   \   00000494   1E0100EF           SWI      +286
   1542          				addItemToConfig(dints, sbmdst, TYPE_INTS, bytePos+byteBase, pitem->itemName);
   \   00000498   0C0086E2           ADD      R0,R6,#+12
   \   0000049C   01002DE9           PUSH     {R0}
   \   000004A0   073085E0           ADD      R3,R5,R7
   \   000004A4   1220A0E3           MOV      R2,#+18
   \   000004A8   85FFFFEA           B        ??subMenuCopy_23
   1543          				break;
   1544          			}
   1545          		case TYPE_CONST:
   1546          			{
   1547          				DATA_CONST *dconst1=(DATA_CONST *)pitem->itemData;
   1548          				DATA_CONST *dconst=malloc(sizeof(DATA_CONST));
   \                     ??subMenuCopy_33:
   \   000004AC   0800A0E3           MOV      R0,#+8
   \   000004B0   140000EF           SWI      +20
   1549          				dconst->data=dconst1->data;
   \   000004B4   001098E5           LDR      R1,[R8, #+0]
   1550          				dconst->len=dconst1->len;
   1551          				addItemToConfig(dconst, sbmdst, TYPE_CONST, bytePos+byteBase, pitem->itemName);
   \   000004B8   073085E0           ADD      R3,R5,R7
   \   000004BC   001080E5           STR      R1,[R0, #+0]
   \   000004C0   041098E5           LDR      R1,[R8, #+4]
   \   000004C4   1520A0E3           MOV      R2,#+21
   \   000004C8   041080E5           STR      R1,[R0, #+4]
   \                     ??subMenuCopy_6:
   \   000004CC   0C1086E2           ADD      R1,R6,#+12
   \   000004D0   02002DE9           PUSH     {R1}
   \                     ??subMenuCopy_20:
   \   000004D4   0410A0E1           MOV      R1,R4
   \                     ??subMenuCopy_4:
   \   000004D8   ........           BL       addItemToConfig
   1552          				break;
   \   000004DC   04D08DE2           ADD      SP,SP,#+4
   1553          			}
   1554          		}
   1555          		pitem=pitem->next;
   \                     ??subMenuCopy_2:
   \   000004E0   046096E5           LDR      R6,[R6, #+4]
   1556          	}
   \   000004E4   000056E3           CMP      R6,#+0
   \   000004E8   CBFEFF1A           BNE      ??subMenuCopy_1
   \   000004EC   F08FBDE8           POP      {R4-R11,PC}      ;; return
   1557          }
   1558          void sortPatchConfigList(void);

   \                                 In segment CODE, align 4, keep-with-next
   1559          int readConfig(int type, char *tp) //type, 1,load one, 0,load all
   1560          {
   \                     readConfig:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   1561          	char *p;
   1562          	char *pp; //tmp start
   1563          	char *p2; //tmp vol
   1564          	if(type&&tp)
   \   00000008   00005113           CMPNE    R1,#+0
   \   0000000C   0300001A           BNE      ??readConfig_0
   1565          	{
   1566          		p=tp;
   1567          	}
   1568          	else
   1569          	{
   1570          		if(!loadConfig())
   \   00000010   ........           BL       loadConfig
   \   00000014   000050E3           CMP      R0,#+0
   1571          			return 0;
   \   00000018   F081BD08           POPEQ    {R4-R8,PC}
   1572          		p=cfg_buf;
   \   0000001C   ........           LDR      R1,??DataTable25  ;; cfg_buf
   1573          	}
   1574          	p=gotoRealPos(p);
   \                     ??readConfig_0:
   \   00000020   ........           LDR      R6,??DataTable31  ;; ptcfgtop
   \   00000024   0100A0E1           MOV      R0,R1
   \   00000028   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   0000002C   0050A0E1           MOV      R5,R0
   \   00000030   230000EA           B        ??readConfig_1
   1575          	while(*p)
   1576          	{
   1577          		pp=gotoQuoteStart(p);
   1578          		p=pp;
   1579          		if(!pp)
   1580          			break;
   1581          		//getnextpatch
   1582          		if((p2=strstrInQuote(pp, "patch="))||(p2=strstrInQuote(pp, "patch ")))
   1583          		{
   1584          			if(type)//读取完一个补丁就了事，用于重新载入一个补丁
   1585          				goto END;
   1586          			addPatchConfigList();
   1587          			addToPatchInfo(p2); ////Jump to name
   1588          			goto ANYWHERE;
   1589          		}
   1590          		if((p2=strstrInQuote(pp, "p ")))
   1591          		{
   1592          			if(isThatItem(p2-3))
   1593          			{
   1594          				if(type)//读取完一个补丁就了事，用于重新载入一个补丁
   1595          					goto END;
   1596          				addPatchConfigList();
   1597          				addToPatchInfo(p2); ////Jump to name
   1598          				goto ANYWHERE;
   1599          			}
   1600          		}
   1601          		if((p2=strstrInQuote(pp, "p=")))
   1602          		{
   1603          			if(isThatItem(p2-3))
   1604          			{
   1605          				if(type)//读取完一个补丁就了事，用于重新载入一个补丁
   1606          					goto END;
   1607          				addPatchConfigList();
   1608          				addToPatchInfo(p2); ////Jump to name
   1609          				goto ANYWHERE;
   1610          			}
   1611          		}
   1612          		if((p2=strstrInQuote(pp, "of ")))
   1613          		{
   1614          			if(isThatItem(p2-4))
   1615          			{
   1616          				char *s=gotoRealPos(p2);
   1617          				//if(*s=='-')
   1618          				//{
   1619          				//	s++;
   1620          				//	str2num(s, &ptcfgtop->offset, 0, 0, 0);
   1621          				//	ptcfgtop->offset=(-1)*(ptcfgtop->offset);
   1622          				//}
   1623          				//else
   1624          				{
   1625          					if(*s=='+')
   1626          						s++;
   1627          					str2num(s, &ptcfgtop->offset, 0, 0, 0);
   1628          				}
   1629          				goto ANYWHERE;
   1630          			}
   1631          		}
   1632          		if((p2=strstrInQuote(pp, "offset ")))
   1633          		{
   1634          			if(isThatItem(p2-8))
   1635          			{
   1636          				char *s=gotoRealPos(p2);
   1637          				//if(*s=='-')
   1638          				//{
   1639          				//	s++;
   1640          				//	str2num(s, &ptcfgtop->offset, 0, 0, 0);
   1641          				//	ptcfgtop->offset=0-(ptcfgtop->offset);
   1642          				//}
   1643          				//else
   1644          				{
   1645          					if(*s=='+')
   1646          						s++;
   1647          					str2num(s, &ptcfgtop->offset, 0, 0, 0);
   1648          				}
   1649          				goto ANYWHERE;
   1650          			}
   1651          		}
   1652          		if((p2=strstrInQuote(pp, "info")))
   1653          		{
   1654          			if(isThatItem(p2-5))
   1655          			{
   1656          				addInfoToPatchInfo(p2);
   1657          				goto ANYWHERE;
   1658          			}
   1659          		}
   1660          		if((p2=strstrInQuote(pp, STR_CHOICE))||(p2=strstrInQuote(pp, STR_CHOICE1))||(p2=strstrInQuote(pp, STR_CHOICE2)))
   1661          		{
   1662          			if(isPrepareItem(p2))
   1663          			{
   1664          				addPrepareData(p2); //Jump to 
   1665          				goto ANYWHERE;
   1666          			}
   1667          			//else
   1668          			//	doItemJob(pp, &ptcfgtop->mainitem);
   1669          			//goto ANYWHERE;
   1670          		}
   1671          		if((p2=strstrInQuote(pp, STR_TEMPLATE1)))
   1672          		{
   1673          			if(isThatItem(p2-3))
   1674          			{
   1675          				p=doTemplateWork(p2);
   1676          				goto ANYWHERE;
   1677          			}
   1678          		}
   1679          		if((p2=strstrInQuote(pp, STR_TEMPLATE2)))
   1680          		{
   1681          			p=doTemplateWork(p2);       
   1682          		}
   1683          		else
   1684          		{
   1685          			if((p2=strstrInQuote(pp, STR_SUBMENU2)))
   1686          			{
   1687          				if(isThatItem(p2-3))
   1688          				{
   1689          					if(*p2=='=')
   1690          						p2++;
   1691          					p=doSubMenuJob(&ptcfgtop->mainitem, p2);
   1692          				}
   1693          			}
   1694          			if((p2=strstrInQuote(pp, STR_SUBMENU1)))
   1695          			{
   1696          				p=doSubMenuJob(&ptcfgtop->mainitem, p2);
   1697          			}
   1698          			else
   1699          				doItemJob(pp, &ptcfgtop->mainitem);
   1700          		}
   1701          	ANYWHERE: //执行完成一种数据类型之后,不再对这一行进行解析
   1702          		p=gotoQuoteEnd(p);
   1703          		if(!p)
   1704          			break;
   1705          		p++;
   1706          		while(*p)
   \                     ??readConfig_2:
   \   00000034   0100F5E5           LDRB     R0,[R5, #+1]!
   \   00000038   000050E3           CMP      R0,#+0
   1707          		{
   1708          			if(*p=='{')
   \   0000003C   7B005013           CMPNE    R0,#+123
   \   00000040   1F00000A           BEQ      ??readConfig_1
   1709          				break;
   1710          			if(*p<0xA) //
   \   00000044   0A0050E3           CMP      R0,#+10
   \   00000048   1D00003A           BCC      ??readConfig_1
   1711          				break;
   1712          			if((*p>X_CHAR)&&(*p!=',')) //判断是这直接显示的字符
   \   0000004C   210050E3           CMP      R0,#+33
   \   00000050   F7FFFF3A           BCC      ??readConfig_2
   \   00000054   2C0050E3           CMP      R0,#+44
   \   00000058   F5FFFF0A           BEQ      ??readConfig_2
   1713          			{
   1714          				DATA_DRSTR *drstr=malloc(sizeof(DATA_DRSTR));
   \   0000005C   8000A0E3           MOV      R0,#+128
   \   00000060   140000EF           SWI      +20
   \   00000064   0070A0E1           MOV      R7,R0
   1715          				char *p1=p;
   1716          				char *p2=gotoQuoteStart(p);
   \   00000068   0500A0E1           MOV      R0,R5
   \   0000006C   ........           _BLF     gotoQuoteStart,??gotoQuoteStart??rA
   1717          				if(!p2)
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   1200000A           BEQ      ??readConfig_1
   1718          					break;
   1719          				p2--;
   1720          				while(*p2)
   \                     ??readConfig_3:
   \   00000078   011070E5           LDRB     R1,[R0, #-1]!
   \   0000007C   000051E3           CMP      R1,#+0
   \   00000080   0100000A           BEQ      ??readConfig_4
   1721          				{
   1722          					if(*p2>X_CHAR)
   \   00000084   210051E3           CMP      R1,#+33
   \   00000088   FAFFFF3A           BCC      ??readConfig_3
   1723          						break;
   1724          					p2--;
   1725          				}
   1726          				p2++;
   1727          				strnCopyWithEnd(drstr->str, p1, p2-p1);
   \                     ??readConfig_4:
   \   0000008C   010080E2           ADD      R0,R0,#+1
   \   00000090   052040E0           SUB      R2,R0,R5
   \   00000094   0510A0E1           MOV      R1,R5
   \   00000098   0700A0E1           MOV      R0,R7
   \   0000009C   ........           _BLF     strnCopyWithEnd,??strnCopyWithEnd??rA
   1728          				addItemToConfig(drstr, &ptcfgtop->mainitem, TYPE_DRSTR, 0, NULL);
   \   000000A0   0000A0E3           MOV      R0,#+0
   \   000000A4   01002DE9           PUSH     {R0}
   \   000000A8   000096E5           LDR      R0,[R6, #+0]
   \   000000AC   0030A0E3           MOV      R3,#+0
   \   000000B0   0120A0E3           MOV      R2,#+1
   \   000000B4   201080E2           ADD      R1,R0,#+32
   \   000000B8   0700A0E1           MOV      R0,R7
   \   000000BC   ........           BL       addItemToConfig
   1729          				break;
   \   000000C0   04D08DE2           ADD      SP,SP,#+4
   1730          			}
   1731          			p++;
   1732          		}
   \                     ??readConfig_1:
   \   000000C4   0000D5E5           LDRB     R0,[R5, #+0]
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   9C00000A           BEQ      ??readConfig_5
   \   000000D0   0500A0E1           MOV      R0,R5
   \   000000D4   ........           _BLF     gotoQuoteStart,??gotoQuoteStart??rA
   \   000000D8   0070A0E1           MOV      R7,R0
   \   000000DC   0750B0E1           MOVS     R5,R7
   \   000000E0   9700000A           BEQ      ??readConfig_5
   \   000000E4   70129FE5           LDR      R1,??readConfig_6+0xC  ;; `?<Constant "patch=">`
   \   000000E8   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000000EC   0080B0E1           MOVS     R8,R0
   \   000000F0   0400001A           BNE      ??readConfig_7
   \   000000F4   64129FE5           LDR      R1,??readConfig_6+0x10  ;; `?<Constant "patch ">`
   \   000000F8   0700A0E1           MOV      R0,R7
   \   000000FC   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000100   0080B0E1           MOVS     R8,R0
   \   00000104   0500000A           BEQ      ??readConfig_8
   \                     ??readConfig_7:
   \   00000108   000054E3           CMP      R4,#+0
   \   0000010C   8D00001A           BNE      ??readConfig_9
   \   00000110   ........           BL       addPatchConfigList
   \   00000114   0800A0E1           MOV      R0,R8
   \   00000118   ........           BL       addToPatchInfo
   \   0000011C   840000EA           B        ??readConfig_10
   \                     ??readConfig_8:
   \   00000120   8A1F8FE2           ADR      R1,??readConfig_6  ;; "p "
   \   00000124   0700A0E1           MOV      R0,R7
   \   00000128   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000012C   0080B0E1           MOVS     R8,R0
   \   00000130   0300000A           BEQ      ??readConfig_11
   \   00000134   030048E2           SUB      R0,R8,#+3
   \   00000138   ........           BL       isThatItem
   \   0000013C   000050E3           CMP      R0,#+0
   \   00000140   F0FFFF1A           BNE      ??readConfig_7
   \                     ??readConfig_11:
   \   00000144   821F8FE2           ADR      R1,??readConfig_6+0x4  ;; "p="
   \   00000148   0700A0E1           MOV      R0,R7
   \   0000014C   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000150   0080B0E1           MOVS     R8,R0
   \   00000154   0300000A           BEQ      ??readConfig_12
   \   00000158   030048E2           SUB      R0,R8,#+3
   \   0000015C   ........           BL       isThatItem
   \   00000160   000050E3           CMP      R0,#+0
   \   00000164   E7FFFF1A           BNE      ??readConfig_7
   \                     ??readConfig_12:
   \   00000168   7A1F8FE2           ADR      R1,??readConfig_6+0x8  ;; "of "
   \   0000016C   0700A0E1           MOV      R0,R7
   \   00000170   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000174   0080B0E1           MOVS     R8,R0
   \   00000178   1100000A           BEQ      ??readConfig_13
   \   0000017C   040048E2           SUB      R0,R8,#+4
   \   00000180   ........           BL       isThatItem
   \   00000184   000050E3           CMP      R0,#+0
   \   00000188   0D00000A           BEQ      ??readConfig_13
   \                     ??readConfig_14:
   \   0000018C   0800A0E1           MOV      R0,R8
   \   00000190   ........           _BLF     gotoRealPos,??gotoRealPos??rA
   \   00000194   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000198   0030A0E3           MOV      R3,#+0
   \   0000019C   2B0051E3           CMP      R1,#+43
   \   000001A0   0010A0E3           MOV      R1,#+0
   \   000001A4   02002DE9           PUSH     {R1}
   \   000001A8   0120A0E1           MOV      R2,R1
   \   000001AC   001096E5           LDR      R1,[R6, #+0]
   \   000001B0   01008002           ADDEQ    R0,R0,#+1
   \   000001B4   181081E2           ADD      R1,R1,#+24
   \   000001B8   ........           _BLF     str2num,??str2num??rA
   \   000001BC   04D08DE2           ADD      SP,SP,#+4
   \   000001C0   5B0000EA           B        ??readConfig_10
   \                     ??readConfig_13:
   \   000001C4   98119FE5           LDR      R1,??readConfig_6+0x14  ;; `?<Constant "offset ">`
   \   000001C8   0700A0E1           MOV      R0,R7
   \   000001CC   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000001D0   0080B0E1           MOVS     R8,R0
   \   000001D4   0300000A           BEQ      ??readConfig_15
   \   000001D8   080048E2           SUB      R0,R8,#+8
   \   000001DC   ........           BL       isThatItem
   \   000001E0   000050E3           CMP      R0,#+0
   \   000001E4   E8FFFF1A           BNE      ??readConfig_14
   \                     ??readConfig_15:
   \   000001E8   78119FE5           LDR      R1,??readConfig_6+0x18  ;; `?<Constant "info">`
   \   000001EC   0700A0E1           MOV      R0,R7
   \   000001F0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000001F4   0080B0E1           MOVS     R8,R0
   \   000001F8   0600000A           BEQ      ??readConfig_16
   \   000001FC   050048E2           SUB      R0,R8,#+5
   \   00000200   ........           BL       isThatItem
   \   00000204   000050E3           CMP      R0,#+0
   \   00000208   0200000A           BEQ      ??readConfig_16
   \   0000020C   0800A0E1           MOV      R0,R8
   \   00000210   ........           BL       addInfoToPatchInfo
   \   00000214   460000EA           B        ??readConfig_10
   \                     ??readConfig_16:
   \   00000218   ........           LDR      R1,??DataTable22  ;; STR_CHOICE
   \   0000021C   0700A0E1           MOV      R0,R7
   \   00000220   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000224   0080B0E1           MOVS     R8,R0
   \   00000228   0900001A           BNE      ??readConfig_17
   \   0000022C   38119FE5           LDR      R1,??readConfig_6+0x1C  ;; STR_CHOICE1
   \   00000230   0700A0E1           MOV      R0,R7
   \   00000234   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000238   0080B0E1           MOVS     R8,R0
   \   0000023C   0400001A           BNE      ??readConfig_17
   \   00000240   28119FE5           LDR      R1,??readConfig_6+0x20  ;; STR_CHOICE2
   \   00000244   0700A0E1           MOV      R0,R7
   \   00000248   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000024C   0080B0E1           MOVS     R8,R0
   \   00000250   0600000A           BEQ      ??readConfig_18
   \                     ??readConfig_17:
   \   00000254   0800A0E1           MOV      R0,R8
   \   00000258   ........           BL       isPrepareItem
   \   0000025C   000050E3           CMP      R0,#+0
   \   00000260   0200000A           BEQ      ??readConfig_18
   \   00000264   0800A0E1           MOV      R0,R8
   \   00000268   ........           BL       addPrepareData
   \   0000026C   300000EA           B        ??readConfig_10
   \                     ??readConfig_18:
   \   00000270   FC109FE5           LDR      R1,??readConfig_6+0x24  ;; STR_TEMPLATE1
   \   00000274   0700A0E1           MOV      R0,R7
   \   00000278   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   0000027C   0080B0E1           MOVS     R8,R0
   \   00000280   0700000A           BEQ      ??readConfig_19
   \   00000284   030048E2           SUB      R0,R8,#+3
   \   00000288   ........           BL       isThatItem
   \   0000028C   000050E3           CMP      R0,#+0
   \   00000290   0300000A           BEQ      ??readConfig_19
   \                     ??readConfig_20:
   \   00000294   0800A0E1           MOV      R0,R8
   \   00000298   ........           BL       doTemplateWork
   \                     ??readConfig_21:
   \   0000029C   0050A0E1           MOV      R5,R0
   \   000002A0   230000EA           B        ??readConfig_10
   \                     ??readConfig_19:
   \   000002A4   CC109FE5           LDR      R1,??readConfig_6+0x28  ;; STR_TEMPLATE2
   \   000002A8   0700A0E1           MOV      R0,R7
   \   000002AC   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000002B0   0080B0E1           MOVS     R8,R0
   \   000002B4   F6FFFF1A           BNE      ??readConfig_20
   \   000002B8   ........           LDR      R1,??DataTable23  ;; STR_SUBMENU2
   \   000002BC   0700A0E1           MOV      R0,R7
   \   000002C0   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   000002C4   0080B0E1           MOVS     R8,R0
   \   000002C8   0B00000A           BEQ      ??readConfig_22
   \   000002CC   030048E2           SUB      R0,R8,#+3
   \   000002D0   ........           BL       isThatItem
   \   000002D4   000050E3           CMP      R0,#+0
   \   000002D8   0700000A           BEQ      ??readConfig_22
   \   000002DC   0000D8E5           LDRB     R0,[R8, #+0]
   \   000002E0   3D0050E3           CMP      R0,#+61
   \   000002E4   000096E5           LDR      R0,[R6, #+0]
   \   000002E8   01808802           ADDEQ    R8,R8,#+1
   \   000002EC   0810A0E1           MOV      R1,R8
   \   000002F0   200080E2           ADD      R0,R0,#+32
   \   000002F4   ........           BL       doSubMenuJob
   \   000002F8   0050A0E1           MOV      R5,R0
   \                     ??readConfig_22:
   \   000002FC   ........           LDR      R1,??DataTable24  ;; STR_SUBMENU1
   \   00000300   0700A0E1           MOV      R0,R7
   \   00000304   ........           _BLF     strstrInQuote,??strstrInQuote??rA
   \   00000308   0080B0E1           MOVS     R8,R0
   \   0000030C   0400000A           BEQ      ??readConfig_23
   \   00000310   0010A0E1           MOV      R1,R0
   \   00000314   000096E5           LDR      R0,[R6, #+0]
   \   00000318   200080E2           ADD      R0,R0,#+32
   \   0000031C   ........           BL       doSubMenuJob
   \   00000320   DDFFFFEA           B        ??readConfig_21
   \                     ??readConfig_23:
   \   00000324   000096E5           LDR      R0,[R6, #+0]
   \   00000328   201080E2           ADD      R1,R0,#+32
   \   0000032C   0700A0E1           MOV      R0,R7
   \   00000330   ........           BL       doItemJob
   \                     ??readConfig_10:
   \   00000334   0500A0E1           MOV      R0,R5
   \   00000338   ........           _BLF     gotoQuoteEnd,??gotoQuoteEnd??rA
   \   0000033C   0050B0E1           MOVS     R5,R0
   \   00000340   3BFFFF1A           BNE      ??readConfig_2
   1733          	}
   1734          	sortPatchConfigList();
   \                     ??readConfig_5:
   \   00000344   ........           BL       sortPatchConfigList
   1735          END:
   1736          	return 1;
   \                     ??readConfig_9:
   \   00000348   0100A0E3           MOV      R0,#+1
   \   0000034C   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??readConfig_6:
   \   00000350   70200000           DC8      "p ",+0
   \   00000354   703D0000           DC8      "p=",+0
   \   00000358   6F662000           DC8      "of "
   \   0000035C   ........           DC32     `?<Constant "patch=">`
   \   00000360   ........           DC32     `?<Constant "patch ">`
   \   00000364   ........           DC32     `?<Constant "offset ">`
   \   00000368   ........           DC32     `?<Constant "info">`
   \   0000036C   ........           DC32     STR_CHOICE1
   \   00000370   ........           DC32     STR_CHOICE2
   \   00000374   ........           DC32     STR_TEMPLATE1
   \   00000378   ........           DC32     STR_TEMPLATE2
   1737          }
   1738          
   1739          //释放一个submenu的所有项目

   \                                 In segment CODE, align 4, keep-with-next
   1740          void freeSubMenuItem(PATCH_SUBMENU *subMenuItem)
   1741          {
   \                     freeSubMenuItem:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   1742          	PATCH_ITEM *patchItem=subMenuItem->item;
   \   00000004   804090E5           LDR      R4,[R0, #+128]
   1743          	PATCH_ITEM *ptcItem;
   1744          	while(patchItem)
   \   00000008   000054E3           CMP      R4,#+0
   \   0000000C   3080BD08           POPEQ    {R4,R5,PC}
   \   00000010   020000EA           B        ??freeSubMenuItem_0
   1745          	{
   1746          		if(patchItem->itemData)
   1747          		{
   1748          			if(patchItem->itemType==TYPE_PRE)
   1749          			{
   1750          				PREPARE_DATA *preData=(PREPARE_DATA *)patchItem->itemData;
   1751          				PREPARE_ITEM *preItem=preData->prepareItem;
   1752          				PREPARE_ITEM *pItem;
   1753          				while(preItem)
   1754          				{
   1755          					pItem=preItem->next;
   1756          					mfree(preItem);
   1757          					preItem=pItem;
   1758          				}
   1759          			}
   1760          			else if(patchItem->itemType==TYPE_CBOX)
   1761          			{
   1762          				DATA_CBOX *cbox=(DATA_CBOX *)patchItem->itemData;
   1763          				CBOX_ITEM *cboxItem=cbox->cboxitem;
   1764          				CBOX_ITEM *cItem;
   1765          				while(cboxItem)
   1766          				{
   1767          					cItem=cboxItem->next;
   1768          					mfree(cboxItem);
   1769          					cboxItem=cItem;
   1770          				}
   1771          			}
   1772          			mfree(patchItem->itemData);
   1773          		}
   1774          		ptcItem=patchItem->next;
   1775          		mfree(patchItem);
   1776          		if(ptcItem)
   1777          			ptcItem->prev=0;
   \                     ??freeSubMenuItem_1:
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   000085E5           STR      R0,[R5, #+0]
   1778          		else
   1779          			break;
   1780          		patchItem=ptcItem;
   \   0000001C   0540A0E1           MOV      R4,R5
   \                     ??freeSubMenuItem_0:
   \   00000020   900094E5           LDR      R0,[R4, #+144]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   1500000A           BEQ      ??freeSubMenuItem_2
   \   0000002C   8C1094E5           LDR      R1,[R4, #+140]
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0700001A           BNE      ??freeSubMenuItem_3
   \   00000038   200090E5           LDR      R0,[R0, #+32]
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0D00000A           BEQ      ??freeSubMenuItem_4
   \                     ??freeSubMenuItem_5:
   \   00000044   045090E5           LDR      R5,[R0, #+4]
   \   00000048   150000EF           SWI      +21
   \   0000004C   0500B0E1           MOVS     R0,R5
   \   00000050   0900000A           BEQ      ??freeSubMenuItem_4
   \   00000054   FAFFFFEA           B        ??freeSubMenuItem_5
   \                     ??freeSubMenuItem_3:
   \   00000058   060051E3           CMP      R1,#+6
   \   0000005C   0600001A           BNE      ??freeSubMenuItem_4
   \   00000060   040090E5           LDR      R0,[R0, #+4]
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   0300000A           BEQ      ??freeSubMenuItem_4
   \                     ??freeSubMenuItem_6:
   \   0000006C   045090E5           LDR      R5,[R0, #+4]
   \   00000070   150000EF           SWI      +21
   \   00000074   0500B0E1           MOVS     R0,R5
   \   00000078   FBFFFF1A           BNE      ??freeSubMenuItem_6
   \                     ??freeSubMenuItem_4:
   \   0000007C   900094E5           LDR      R0,[R4, #+144]
   \   00000080   150000EF           SWI      +21
   \                     ??freeSubMenuItem_2:
   \   00000084   045094E5           LDR      R5,[R4, #+4]
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   150000EF           SWI      +21
   \   00000090   000055E3           CMP      R5,#+0
   \   00000094   DEFFFF1A           BNE      ??freeSubMenuItem_1
   1781          	}
   1782          }
   \   00000098   3080BDE8           POP      {R4,R5,PC}       ;; return
   1783          
   1784          //释放整个补丁

   \                                 In segment CODE, align 4, keep-with-next
   1785          void freePatchItem(PATCH_SUBMENU *subMenuItem)
   1786          {
   \                     freePatchItem:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   1787          	PATCH_ITEM *patchItem=subMenuItem->item;
   \   00000004   804090E5           LDR      R4,[R0, #+128]
   1788          	PATCH_ITEM *ptcItem;
   1789          	while(patchItem)
   \   00000008   000054E3           CMP      R4,#+0
   \   0000000C   3080BD08           POPEQ    {R4,R5,PC}
   \   00000010   020000EA           B        ??freePatchItem_0
   1790          	{
   1791          		if(patchItem->itemData)
   1792          		{
   1793          			if(patchItem->itemType==TYPE_PRE)
   1794          			{
   1795          				PREPARE_DATA *preData=(PREPARE_DATA *)patchItem->itemData;
   1796          				PREPARE_ITEM *preItem=preData->prepareItem;
   1797          				PREPARE_ITEM *pItem;
   1798          				while(preItem)
   1799          				{
   1800          					pItem=preItem->next;
   1801          					mfree(preItem);
   1802          					preItem=pItem;
   1803          				}
   1804          			}
   1805          			else if(patchItem->itemType==TYPE_CBOX)
   1806          			{
   1807          				DATA_CBOX *cbox=(DATA_CBOX *)patchItem->itemData;
   1808          				CBOX_ITEM *cboxItem=cbox->cboxitem;
   1809          				CBOX_ITEM *cItem;
   1810          				while(cboxItem)
   1811          				{
   1812          					cItem=cboxItem->next;
   1813          					mfree(cboxItem);
   1814          					cboxItem=cItem;
   1815          				}
   1816          			}
   1817          			else if(patchItem->itemType==TYPE_SUBMENU||patchItem->itemType==TYPE_TP)
   1818          			{
   1819          				PATCH_SUBMENU *subMenu=(PATCH_SUBMENU *)patchItem->itemData;
   1820          				freePatchItem(subMenu);
   1821          			}
   1822          			mfree(patchItem->itemData);
   1823          		}
   1824          		ptcItem=patchItem->next;
   1825          		mfree(patchItem);
   1826          		if(ptcItem)
   1827          			ptcItem->prev=0;
   \                     ??freePatchItem_1:
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   000085E5           STR      R0,[R5, #+0]
   1828          		else
   1829          			break;
   1830          		patchItem=ptcItem;
   \   0000001C   0540A0E1           MOV      R4,R5
   \                     ??freePatchItem_0:
   \   00000020   900094E5           LDR      R0,[R4, #+144]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   1A00000A           BEQ      ??freePatchItem_2
   \   0000002C   8C1094E5           LDR      R1,[R4, #+140]
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0700001A           BNE      ??freePatchItem_3
   \   00000038   200090E5           LDR      R0,[R0, #+32]
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   1200000A           BEQ      ??freePatchItem_4
   \                     ??freePatchItem_5:
   \   00000044   045090E5           LDR      R5,[R0, #+4]
   \   00000048   150000EF           SWI      +21
   \   0000004C   0500B0E1           MOVS     R0,R5
   \   00000050   0E00000A           BEQ      ??freePatchItem_4
   \   00000054   FAFFFFEA           B        ??freePatchItem_5
   \                     ??freePatchItem_3:
   \   00000058   060051E3           CMP      R1,#+6
   \   0000005C   0700001A           BNE      ??freePatchItem_6
   \   00000060   040090E5           LDR      R0,[R0, #+4]
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   0800000A           BEQ      ??freePatchItem_4
   \                     ??freePatchItem_7:
   \   0000006C   045090E5           LDR      R5,[R0, #+4]
   \   00000070   150000EF           SWI      +21
   \   00000074   0500B0E1           MOVS     R0,R5
   \   00000078   0400000A           BEQ      ??freePatchItem_4
   \   0000007C   FAFFFFEA           B        ??freePatchItem_7
   \                     ??freePatchItem_6:
   \   00000080   0B0051E3           CMP      R1,#+11
   \   00000084   13005113           CMPNE    R1,#+19
   \   00000088   0000001A           BNE      ??freePatchItem_4
   \   0000008C   DBFFFFEB           BL       freePatchItem
   \                     ??freePatchItem_4:
   \   00000090   900094E5           LDR      R0,[R4, #+144]
   \   00000094   150000EF           SWI      +21
   \                     ??freePatchItem_2:
   \   00000098   045094E5           LDR      R5,[R4, #+4]
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   150000EF           SWI      +21
   \   000000A4   000055E3           CMP      R5,#+0
   \   000000A8   D9FFFF1A           BNE      ??freePatchItem_1
   1831          	}
   1832          }
   \   000000AC   3080BDE8           POP      {R4,R5,PC}       ;; return
   1833          
   1834          //重新载入一个补丁配置(从config.txt)，并释放老的配置

   \                                 In segment CODE, align 4, keep-with-next
   1835          void reloadThisPatch(PTC_CONFIG *ptcfg)
   1836          {
   \                     reloadThisPatch:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1837          	if(loadConfig())
   \   00000008   ........           BL       loadConfig
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   F081BD08           POPEQ    {R4-R8,PC}
   1838          	{
   1839          		char *p;
   1840          		if(p=strstr(cfg_buf, ptcfg->patchInfo->patchName))
   \   00000014   ........           LDR      R0,??DataTable25  ;; cfg_buf
   \   00000018   1C1094E5           LDR      R1,[R4, #+28]
   \   0000001C   180100EF           SWI      +280
   \   00000020   0080B0E1           MOVS     R8,R0
   \   00000024   F081BD08           POPEQ    {R4-R8,PC}
   1841          		{
   1842          			PTC_CONFIG *ptc_temp=ptcfgtop;
   \   00000028   ........           LDR      R6,??DataTable31  ;; ptcfgtop
   1843          			PTC_CONFIG *ptc_config=malloc(sizeof(PTC_CONFIG));
   \   0000002C   A400A0E3           MOV      R0,#+164
   \   00000030   007096E5           LDR      R7,[R6, #+0]
   \   00000034   140000EF           SWI      +20
   \   00000038   0050A0E1           MOV      R5,R0
   1844          			ptc_config->prev=ptcfg->prev;
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000085E5           STR      R0,[R5, #+0]
   1845          			ptc_config->next=ptcfg->next;
   \   00000044   040094E5           LDR      R0,[R4, #+4]
   \   00000048   040085E5           STR      R0,[R5, #+4]
   1846          			ptc_config->patchonoff=127; //all profile on, patch off 
   \   0000004C   7F00A0E3           MOV      R0,#+127
   \   00000050   0800C5E5           STRB     R0,[R5, #+8]
   1847          			ptc_config->patchInfo=0;
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   1C0085E5           STR      R0,[R5, #+28]
   1848          			ptc_config->mainitem.smName[0]=0;
   \   0000005C   2000C5E5           STRB     R0,[R5, #+32]
   1849          			ptc_config->mainitem.item=0;
   \   00000060   A00085E5           STR      R0,[R5, #+160]
   1850          			ptc_config->needSaveData=0;
   \   00000064   0C0085E5           STR      R0,[R5, #+12]
   1851          			ptc_config->memory=0;
   \   00000068   140085E5           STR      R0,[R5, #+20]
   1852          			ptc_config->offset=0;
   \   0000006C   180085E5           STR      R0,[R5, #+24]
   1853          			ptc_config->disableProfile=0;
   \   00000070   100085E5           STR      R0,[R5, #+16]
   1854          			ptcfgtop=ptc_config;
   \   00000074   005086E5           STR      R5,[R6, #+0]
   \   00000078   000000EA           B        ??reloadThisPatch_0
   1855          			while(*p) //goto Start Pos, maybe '`',
   1856          			{
   1857          				if((*p==' ')||(*p=='`'))
   1858          					break;
   1859          				if((*p=='=')||(*p=='{'))
   1860          				{
   1861          					p++;
   1862          					break;
   1863          				}
   1864          				p--;
   \                     ??reloadThisPatch_1:
   \   0000007C   018048E2           SUB      R8,R8,#+1
   \                     ??reloadThisPatch_0:
   \   00000080   0000D8E5           LDRB     R0,[R8, #+0]
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   20005013           CMPNE    R0,#+32
   \   0000008C   60005013           CMPNE    R0,#+96
   \   00000090   0300000A           BEQ      ??reloadThisPatch_2
   \   00000094   3D0050E3           CMP      R0,#+61
   \   00000098   7B005013           CMPNE    R0,#+123
   \   0000009C   F6FFFF1A           BNE      ??reloadThisPatch_1
   \   000000A0   018088E2           ADD      R8,R8,#+1
   1865          			}
   1866          			addToPatchInfo(p);
   \                     ??reloadThisPatch_2:
   \   000000A4   0800A0E1           MOV      R0,R8
   \   000000A8   ........           BL       addToPatchInfo
   1867          			readConfig(1, p); //reload
   \   000000AC   0810A0E1           MOV      R1,R8
   \   000000B0   0100A0E3           MOV      R0,#+1
   \   000000B4   ........           BL       readConfig
   1868          			ptcfgtop=ptc_temp;
   \   000000B8   007086E5           STR      R7,[R6, #+0]
   1869          			ptc_temp=ptcfg->prev;
   \   000000BC   000094E5           LDR      R0,[R4, #+0]
   1870          			if(ptc_temp)
   \   000000C0   000050E3           CMP      R0,#+0
   1871          				ptc_temp->next=ptc_config;
   \   000000C4   04508015           STRNE    R5,[R0, #+4]
   1872          			else //top
   1873          				ptcfgtop=ptc_config;
   \   000000C8   00508605           STREQ    R5,[R6, #+0]
   1874          			ptc_temp=ptcfg->next;
   \   000000CC   040094E5           LDR      R0,[R4, #+4]
   1875          			if(ptc_temp)
   \   000000D0   000050E3           CMP      R0,#+0
   1876          				ptc_temp->prev=ptc_config;
   \   000000D4   00508015           STRNE    R5,[R0, #+0]
   1877          			if(ptcfg->patchInfo->info) //free info
   \   000000D8   1C0094E5           LDR      R0,[R4, #+28]
   \   000000DC   B81090E5           LDR      R1,[R0, #+184]
   \   000000E0   000051E3           CMP      R1,#+0
   \   000000E4   0100000A           BEQ      ??reloadThisPatch_3
   1878          				mfree(ptcfg->patchInfo->info);
   \   000000E8   0100A0E1           MOV      R0,R1
   \   000000EC   150000EF           SWI      +21
   1879          			mfree(ptcfg->patchInfo);
   \                     ??reloadThisPatch_3:
   \   000000F0   1C0094E5           LDR      R0,[R4, #+28]
   \   000000F4   150000EF           SWI      +21
   1880          			freePatchItem(&ptcfg->mainitem);
   \   000000F8   200084E2           ADD      R0,R4,#+32
   \   000000FC   ........           BL       freePatchItem
   1881          			mfree(ptcfg);
   \   00000100   0400A0E1           MOV      R0,R4
   \   00000104   150000EF           SWI      +21
   1882          		}
   1883          	}
   1884          }
   \   00000108   F081BDE8           POP      {R4-R8,PC}       ;; return
   1885          
   1886          //交换两个补丁的位置

   \                                 In segment CODE, align 4, keep-with-next
   1887          void swapPatchConfigList(PTC_CONFIG *p1, PTC_CONFIG *p2)
   1888          {
   \                     swapPatchConfigList:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1889          	PTC_CONFIG *p1n=p1->next;
   \   00000008   046094E5           LDR      R6,[R4, #+4]
   1890          	PTC_CONFIG *p1p=p1->prev;
   \   0000000C   007094E5           LDR      R7,[R4, #+0]
   \   00000010   0150A0E1           MOV      R5,R1
   1891          	PTC_CONFIG *p2n=p2->next;
   \   00000014   048095E5           LDR      R8,[R5, #+4]
   1892          	PTC_CONFIG *p2p=p2->prev;
   \   00000018   009095E5           LDR      R9,[R5, #+0]
   1893          	PTC_CONFIG *temp=malloc(sizeof(PTC_CONFIG));
   \   0000001C   A400A0E3           MOV      R0,#+164
   \   00000020   140000EF           SWI      +20
   \   00000024   00A0A0E1           MOV      R10,R0
   1894          	memcpy(temp, p2, sizeof(PTC_CONFIG));
   \   00000028   A420A0E3           MOV      R2,#+164
   \   0000002C   0510A0E1           MOV      R1,R5
   \   00000030   1E0100EF           SWI      +286
   1895          	memcpy(p2, p1, sizeof(PTC_CONFIG));
   \   00000034   A420A0E3           MOV      R2,#+164
   \   00000038   0410A0E1           MOV      R1,R4
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   1E0100EF           SWI      +286
   1896          	memcpy(p1, temp, sizeof(PTC_CONFIG));
   \   00000044   A420A0E3           MOV      R2,#+164
   \   00000048   0A10A0E1           MOV      R1,R10
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   1E0100EF           SWI      +286
   1897          	if(p1p)
   \   00000054   000057E3           CMP      R7,#+0
   1898          		p1p->next=p1;
   \   00000058   04408715           STRNE    R4,[R7, #+4]
   1899          	p1->prev=p1p;
   \   0000005C   007084E5           STR      R7,[R4, #+0]
   1900          	if(p1n)
   \   00000060   000056E3           CMP      R6,#+0
   1901          		p1n->prev=p1;
   \   00000064   00408615           STRNE    R4,[R6, #+0]
   1902          	p1->next=p1n;
   \   00000068   046084E5           STR      R6,[R4, #+4]
   1903          	if(p2n)
   \   0000006C   000058E3           CMP      R8,#+0
   1904          		p2n->prev=p2;
   \   00000070   00508815           STRNE    R5,[R8, #+0]
   1905          	p2->next=p2n;
   \   00000074   048085E5           STR      R8,[R5, #+4]
   1906          	if(p2p)
   \   00000078   000059E3           CMP      R9,#+0
   1907          		p2p->next=p2;
   \   0000007C   04508915           STRNE    R5,[R9, #+4]
   1908          	p2->prev=p2p;
   \   00000080   009085E5           STR      R9,[R5, #+0]
   1909          	mfree(temp);
   \   00000084   0A00A0E1           MOV      R0,R10
   \   00000088   150000EF           SWI      +21
   1910          }
   \   0000008C   F087BDE8           POP      {R4-R10,PC}      ;; return
   1911          
   1912          //排序补丁，按照补丁名称

   \                                 In segment CODE, align 4, keep-with-next
   1913          void sortPatchConfigList(void)
   1914          {
   1915          	PTC_CONFIG *ptcfg=ptcfgtop;
   \                     sortPatchConfigList:
   \   00000000   ........           LDR      R0,??DataTable31  ;; ptcfgtop
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   004090E5           LDR      R4,[R0, #+0]
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   3080BD08           POPEQ    {R4,R5,PC}
   1916          	PTC_CONFIG *pcfg;
   1917          	while(ptcfg)
   1918          	{
   1919          		pcfg=ptcfg->next;
   \                     ??sortPatchConfigList_0:
   \   00000014   045094E5           LDR      R5,[R4, #+4]
   \   00000018   000055E3           CMP      R5,#+0
   \   0000001C   0B00000A           BEQ      ??sortPatchConfigList_1
   1920          		while(pcfg)
   1921          		{
   1922          			if(strncmpNoCase(ptcfg->patchInfo->patchName, pcfg->patchInfo->patchName, 128)>0)
   \                     ??sortPatchConfigList_2:
   \   00000020   1C0094E5           LDR      R0,[R4, #+28]
   \   00000024   1C1095E5           LDR      R1,[R5, #+28]
   \   00000028   8020A0E3           MOV      R2,#+128
   \   0000002C   ........           _BLF     strncmpNoCase,??strncmpNoCase??rA
   \   00000030   010050E3           CMP      R0,#+1
   \   00000034   020000BA           BLT      ??sortPatchConfigList_3
   1923          			{
   1924          				swapPatchConfigList(ptcfg, pcfg);
   \   00000038   0510A0E1           MOV      R1,R5
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       swapPatchConfigList
   1925          			}
   1926          			pcfg=pcfg->next;
   \                     ??sortPatchConfigList_3:
   \   00000044   045095E5           LDR      R5,[R5, #+4]
   1927          		}
   \   00000048   000055E3           CMP      R5,#+0
   \   0000004C   F3FFFF1A           BNE      ??sortPatchConfigList_2
   1928          		ptcfg=ptcfg->next;
   \                     ??sortPatchConfigList_1:
   \   00000050   044094E5           LDR      R4,[R4, #+4]
   1929          	}
   \   00000054   000054E3           CMP      R4,#+0
   \   00000058   EDFFFF1A           BNE      ??sortPatchConfigList_0
   1930          }
   \   0000005C   3080BDE8           POP      {R4,R5,PC}       ;; return
   1931          
   1932          //释放所有补丁

   \                                 In segment CODE, align 4, keep-with-next
   1933          void fuckThemAll(void)
   1934          {
   \                     fuckThemAll:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   1935          	PTC_CONFIG *ptcfg=ptcfgtop;
   \   00000004   ........           LDR      R4,??DataTable31  ;; ptcfgtop
   \   00000008   020000EA           B        ??fuckThemAll_0
   1936          	while(ptcfg)
   1937          	{
   1938          		if(ptcfg->patchInfo->info) //free info
   1939          			mfree(ptcfg->patchInfo->info);
   1940          		mfree(ptcfg->patchInfo);
   1941          		freePatchItem(&ptcfg->mainitem);
   1942          		ptcfgtop=ptcfg->next;
   1943          		mfree(ptcfg);
   1944          		if(ptcfgtop)
   1945          			ptcfgtop->prev=0;
   \                     ??fuckThemAll_1:
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   001080E5           STR      R1,[R0, #+0]
   1946          		else
   1947          			break;
   1948          		ptcfg=ptcfgtop;
   \                     ??fuckThemAll_0:
   \   00000018   005094E5           LDR      R5,[R4, #+0]
   \   0000001C   000055E3           CMP      R5,#+0
   \   00000020   3080BD08           POPEQ    {R4,R5,PC}
   \   00000024   1C0095E5           LDR      R0,[R5, #+28]
   \   00000028   B81090E5           LDR      R1,[R0, #+184]
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   0100000A           BEQ      ??fuckThemAll_2
   \   00000034   0100A0E1           MOV      R0,R1
   \   00000038   150000EF           SWI      +21
   \                     ??fuckThemAll_2:
   \   0000003C   1C0095E5           LDR      R0,[R5, #+28]
   \   00000040   150000EF           SWI      +21
   \   00000044   200085E2           ADD      R0,R5,#+32
   \   00000048   ........           BL       freePatchItem
   \   0000004C   040095E5           LDR      R0,[R5, #+4]
   \   00000050   000084E5           STR      R0,[R4, #+0]
   \   00000054   0500A0E1           MOV      R0,R5
   \   00000058   150000EF           SWI      +21
   \   0000005C   000094E5           LDR      R0,[R4, #+0]
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   E8FFFF1A           BNE      ??fuckThemAll_1
   1949          	}
   1950          }
   \   00000068   3080BDE8           POP      {R4,R5,PC}       ;; return
   1951          
   1952          //找到给定序号的补丁

   \                                 In segment CODE, align 4, keep-with-next
   1953          PTC_CONFIG *getPatchConfigItem(int n)
   1954          {
   1955          	int i=0;
   1956          	PTC_CONFIG *ptcfg=ptcfgtop;
   \                     getPatchConfigItem:
   \   00000000   ........           LDR      R1,??DataTable31  ;; ptcfgtop
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   001091E5           LDR      R1,[R1, #+0]
   \   0000000C   010000EA           B        ??getPatchConfigItem_0
   1957          	while(ptcfg)
   1958          	{
   1959          		if(i==n)
   1960          			return ptcfg;
   1961          		ptcfg=ptcfg->next;
   \                     ??getPatchConfigItem_1:
   \   00000010   041091E5           LDR      R1,[R1, #+4]
   1962          		i++;
   \   00000014   012082E2           ADD      R2,R2,#+1
   \                     ??getPatchConfigItem_0:
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   0300000A           BEQ      ??getPatchConfigItem_2
   \   00000020   000052E1           CMP      R2,R0
   \   00000024   F9FFFF1A           BNE      ??getPatchConfigItem_1
   \   00000028   0100A0E1           MOV      R0,R1
   \   0000002C   1EFF2FE1           BX       LR
   1963          	}
   1964          	return 0;
   \                     ??getPatchConfigItem_2:
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   1EFF2FE1           BX       LR               ;; return
   1965          }
   1966          
   1967          //给出所给选择项的最大条目

   \                                 In segment CODE, align 4, keep-with-next
   1968          int getMaxCBoxItem(DATA_CBOX *cbox)
   1969          {
   1970          	CBOX_ITEM *cboxitem=cbox->cboxitem;
   \                     getMaxCBoxItem:
   \   00000000   041090E5           LDR      R1,[R0, #+4]
   1971          	int i=0;
   \   00000004   0000A0E3           MOV      R0,#+0
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   1EFF2F01           BXEQ     LR
   1972          	while(cboxitem)
   1973          	{
   1974          		cboxitem=cboxitem->next;
   \                     ??getMaxCBoxItem_0:
   \   00000010   041091E5           LDR      R1,[R1, #+4]
   1975          		i++;
   \   00000014   010080E2           ADD      R0,R0,#+1
   1976          	}
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   FBFFFF1A           BNE      ??getMaxCBoxItem_0
   1977          	return i;
   \   00000020   1EFF2FE1           BX       LR               ;; return
   1978          }
   1979          
   1980          //给出光标所指选择项

   \                                 In segment CODE, align 4, keep-with-next
   1981          CBOX_ITEM *getCurCBoxItem(DATA_CBOX *cbox, int cur)
   1982          {
   1983          	CBOX_ITEM *cboxitem=cbox->cboxitem;
   \                     getCurCBoxItem:
   \   00000000   040090E5           LDR      R0,[R0, #+4]
   1984          	int i=0;
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   010000EA           B        ??getCurCBoxItem_0
   1985          	while(cboxitem)
   1986          	{
   1987          		if(i==cur)
   1988          			return cboxitem;
   1989          		cboxitem=cboxitem->next;
   \                     ??getCurCBoxItem_1:
   \   0000000C   040090E5           LDR      R0,[R0, #+4]
   1990          		i++;
   \   00000010   012082E2           ADD      R2,R2,#+1
   \                     ??getCurCBoxItem_0:
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   01005211           CMPNE    R2,R1
   \   0000001C   FAFFFF1A           BNE      ??getCurCBoxItem_1
   1991          	}
   1992          	return 0;
   \   00000020   1EFF2FE1           BX       LR               ;; return
   1993          }
   1994          
   1995          //给出初始选择项

   \                                 In segment CODE, align 4, keep-with-next
   1996          CBOX_ITEM *getInitCBoxItem(DATA_CBOX *cbox, int *cur)
   1997          {
   \                     getInitCBoxItem:
   \   00000000   10002DE9           PUSH     {R4}
   1998          	CBOX_ITEM *cboxitem=cbox->cboxitem;
   \   00000004   042090E5           LDR      R2,[R0, #+4]
   1999          	int i=1; //选项是从1开始算的，0为标题
   \   00000008   0130A0E3           MOV      R3,#+1
   2000          	*cur=i;
   \   0000000C   01C0A0E3           MOV      R12,#+1
   \   00000010   00C081E5           STR      R12,[R1, #+0]
   \   00000014   010000EA           B        ??getInitCBoxItem_0
   2001          	while(cboxitem)
   2002          	{
   2003          		if(cboxitem->data == cbox->initData)
   2004          		{
   2005          			*cur=i;
   2006          			return cboxitem;
   2007          		}
   2008          		cboxitem=cboxitem->next;
   \                     ??getInitCBoxItem_1:
   \   00000018   042092E5           LDR      R2,[R2, #+4]
   2009          		i++;
   \   0000001C   013083E2           ADD      R3,R3,#+1
   \                     ??getInitCBoxItem_0:
   \   00000020   000052E3           CMP      R2,#+0
   \   00000024   0700000A           BEQ      ??getInitCBoxItem_2
   \   00000028   88C0D2E5           LDRB     R12,[R2, #+136]
   \   0000002C   0040D0E5           LDRB     R4,[R0, #+0]
   \   00000030   04005CE1           CMP      R12,R4
   \   00000034   F7FFFF1A           BNE      ??getInitCBoxItem_1
   \   00000038   003081E5           STR      R3,[R1, #+0]
   \   0000003C   1000BDE8           POP      {R4}
   \   00000040   0200A0E1           MOV      R0,R2
   \   00000044   1EFF2FE1           BX       LR
   2010          	}
   2011          	return 0;
   \                     ??getInitCBoxItem_2:
   \   00000048   1000BDE8           POP      {R4}
   \   0000004C   0000A0E3           MOV      R0,#+0
   \   00000050   1EFF2FE1           BX       LR               ;; return
   2012          }
   2013          
   2014          //读取并初始化所有补丁配置

   \                                 In segment CODE, align 4, keep-with-next
   2015          int getAllPatchData(void)
   2016          {
   \                     getAllPatchData:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2017          	PTC_CONFIG *ptcfg;
   2018          	if(!readConfig(0, 0))
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   ........           BL       readConfig
   \   00000010   000050E3           CMP      R0,#+0
   2019          		return 0;
   \   00000014   1080BD08           POPEQ    {R4,PC}
   2020          	ptcfg=ptcfgtop;
   \   00000018   ........           LDR      R0,??DataTable31  ;; ptcfgtop
   \   0000001C   004090E5           LDR      R4,[R0, #+0]
   \   00000020   000054E3           CMP      R4,#+0
   \   00000024   0400000A           BEQ      ??getAllPatchData_0
   2021          	while(ptcfg)
   2022          	{
   2023          		initPatchConfig(ptcfg);
   \                     ??getAllPatchData_1:
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     initPatchConfig,??initPatchConfig??rA
   2024          		ptcfg=ptcfg->next;
   \   00000030   044094E5           LDR      R4,[R4, #+4]
   2025          	}
   \   00000034   000054E3           CMP      R4,#+0
   \   00000038   FAFFFF1A           BNE      ??getAllPatchData_1
   2026          	return 1;
   \                     ??getAllPatchData_0:
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   1080BDE8           POP      {R4,PC}          ;; return
   2027          }
   2028          
   2029          //设置补丁开关

   \                                 In segment CODE, align 4, keep-with-next
   2030          void setPatchOnOff(PTC_CONFIG *ptcfg, int n) //0-6, profile, 7 patch
   2031          {
   \                     setPatchOnOff:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   2032          	if(!ptcfg)
   \   00000008   7080BD08           POPEQ    {R4-R6,PC}
   2033          		return;
   2034          	if(getPatchOnOff(ptcfg, n))
   \   0000000C   0860D4E5           LDRB     R6,[R4, #+8]
   \   00000010   0100A0E3           MOV      R0,#+1
   \   00000014   1051A0E1           LSL      R5,R0,R1
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       getPatchOnOff
   \   00000020   000050E3           CMP      R0,#+0
   2035          	{
   2036          		ptcfg->patchonoff=(ptcfg->patchonoff)&(~(1<<n));
   \   00000024   0500C611           BICNE    R0,R6,R5
   \   00000028   0800C415           STRBNE   R0,[R4, #+8]
   \   0000002C   7080BD18           POPNE    {R4-R6,PC}
   2037          	}
   2038          	else
   2039          	{
   2040          		ptcfg->patchonoff=(ptcfg->patchonoff)|(1<<n);
   \   00000030   060085E1           ORR      R0,R5,R6
   \   00000034   0800C4E5           STRB     R0,[R4, #+8]
   \   00000038   7080BDE8           POP      {R4-R6,PC}       ;; return
   2041          	}
   2042          }
   2043          
   2044          //读取补丁开关状态

   \                                 In segment CODE, align 4, keep-with-next
   2045          int getPatchOnOff(PTC_CONFIG *ptcfg, int n) //0-6 profile, 7 patch on/off
   2046          {
   2047          	unsigned char c=ptcfg->patchonoff;
   \                     getPatchOnOff:
   \   00000000   0800D0E5           LDRB     R0,[R0, #+8]
   2048          	if(n>7||n<0)
   \   00000004   080051E3           CMP      R1,#+8
   \   00000008   010000AA           BGE      ??getPatchOnOff_0
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0100005A           BPL      ??getPatchOnOff_1
   2049          		return 0;
   \                     ??getPatchOnOff_0:
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   1EFF2FE1           BX       LR
   2050          	c=c>>n;
   2051          	return (c&1);
   \                     ??getPatchOnOff_1:
   \   0000001C   0120A0E3           MOV      R2,#+1
   \   00000020   500102E0           AND      R0,R2,R0, ASR R1
   \   00000024   1EFF2FE1           BX       LR               ;; return
   2052          }
   2053          
   2054          //检查ptc所对应的补丁是否存在

   \                                 In segment CODE, align 4, keep-with-next
   2055          int isPatchExistedByID(char *patchID)
   2056          {
   \                     isPatchExistedByID:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2057          	PTC_CONFIG *ptcfg=ptcfgtop;
   \   00000008   ........           LDR      R0,??DataTable31  ;; ptcfgtop
   \   0000000C   005090E5           LDR      R5,[R0, #+0]
   \   00000010   000000EA           B        ??isPatchExistedByID_0
   2058          	while(ptcfg)
   2059          	{
   2060          		if(!strncmpNoCase(ptcfg->patchInfo->patchID, patchID, 16))
   2061          			return 1;
   2062          		ptcfg=ptcfg->next;
   \                     ??isPatchExistedByID_1:
   \   00000014   045095E5           LDR      R5,[R5, #+4]
   \                     ??isPatchExistedByID_0:
   \   00000018   000055E3           CMP      R5,#+0
   \   0000001C   0800000A           BEQ      ??isPatchExistedByID_2
   \   00000020   1C0095E5           LDR      R0,[R5, #+28]
   \   00000024   1020A0E3           MOV      R2,#+16
   \   00000028   0410A0E1           MOV      R1,R4
   \   0000002C   800080E2           ADD      R0,R0,#+128
   \   00000030   ........           _BLF     strncmpNoCase,??strncmpNoCase??rA
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF1A           BNE      ??isPatchExistedByID_1
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   3080BDE8           POP      {R4,R5,PC}
   2063          	}
   2064          	return 0;
   \                     ??isPatchExistedByID_2:
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   3080BDE8           POP      {R4,R5,PC}       ;; return
   2065          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     cfg_buf

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     ptcfgtop

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     ptcfgtop

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   ........           DC32     STR_CHOICE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   ........           DC32     STR_SUBMENU2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   ........           DC32     STR_SUBMENU1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   ........           DC32     cfg_buf

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     ptcfgtop

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ver=">`:
   \   00000000   7665723D00         DC8 "ver="
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "offset ">`:
   \   00000000   6F6666736574       DC8 "offset "
   \              2000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "0:\\\\Misc\\\\Patches\\\\">`:
   \   00000000   303A5C4D6973       DC8 "0:\\Misc\\Patches\\"
   \              635C50617463
   \              6865735C00  
   \   00000011   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000021   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000031   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000041   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000051   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000061   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000071   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000      

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ptc\\\\">`:
   \   00000000   7074635C00         DC8 "ptc\\"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "configs.txt">`:
   \   00000000   636F6E666967       DC8 "configs.txt"
   \              732E74787400

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "mem=">`:
   \   00000000   6D656D3D00         DC8 "mem="
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "version=">`:
   \   00000000   76657273696F       DC8 "version="
   \              6E3D00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   63703D00           DC8 "cp="

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "copyright=">`:
   \   00000000   636F70797269       DC8 "copyright="
   \              6768743D00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   69643D00           DC8 "id="

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "info">`:
   \   00000000   696E666F00         DC8 "info"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "memory=">`:
   \   00000000   6D656D6F7279       DC8 "memory="
   \              3D00        

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   20622000           DC8 " b "

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " byte ">`:
   \   00000000   206279746520       DC8 " byte "
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " int ">`:
   \   00000000   20696E742000       DC8 " int "
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   20692000           DC8 " i "

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   206F2000           DC8 " o "

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " option ">`:
   \   00000000   206F7074696F       DC8 " option "
   \              6E2000      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " co ">`:
   \   00000000   20636F2000         DC8 " co "
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " color ">`:
   \   00000000   20636F6C6F72       DC8 " color "
   \              2000        

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   20612000           DC8 " a "

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " address ">`:
   \   00000000   206164647265       DC8 " address "
   \              73732000    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "mask=">`:
   \   00000000   6D61736B3D00       DC8 "mask="
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   6D6C3D00           DC8 "ml="

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "maxlen=">`:
   \   00000000   6D61786C656E       DC8 "maxlen="
   \              3D00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " sf ">`:
   \   00000000   2073662000         DC8 " sf "
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " selectfile ">`:
   \   00000000   2073656C6563       DC8 " selectfile "
   \              7466696C6520
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " sd ">`:
   \   00000000   2073642000         DC8 " sd "
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " selectdir ">`:
   \   00000000   2073656C6563       DC8 " selectdir "
   \              746469722000

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   20732000           DC8 " s "

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " string ">`:
   \   00000000   20737472696E       DC8 " string "
   \              672000      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   20752000           DC8 " u "

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " ustring ">`:
   \   00000000   207573747269       DC8 " ustring "
   \              6E672000    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   20682000           DC8 " h "

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " hex ">`:
   \   00000000   206865782000       DC8 " hex "
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " size=">`:
   \   00000000   2073697A653D       DC8 " size="
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "patch=">`:
   \   00000000   70617463683D       DC8 "patch="
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "patch ">`:
   \   00000000   706174636820       DC8 "patch "
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   702000             DC8 "p "

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   703D00             DC8 "p="

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   6F662000           DC8 "of "
   2066          
   2067          #ifdef	WINTEL_DEBUG
   2068          
   2069          void showSubMenuItem(PATCH_SUBMENU *subMenuItem)
   2070          {
   2071          	PATCH_ITEM *patchItem=subMenuItem->item;
   2072          	if(subMenuItem->smName[0])
   2073          		printf("\nSubMenu: %s\n", subMenuItem->smName);
   2074          	while(patchItem)
   2075          	{
   2076          		if(patchItem->itemName[0])
   2077          			printf("ItemName: %s\n", patchItem->itemName);
   2078          		if(patchItem->bytePos)
   2079          			printf("bytePos: %d\n", patchItem->bytePos);
   2080          		switch(patchItem->itemType)
   2081          		{
   2082          		case TYPE_SUBMENU:
   2083          		case TYPE_TP:
   2084          			showSubMenuItem((PATCH_SUBMENU *)patchItem->itemData);
   2085          			break;
   2086          		case TYPE_PRE:
   2087          			{
   2088          				PREPARE_DATA *preData=(PREPARE_DATA *)patchItem->itemData;
   2089          				if(preData)
   2090          				{
   2091          					PREPARE_ITEM *preItem=preData->prepareItem;
   2092          					printf("\nprepareItem: %s\n", preData->useAs);
   2093          					while(preItem)
   2094          					{
   2095          						printf("data: %d\n", preItem->data);
   2096          						printf("name: %s\n", preItem->itemName);
   2097          						preItem=preItem->next;
   2098          					}
   2099          				}
   2100          				break;
   2101          			}
   2102          		case TYPE_CHECKBOX:
   2103          			{
   2104          				DATA_CHECKBOX *chkbox=(DATA_CHECKBOX *)patchItem->itemData;
   2105          				if(chkbox)
   2106          				{
   2107          					printf("ON/OFF: %d\n", chkbox->onoff);
   2108          					printf("bitPos: %d\n", chkbox->bitPos);
   2109          				}
   2110          				break;
   2111          			}
   2112          		case TYPE_POS:
   2113          			{
   2114          				DATA_POS *pos=(DATA_POS *)patchItem->itemData;
   2115          				if(pos)
   2116          				{
   2117          					if(pos->off)
   2118          						printf("POS is OFF");
   2119          					printf("X: %d\n", pos->x);
   2120          					printf("Y: %d\n", pos->y);
   2121          					printf("W: %d\n", pos->w);
   2122          					printf("H: %d\n", pos->h);
   2123          				}
   2124          				break;
   2125          			}
   2126          		case TYPE_BYTE:
   2127          			{
   2128          				DATA_BYTE *dbyte=(DATA_BYTE *)patchItem->itemData;
   2129          				if(dbyte)
   2130          				{
   2131          					printf("initData: %d\n", dbyte->initData);
   2132          					printf("min: %d\n", dbyte->min);
   2133          					printf("max: %d\n", dbyte->max);
   2134          				}
   2135          				break;
   2136          			}
   2137          		case TYPE_INT:
   2138          			{
   2139          				DATA_INT *dint=(DATA_INT *)patchItem->itemData;
   2140          				if(dint)
   2141          				{
   2142          					printf("initData: %d\n", dint->initData);
   2143          					printf("min: %d\n", dint->min);
   2144          					printf("max: %d\n", dint->max);
   2145          				}
   2146          				break;
   2147          			}
   2148          		case TYPE_CBOX:
   2149          			{
   2150          				DATA_CBOX *cbox=(DATA_CBOX *)patchItem->itemData;
   2151          				if(cbox)
   2152          				{
   2153          					CBOX_ITEM *citem=cbox->cboxitem;
   2154          					printf("initData: %d\n", cbox->initData);
   2155          					while(citem)
   2156          					{
   2157          						printf("cbName: %s\n", citem->name);
   2158          						printf("cbData: %d\n", citem->data);
   2159          						citem=citem->next;
   2160          					}
   2161          				}
   2162          				break;
   2163          			}
   2164          		case TYPE_DRSTR:
   2165          			{
   2166          				DATA_DRSTR *dstr=(DATA_DRSTR *)patchItem->itemData;
   2167          				if(dstr)
   2168          					printf("DirectString: %s\n", dstr->str);
   2169          				break;
   2170          			}
   2171          		case TYPE_COLOR:
   2172          			{
   2173          				DATA_COLOR *color=(DATA_COLOR *)patchItem->itemData;
   2174          				if(color)
   2175          					printf("Color: %08X\n", *(int *)color->color);
   2176          				break;
   2177          			}
   2178          		case TYPE_ADDRESS:
   2179          			{
   2180          				DATA_ADDRESS *addr=(DATA_ADDRESS *)patchItem->itemData;
   2181          				if(addr)
   2182          					printf("Addr: %X\n", addr->addr);
   2183          				break;
   2184          			}
   2185          		case TYPE_STRING:
   2186          			{
   2187          				DATA_STRING *str=(DATA_STRING *)patchItem->itemData;
   2188          				if(str)
   2189          				{
   2190          					printf("String: %s\n", str->string);
   2191          					printf("MaxLen: %d\n", str->maxlen);
   2192          				}
   2193          				break;
   2194          			}
   2195          		case TYPE_UNICODE:
   2196          			{
   2197          				DATA_UNICODE *uni=(DATA_UNICODE *)patchItem->itemData;
   2198          				if(uni)
   2199          				{
   2200          					printf("UniStr: %s\n", uni->ustr);
   2201          					printf("MaxLen: %d\n", uni->maxlen);
   2202          				}
   2203          				break;
   2204          			}
   2205          		case TYPE_HEX:
   2206          			{
   2207          				DATA_HEX *hex=(DATA_HEX *)patchItem->itemData;
   2208          				if(hex)
   2209          				{
   2210          					unsigned char *s=hex->hex;
   2211          					int i=0;
   2212          					int max=(hex->maxlen?hex->maxlen:1);
   2213          					printf("HexData:");
   2214          					for(;i<max;i++)
   2215          					{
   2216          						printf(PERCENT_02X, s[i]);
   2217          					}
   2218          					printf("\nMaxLen: %d\n", hex->maxlen);
   2219          				}
   2220          				break;
   2221          			}
   2222          		case TYPE_SF:
   2223          			{
   2224          				DATA_SF *fs=(DATA_SF *)patchItem->itemData;
   2225          				printf("FilePath: %s\n", fs->path);
   2226          				printf("Mask: %s\n", fs->mask);
   2227          				printf("Maxlen: %d\n", fs->maxlen);
   2228          				break;
   2229          			}
   2230          		case TYPE_SL:
   2231          			{
   2232          				DATA_SL *sl=(DATA_SL *)patchItem->itemData;
   2233          				if(sl)
   2234          				{
   2235          					printf("initData: %d\n", sl->initData);
   2236          					printf("min: %d\n", sl->min);
   2237          					printf("max: %d\n", sl->max);
   2238          				}
   2239          				break;
   2240          			}
   2241          		case TYPE_MS:
   2242          			{
   2243          				DATA_MS *ms=(DATA_MS *)patchItem->itemData;
   2244          				if(ms)
   2245          				{
   2246          					printf("ms: %d\n", ms->ms);
   2247          				}
   2248          				break;
   2249          			}
   2250          		case TYPE_POSB:
   2251          			{
   2252          				DATA_POS *pos=(DATA_POS *)patchItem->itemData;
   2253          				if(pos)
   2254          				{
   2255          					if(pos->off)
   2256          						printf("POS IS OFF");
   2257          					printf("X: %d\n", pos->x);
   2258          					printf("Y: %d\n", pos->y);
   2259          					printf("W: %d\n", pos->w);
   2260          					printf("H: %d\n", pos->h);
   2261          				}
   2262          				break;
   2263          			}
   2264          		case TYPE_BYTES:
   2265          			{
   2266          				DATA_BYTES *dbytes=(DATA_BYTES *)patchItem->itemData;
   2267          				if(dbytes)
   2268          				{
   2269          					int i=1;
   2270          					printf("type: Bytes\nDATA:\n%d", dbytes->bytes[0]);
   2271          					for(;i<dbytes->len;i++)
   2272          						printf(",%d",dbytes->bytes[i]);
   2273          					printf("\n");
   2274          				}
   2275          				break;
   2276          			}
   2277          		case TYPE_INTS:
   2278          			{
   2279          				DATA_INTS *dints=(DATA_INTS *)patchItem->itemData;
   2280          				if(dints)
   2281          				{
   2282          					int i=1;
   2283          					printf("type: Ints\nDATA:\n%d", dints->ints[0]);
   2284          					for(;i<dints->len;i++)
   2285          						printf(",%d",dints->ints[i]);
   2286          					printf("\n");
   2287          				}
   2288          				break;
   2289          			}
   2290          		case TYPE_CONST:
   2291          			{
   2292          				DATA_CONST *dconst=(DATA_CONST *)patchItem->itemData;
   2293          				if(dconst)
   2294          				{
   2295          					printf("Const: %d\n", dconst->data);
   2296          					printf("Const, LEN: %d\n", dconst->len);
   2297          				}
   2298          				break;
   2299          			}
   2300          		}
   2301          		patchItem=patchItem->next;
   2302          	}
   2303          }
   2304          int main(void)
   2305          {
   2306          	PTC_CONFIG *ptcfg;
   2307          	getAllPatchData();
   2308          	ptcfg=ptcfgtop;
   2309          	while(ptcfg)
   2310          	{
   2311          		printf("\nname: %s\n", ptcfg->patchInfo->patchName);
   2312          		printf("author: %s\n", ptcfg->patchInfo->author);
   2313          		printf("Ver: %s\n", ptcfg->patchInfo->version);
   2314          		if(ptcfg->patchInfo->info)
   2315          			printf("Info: %s\n", ptcfg->patchInfo->info);
   2316          		printf("ID: %s\n", ptcfg->patchInfo->patchID);
   2317          		if(ptcfg->mainitem.item)
   2318          			showSubMenuItem(&ptcfg->mainitem);
   2319          		savePatchConfig(ptcfg);
   2320          		ptcfg=ptcfg->next;
   2321          	}
   2322          	fuckThemAll();
   2323          	return 0;
   2324          }
   2325          #endif
   2326          

   Maximum stack usage in bytes:

     Function             CSTACK
     --------             ------
     addInfoToPatchInfo      16
     addItemToCBox            0
     addItemToConfig         28
     addPatchConfigList       4
     addPreDataToCBoxItem    24
     addPreItemToData         0
     addPrepareData          32
     addToPatchInfo          24
     cboxItemColon           28
     doItemJob              180
     doSubMenuJob            28
     doTemplateWork          24
     findTemplate            16
     freePatchItem           12
     freeSubMenuItem         12
     fuckThemAll             12
     getAllPatchData          8
     getCurCBoxItem           0
     getInitCBoxItem          4
     getMaxCBoxItem           0
     getPatchConfigItem       0
     getPatchOnOff            0
     isCurrectItem            8
     isPatchExistedByID      12
     isPrepareItem            0
     isThatItem               0
     loadConfig             188
     readConfig              28
     reloadThisPatch         24
     setPatchOnOff           16
     sortPatchConfigList     12
     subMenuCopy             40
     swapPatchConfigList     32


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     cfg_buf                        49152
     ptcfgtop                           4
     loadConfig                       224
     addPatchConfigList               120
     addToPatchInfo                   464
     addPreItemToData                  56
     addItemToConfig                  180
     addPrepareData                   360
     addPreDataToCBoxItem             228
     addItemToCBox                     56
     cboxItemColon                    280
     isThatItem                        48
     findTemplate                     100
     isCurrectItem                    112
     doItemJob                       7692
     doSubMenuJob                     576
     addInfoToPatchInfo                84
     isPrepareItem                     84
     doTemplateWork                   584
     subMenuCopy                     1264
     readConfig                       892
     freeSubMenuItem                  156
     freePatchItem                    176
     reloadThisPatch                  268
     swapPatchConfigList              144
     sortPatchConfigList               96
     fuckThemAll                      108
     getPatchConfigItem                56
     getMaxCBoxItem                    36
     getCurCBoxItem                    36
     getInitCBoxItem                   84
     getAllPatchData                   68
     setPatchOnOff                     60
     getPatchOnOff                     40
     isPatchExistedByID                76
     ??DataTable0                       4
     ??DataTable4                       4
     ??DataTable16                      4
     ??DataTable22                      4
     ??DataTable23                      4
     ??DataTable24                      4
     ??DataTable25                      4
     ??DataTable31                      4
     ?<Constant "ver=">                 8
     ?<Constant "offset ">              8
     ?<Constant "0:\\Misc\\Patches\\">
                                      128
     ?<Constant "ptc\\">                8
     ?<Constant "configs.txt">         12
     ?<Constant "mem=">                 8
     ?<Constant "version=">            12
     ?<Constant "cp=">                  4
     ?<Constant "copyright=">          12
     ?<Constant "id=">                  4
     ?<Constant "info">                 8
     ?<Constant "memory=">              8
     ?<Constant " b ">                  4
     ?<Constant " byte ">               8
     ?<Constant " int ">                8
     ?<Constant " i ">                  4
     ?<Constant " o ">                  4
     ?<Constant " option ">            12
     ?<Constant " co ">                 8
     ?<Constant " color ">              8
     ?<Constant " a ">                  4
     ?<Constant " address ">           12
     ?<Constant "mask=">                8
     ?<Constant "ml=">                  4
     ?<Constant "maxlen=">              8
     ?<Constant " sf ">                 8
     ?<Constant " selectfile ">        16
     ?<Constant " sd ">                 8
     ?<Constant " selectdir ">         12
     ?<Constant " s ">                  4
     ?<Constant " string ">            12
     ?<Constant " u ">                  4
     ?<Constant " ustring ">           12
     ?<Constant " h ">                  4
     ?<Constant " hex ">                8
     ?<Constant " size=">               8
     ?<Constant "patch=">               8
     ?<Constant "patch ">               8
     ?<Constant "p ">                   3
     ?<Constant "p=">                   3
     ?<Constant "of ">                  4
      Others                          360

 
 15 188 bytes in segment CODE
    434 bytes in segment DATA_C
 49 156 bytes in segment DATA_Z
     12 bytes in segment INITTAB
 
 14 840 bytes of CODE  memory (+ 360 bytes shared)
    434 bytes of CONST memory
 49 156 bytes of DATA  memory

Errors: none
Warnings: none
