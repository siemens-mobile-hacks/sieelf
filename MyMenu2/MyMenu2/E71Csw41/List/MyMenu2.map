Error[e46]: Undefined external "kill_data" referred in main ( D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71Csw41\Obj\main.r79 )
Error[e46]: Undefined external "ELF_BEGIN" referred in main ( D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71Csw41\Obj\main.r79 )
################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  12/Apr/2012  21:08:04                             #
#           Target CPU    =  ARM                                               #
#           List file     =  D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71Csw41\Lis #
#                            t\MyMenu2.map                                     #
#           Output file 1 =  D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71Csw41\Exe #
#                            \MyMenu2.elf                                      #
#                            Format: elf, variant: -yas                        #
#           Output file 2 =  D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71Csw41\Exe #
#                            \MyMenu2.a79                                      #
#                            Format: intel-extended                            #
#           Command line  =  D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71Csw41\Obj #
#                            \entry.r79                                        #
#                            D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71Csw41\Obj #
#                            \main.r79                                         #
#                            -o                                                #
#                            D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71Csw41\Exe #
#                            \MyMenu2.a79                                      #
#                            -Fintel-extended -l                               #
#                            D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71Csw41\Lis #
#                            t\MyMenu2.map                                     #
#                            -xmsnio                                           #
#                            "-ID:\Program Files\IAR\Embedded Workbench 4.0 Ev #
#                            aluation\ARM\LIB\"                                #
#                            -f                                                #
#                            D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71Csw41.xcl #
#                            (-carm                                            #
#                            -Z(CODE)ENTRYPOINT_ONLINE_STATUS=A0863034-FFFFFFF #
#                            F                                                 #
#                            -Z(CODE)ENTRYPOINT_ONLINE_STATUS1=A0863AB4-FFFFFF #
#                            FF                                                #
#                            -Z(CODE)ENTRYPOINT_SAT=A08640B4-FFFFFFFF          #
#                            -Z(CODE)SAT_PROC=A086411C-FFFFFFFF                #
#                            -Z(CODE)SAT_LGP=A08640E4-FFFFFFFF                 #
#                            -Z(CODE)SAT_LGP1=A08640F4-FFFFFFFF                #
#                            -Z(CODE)SAT_LGP2=A0864104-FFFFFFFF                #
#                            -Z(CODE)CODE,DATA_C,DATA_ID,INITTAB=A1359F00-FFFF #
#                            FFFF                                              #
#                            -Z(DATA)DATA_Z,DATA_I=A8D80580-FFFFFFFF)          #
#                            -Oelf,as=D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71 #
#                            Csw41\Exe\MyMenu2.elf                             #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71Csw41\Obj\entry.r79
  PROGRAM MODULE, NAME : entry

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A1359F00 - A1359F17 (0x18 bytes), align: 2
  Segment part 0. ROOT.       Intra module refs:   Segment part 1
                                                   Segment part 3
                                                   Segment part 4
                                                   Segment part 5
    -------------------------------------------------------------------------
ENTRYPOINT_SAT
  Relative segment, address: A08640B4 - A08640B7 (0x4 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
SAT_PROC
  Relative segment, address: A086411C - A0864123 (0x8 bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
SAT_LGP
  Relative segment, address: A08640E4 - A08640EB (0x8 bytes), align: 2
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
SAT_LGP1
  Relative segment, address: A08640F4 - A08640FB (0x8 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
SAT_LGP2
  Relative segment, address: A0864104 - A086410F (0xc bytes), align: 2
  Segment part 5. ROOT.

    *************************************************************************

  FILE NAME : D:\SVN\SieELF\SieELF\MyMenu2\MyMenu2\E71Csw41\Obj\main.r79
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A1359F18 - A1359F8F (0x78 bytes), align: 2
  Segment part 16.            Intra module refs:   strpath_2ws
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           utf8_2str               A1359F18 
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A1359F90 - A135A003 (0x74 bytes), align: 2
  Segment part 18.            Intra module refs:   read_cfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddtoMenuList           A1359F90 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A004 - A135A033 (0x30 bytes), align: 2
  Segment part 20.            Intra module refs:   maincsm_onclose
                                                   read_cfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FreeMenuList            A135A004 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A034 - A135A053 (0x20 bytes), align: 2
  Segment part 22.            Intra module refs:   menu_iconhndl
                                                   menu_onkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_mlitem              A135A034 
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A054 - A135A083 (0x30 bytes), align: 2
  Segment part 24.            Intra module refs:   read_cfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strchrinline            A135A054 
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A084 - A135A0A3 (0x20 bytes), align: 2
  Segment part 26.            Intra module refs:   read_cfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gotoRealPos             A135A084 
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A0A4 - A135A0C3 (0x20 bytes), align: 2
  Segment part 28.            Intra module refs:   CheckType
                                                   read_cfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gotoLineEnd             A135A0A4 
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A0C4 - A135A11F (0x5c bytes), align: 2
  Segment part 30.            Intra module refs:   read_cfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CheckType               A135A0C4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A120 - A135A33B (0x21c bytes), align: 2
  Segment part 32.            Intra module refs:   maincsm_oncreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_cfg                A135A120 
               stack 1 = 00000000 ( 00000048 )
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A33C - A135A393 (0x58 bytes), align: 2
  Segment part 34.            Intra module refs:   GetFunctionPointByName
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strncmpNoCase           A135A33C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A394 - A135A3EF (0x5c bytes), align: 2
  Segment part 36.            Intra module refs:   run_ml
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetFunctionPointByName
                                   A135A394 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A3F0 - A135A403 (0x14 bytes), align: 2
  Segment part 38.            Intra module refs:   run_ml
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_address             A135A3F0 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_shortcut            
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A404 - A135A447 (0x44 bytes), align: 2
  Segment part 42.            Intra module refs:   run_ml
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           chr2num                 A135A404 
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A448 - A135A54B (0x104 bytes), align: 2
  Segment part 44.            Intra module refs:   menu_onkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_ml                  A135A448 
               stack 1 = 00000000 ( 00000030 )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A54C - A135A593 (0x48 bytes), align: 2
  Segment part 46.            Intra module refs:   run_file
                                                   run_folder
                                                   run_mymenu2_editor
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strpath_2ws             A135A54C 
               stack 1 = 00000000 ( 0000010C )
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A594 - A135A603 (0x70 bytes), align: 2
  Segment part 48.            Intra module refs:   run_ml
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_folder              A135A594 
               stack 1 = 00000000 ( 00000074 )
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A604 - A135A63F (0x3c bytes), align: 2
  Segment part 50.            Intra module refs:   run_ml
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_file                A135A604 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A640 - A135A6A7 (0x68 bytes), align: 2
  Segment part 52.            Intra module refs:   menu_onkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_mymenu2_editor      A135A640 
               stack 1 = 00000000 ( 00000034 )
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A6A8 - A135A777 (0xd0 bytes), align: 2
  Segment part 54.            Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           menu_onkey              A135A6A8 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 55. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A778 - A135A78B (0x14 bytes), align: 2
  Segment part 56.            Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           menu_ghook              A135A778 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A78C - A135A817 (0x8c bytes), align: 2
  Segment part 58.            Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           menu_iconhndl           A135A78C 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 59. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A818 - A135A877 (0x60 bytes), align: 2
  Segment part 60.            Intra module refs:   MAINCSM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_oncreate        A135A818 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 61. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A878 - A135A8A7 (0x30 bytes), align: 2
  Segment part 62.            Intra module refs:   MAINCSM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_onmessage       A135A878 
    -------------------------------------------------------------------------
CODE
  Segment part 63. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A8A8 - A135A8C3 (0x1c bytes), align: 2
  Segment part 64.            Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Killer                  A135A8A8 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 65. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A8C4 - A135A8EF (0x2c bytes), align: 2
  Segment part 66.            Intra module refs:   MAINCSM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_onclose         A135A8C4 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 67. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A94C - A135A953 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   menu_sk
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A954 - A135A95B (0x8 bytes), align: 2
  Segment part 3.             Intra module refs:   menu_sk
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A95C - A135A99F (0x44 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 12
                                                   UpdateCSMname
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAINCSM                 A135A964 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A9A0 - A135A9B7 (0x18 bytes), align: 2
  Segment part 5.             Intra module refs:   read_cfg
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A9B8 - A135A9DF (0x28 bytes), align: 2
  Segment part 6.             Intra module refs:   run_mymenu2_editor
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A9E0 - A135A9FF (0x20 bytes), align: 2
  Segment part 7.             Intra module refs:   menu_onkey
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135AA00 - A135AA07 (0x8 bytes), align: 2
  Segment part 8.             Intra module refs:   menu_iconhndl
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135AA08 - A135AA13 (0xc bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           menusoftkeys            A135AA08 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135AA14 - A135AA2B (0x18 bytes), align: 2
  Segment part 10.            Intra module refs:   menu_skt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           menu_sk                 A135AA14 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135AA2C - A135AA33 (0x8 bytes), align: 2
  Segment part 11.            Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           menu_skt                A135AA2C 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135AA34 - A135AA73 (0x40 bytes), align: 2
  Segment part 12.            Intra module refs:   maincsm_oncreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main_menu               A135AA48 
           menuheader              A135AA34 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135AA74 - A135AA77 (0x4 bytes), align: 2
  Segment part 13.            Intra module refs:   MAINCSM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           minus11                 A135AA74 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135AA78 - A135AA97 (0x20 bytes), align: 2
  Segment part 14.            Intra module refs:   MAINCSM
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_name_body       A135AA78 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A8F0 - A135A90B (0x1c bytes), align: 2
  Segment part 68.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UpdateCSMname           A135A8F0 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 69. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A90C - A135A94B (0x40 bytes), align: 2
  Segment part 70.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    A135A90C        Segment part 0 (entry)
               stack 1 = 00000000 ( 00000038 )
    -------------------------------------------------------------------------
CODE
  Segment part 71. NOT NEEDED.Intra module refs:   Killer
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module   CODE
------   ----
        (Rel)
entry      64
main    2 944
------  -----
Total:  3 008


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  menu_onkey
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  menu_ghook
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  menu_iconhndl
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_oncreate
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_onmessage
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  Killer
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_onclose
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000018
  01  utf8_2str
      | Stack used (prev) :  00000018
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000018


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000018
  01  AddtoMenuList
      | Stack used (prev) :  00000018
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000034


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000034
  01  FreeMenuList
      | Stack used (prev) :  00000034
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000040


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000040
  01  get_mlitem
      | Stack used (prev) :  00000040
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000040


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000040
  01  strchrinline
      | Stack used (prev) :  00000040
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000040


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000040
  01  gotoRealPos
      | Stack used (prev) :  00000040
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000040


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000040
  01  gotoLineEnd
      | Stack used (prev) :  00000040
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00000040


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000040
  01  CheckType
      | Stack used (prev) :  00000040
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000044


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000044
  01  read_cfg
      | Stack used (prev) :  00000044
      | + function block  :  00000048
  <-Sub-tree of type: Function tree
    | Stack used          :  0000008C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000008C
  01  strncmpNoCase
      | Stack used (prev) :  0000008C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000090


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000090
  01  GetFunctionPointByName
      | Stack used (prev) :  00000090
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  000000A0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000A0
  01  run_address
      | Stack used (prev) :  000000A0
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000000A4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000A4
  01  chr2num
      | Stack used (prev) :  000000A4
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000000A4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000A4
  01  run_ml
      | Stack used (prev) :  000000A4
      | + function block  :  00000030
  <-Sub-tree of type: Function tree
    | Stack used          :  000000D4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000D4
  01  strpath_2ws
      | Stack used (prev) :  000000D4
      | + function block  :  0000010C
  <-Sub-tree of type: Function tree
    | Stack used          :  000001E0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000001E0
  01  run_folder
      | Stack used (prev) :  000001E0
      | + function block  :  00000074
  <-Sub-tree of type: Function tree
    | Stack used          :  00000254


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000254
  01  run_file
      | Stack used (prev) :  00000254
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000260


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000260
  01  run_mymenu2_editor
      | Stack used (prev) :  00000260
      | + function block  :  00000034
  <-Sub-tree of type: Function tree
    | Stack used          :  00000294


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000294
  01  UpdateCSMname
      | Stack used (prev) :  00000294
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000298


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000298
  01  main
      | Stack used (prev) :  00000298
      | + function block  :  00000038
  <-Sub-tree of type: Function tree
    | Stack used          :  000002D0




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
ENTRYPOINT_SAT                     A08640B4 - A08640B7           4   rel    2
SAT_LGP                            A08640E4 - A08640EB           8   rel    2
SAT_LGP1                           A08640F4 - A08640FB           8   rel    2
SAT_LGP2                           A0864104 - A086410F           C   rel    2
SAT_PROC                           A086411C - A0864123           8   rel    2
CODE                               A1359F00 - A135A94B         A4C   rel    2
DATA_C                             A135A94C - A135AA97         14C   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 3 008 bytes of CODE memory

Errors: 2
Warnings: none

